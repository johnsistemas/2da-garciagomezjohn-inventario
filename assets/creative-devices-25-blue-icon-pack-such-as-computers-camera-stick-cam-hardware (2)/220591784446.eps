%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Blue_8-Template_252370240979.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Devices 25 Blue icon pack  Such As computers. camera. stick. cam. hardware</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Devices 25 Blue icon pack  Such As computers. camera. stick. cam. hardware</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>camera</rdf:li>
               <rdf:li> film</rdf:li>
               <rdf:li> photo</rdf:li>
               <rdf:li> roll</rdf:li>
               <rdf:li> computers</rdf:li>
               <rdf:li> connected</rdf:li>
               <rdf:li> devices</rdf:li>
               <rdf:li> hardware</rdf:li>
               <rdf:li> stick</rdf:li>
               <rdf:li> computers</rdf:li>
               <rdf:li> devices</rdf:li>
               <rdf:li> gadget</rdf:li>
               <rdf:li> hardware</rdf:li>
               <rdf:li> monitor</rdf:li>
               <rdf:li> cam</rdf:li>
               <rdf:li> camera</rdf:li>
               <rdf:li> devices</rdf:li>
               <rdf:li> computers</rdf:li>
               <rdf:li> devices</rdf:li>
               <rdf:li> hardware</rdf:li>
               <rdf:li> removed</rdf:li>
               <rdf:li> stick</rdf:li>
               <rdf:li> computers</rdf:li>
               <rdf:li> connected</rdf:li>
               <rdf:li> devices</rdf:li>
               <rdf:li> gadget</rdf:li>
               <rdf:li> hardware</rdf:li>
               <rdf:li> device</rdf:li>
               <rdf:li> presentation</rdf:li>
               <rdf:li> projector</rdf:li>
               <rdf:li> computers</rdf:li>
               <rdf:li> connected</rdf:li>
               <rdf:li> devices</rdf:li>
               <rdf:li> disc</rdf:li>
               <rdf:li> gadget</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T21:26:45+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T21:26:45+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T21:26:45+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;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&#xA;VdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:98669F3FDE77ED1181BCD970F5CC96A3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:98669F3FDE77ED1181BCD970F5CC96A3</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0398668a-90ff-764e-b4d3-c92c345188bc</stRef:instanceID>
            <stRef:documentID>xmp.did:0398668a-90ff-764e-b4d3-c92c345188bc</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:304a2dca-86d8-ed4d-81af-2e8a745e790f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:27:30+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b72871e2-fb1f-f441-b043-e282290d0043</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:31:02+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0398668a-90ff-764e-b4d3-c92c345188bc</stEvt:instanceID>
                  <stEvt:when>2022-09-05T12:28:11+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:98669F3FDE77ED1181BCD970F5CC96A3</stEvt:instanceID>
                  <stEvt:when>2022-12-09T21:26:45+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
271.045 86.0991 mo
261.366 86.0991 li
261.366 68.9888 li
271.045 68.9888 li
271.045 71.353 li
264.163 71.353 li
264.163 76.0107 li
270.612 76.0107 li
270.612 78.3516 li
264.163 78.3516 li
264.163 83.7231 li
271.045 83.7231 li
271.045 86.0991 li
cp
f
276.242 86.0991 mo
273.492 86.0991 li
273.492 67.8887 li
276.242 67.8887 li
276.242 86.0991 li
cp
f
284.365 75.0044 mo
283.491 75.0044 282.791 75.2813 282.264 75.8354 cv
281.738 76.3892 281.424 77.1968 281.322 78.2578 cv
287.197 78.2578 li
287.182 77.189 286.924 76.3794 286.425 75.8296 cv
285.925 75.2793 285.239 75.0044 284.365 75.0044 cv
cp
284.868 86.333 mo
282.855 86.333 281.281 85.7461 280.146 84.5718 cv
279.011 83.3975 278.443 81.7808 278.443 79.7207 cv
278.443 77.6064 278.97 75.9448 280.023 74.7354 cv
281.077 73.5259 282.524 72.9214 284.365 72.9214 cv
286.074 72.9214 287.423 73.4399 288.415 74.4775 cv
289.405 75.5156 289.901 76.9434 289.901 78.7612 cv
289.901 80.2476 li
281.275 80.2476 li
281.314 81.5039 281.654 82.4692 282.293 83.144 cv
282.933 83.8188 283.834 84.1563 284.997 84.1563 cv
285.762 84.1563 286.474 84.0845 287.133 83.9399 cv
287.792 83.7954 288.5 83.5557 289.257 83.2202 cv
289.257 85.4556 li
288.586 85.7754 287.907 86.0015 287.221 86.1343 cv
286.534 86.2666 285.75 86.333 284.868 86.333 cv
cp
f
297.287 86.333 mo
295.328 86.333 293.84 85.7617 292.822 84.6187 cv
291.803 83.4756 291.294 81.8354 291.294 79.6973 cv
291.294 77.5205 291.827 75.8472 292.892 74.6768 cv
293.957 73.5063 295.496 72.9214 297.509 72.9214 cv
298.874 72.9214 300.103 73.1748 301.195 73.6816 cv
300.364 75.894 li
299.202 75.4414 298.242 75.2148 297.485 75.2148 cv
295.246 75.2148 294.126 76.7012 294.126 79.6738 cv
294.126 81.125 294.405 82.2158 294.963 82.9453 cv
295.521 83.6748 296.338 84.0396 297.415 84.0396 cv
298.64 84.0396 299.799 83.7349 300.891 83.1265 cv
300.891 85.5259 li
300.399 85.8145 299.875 86.021 299.317 86.146 cv
298.759 86.2705 298.082 86.333 297.287 86.333 cv
cp
f
307.797 84.1094 mo
308.468 84.1094 309.139 84.0044 309.81 83.7935 cv
309.81 85.8652 li
309.506 85.998 309.114 86.1089 308.634 86.1987 cv
308.154 86.2881 307.657 86.333 307.142 86.333 cv
304.536 86.333 303.233 84.96 303.233 82.2134 cv
303.233 75.2383 li
301.466 75.2383 li
301.466 74.0215 li
303.362 73.0146 li
304.298 70.2764 li
305.995 70.2764 li
305.995 73.1553 li
309.682 73.1553 li
309.682 75.2383 li
305.995 75.2383 li
305.995 82.167 li
305.995 82.8301 306.161 83.3193 306.492 83.6357 cv
306.824 83.9517 307.259 84.1094 307.797 84.1094 cv
cp
f
318.003 72.9214 mo
318.557 72.9214 319.014 72.9604 319.373 73.0381 cv
319.104 75.6011 li
318.713 75.5078 318.308 75.4609 317.886 75.4609 cv
316.786 75.4609 315.895 75.8198 315.212 76.5376 cv
314.529 77.2554 314.188 78.1875 314.188 79.3345 cv
314.188 86.0991 li
311.438 86.0991 li
311.438 73.1553 li
313.591 73.1553 li
313.954 75.4375 li
314.095 75.4375 li
314.523 74.665 315.083 74.0527 315.774 73.6001 cv
316.464 73.1475 317.208 72.9214 318.003 72.9214 cv
cp
f
322.873 79.604 mo
322.873 82.5923 323.977 84.0859 326.185 84.0859 cv
328.369 84.0859 329.461 82.5923 329.461 79.604 cv
329.461 76.647 328.361 75.168 326.161 75.168 cv
325.006 75.168 324.17 75.5508 323.651 76.3149 cv
323.132 77.0801 322.873 78.1758 322.873 79.604 cv
cp
332.294 79.604 mo
332.294 81.7183 331.751 83.3682 330.667 84.5542 cv
329.583 85.7402 328.073 86.333 326.138 86.333 cv
324.928 86.333 323.859 86.0601 322.931 85.5142 cv
322.002 84.9678 321.289 84.1836 320.79 83.1616 cv
320.29 82.1396 320.041 80.9536 320.041 79.604 cv
320.041 77.5049 320.579 75.8667 321.655 74.6885 cv
322.732 73.5103 324.25 72.9214 326.208 72.9214 cv
328.081 72.9214 329.563 73.5239 330.655 74.7295 cv
331.748 75.9346 332.294 77.5596 332.294 79.604 cv
cp
f
345.882 86.0991 mo
343.12 86.0991 li
343.12 78.1406 li
343.12 77.1421 342.919 76.397 342.518 75.9053 cv
342.116 75.4141 341.478 75.168 340.604 75.168 cv
339.441 75.168 338.591 75.5117 338.053 76.1982 cv
337.515 76.8848 337.245 78.0356 337.245 79.6504 cv
337.245 86.0991 li
334.495 86.0991 li
334.495 73.1553 li
336.648 73.1553 li
337.035 74.8521 li
337.175 74.8521 li
337.565 74.2358 338.119 73.7598 338.837 73.4243 cv
339.555 73.0889 340.351 72.9214 341.225 72.9214 cv
344.33 72.9214 345.882 74.501 345.882 77.6611 cv
345.882 86.0991 li
cp
f
351.501 86.0991 mo
348.751 86.0991 li
348.751 73.1553 li
351.501 73.1553 li
351.501 86.0991 li
cp
348.587 69.7261 mo
348.587 69.2344 348.722 68.8564 348.991 68.5908 cv
349.26 68.3257 349.644 68.1929 350.144 68.1929 cv
350.627 68.1929 351.004 68.3257 351.273 68.5908 cv
351.542 68.8564 351.677 69.2344 351.677 69.7261 cv
351.677 70.1943 351.542 70.563 351.273 70.832 cv
351.004 71.1011 350.627 71.2358 350.144 71.2358 cv
349.644 71.2358 349.26 71.1011 348.991 70.832 cv
348.722 70.563 348.587 70.1943 348.587 69.7261 cv
cp
f
359.694 86.333 mo
357.735 86.333 356.247 85.7617 355.229 84.6187 cv
354.211 83.4756 353.702 81.8354 353.702 79.6973 cv
353.702 77.5205 354.234 75.8472 355.299 74.6768 cv
356.364 73.5063 357.903 72.9214 359.917 72.9214 cv
361.282 72.9214 362.511 73.1748 363.603 73.6816 cv
362.772 75.894 li
361.609 75.4414 360.649 75.2148 359.894 75.2148 cv
357.653 75.2148 356.534 76.7012 356.534 79.6738 cv
356.534 81.125 356.813 82.2158 357.371 82.9453 cv
357.929 83.6748 358.746 84.0396 359.823 84.0396 cv
361.048 84.0396 362.206 83.7349 363.299 83.1265 cv
363.299 85.5259 li
362.808 85.8145 362.282 86.021 361.725 86.146 cv
361.167 86.2705 360.489 86.333 359.694 86.333 cv
cp
f
381.909 77.4736 mo
381.909 73.3774 379.993 71.3296 376.163 71.3296 cv
373.74 71.3296 li
373.74 83.7466 li
375.729 83.7466 li
379.85 83.7466 381.909 81.6558 381.909 77.4736 cv
cp
384.858 77.3799 mo
384.858 80.2046 384.075 82.3638 382.507 83.8579 cv
380.938 85.3521 378.679 86.0991 375.729 86.0991 cv
370.943 86.0991 li
370.943 68.9888 li
376.233 68.9888 li
378.956 68.9888 381.074 69.7222 382.589 71.189 cv
384.102 72.6558 384.858 74.7197 384.858 77.3799 cv
cp
f
392.432 75.0044 mo
391.558 75.0044 390.857 75.2813 390.331 75.8354 cv
389.804 76.3892 389.49 77.1968 389.389 78.2578 cv
395.264 78.2578 li
395.248 77.189 394.991 76.3794 394.491 75.8296 cv
393.991 75.2793 393.306 75.0044 392.432 75.0044 cv
cp
392.935 86.333 mo
390.922 86.333 389.348 85.7461 388.212 84.5718 cv
387.077 83.3975 386.51 81.7808 386.51 79.7207 cv
386.51 77.6064 387.036 75.9448 388.09 74.7354 cv
389.144 73.5259 390.591 72.9214 392.432 72.9214 cv
394.14 72.9214 395.489 73.4399 396.481 74.4775 cv
397.472 75.5156 397.968 76.9434 397.968 78.7612 cv
397.968 80.2476 li
389.342 80.2476 li
389.381 81.5039 389.72 82.4692 390.36 83.144 cv
390.999 83.8188 391.901 84.1563 393.063 84.1563 cv
393.828 84.1563 394.54 84.0845 395.199 83.9399 cv
395.858 83.7954 396.567 83.5557 397.323 83.2202 cv
397.323 85.4556 li
396.652 85.7754 395.974 86.0015 395.287 86.1343 cv
394.601 86.2666 393.816 86.333 392.935 86.333 cv
cp
f
403.083 86.0991 mo
398.167 73.1553 li
401.069 73.1553 li
403.702 80.6807 li
404.155 81.9443 404.429 82.9668 404.522 83.7466 cv
404.616 83.7466 li
404.686 83.1851 404.959 82.1631 405.435 80.6807 cv
408.067 73.1553 li
410.993 73.1553 li
406.056 86.0991 li
403.083 86.0991 li
cp
f
414.751 86.0991 mo
412.001 86.0991 li
412.001 73.1553 li
414.751 73.1553 li
414.751 86.0991 li
cp
411.837 69.7261 mo
411.837 69.2344 411.972 68.8564 412.241 68.5908 cv
412.511 68.3257 412.895 68.1929 413.394 68.1929 cv
413.878 68.1929 414.255 68.3257 414.523 68.5908 cv
414.792 68.8564 414.927 69.2344 414.927 69.7261 cv
414.927 70.1943 414.792 70.563 414.523 70.832 cv
414.255 71.1011 413.878 71.2358 413.394 71.2358 cv
412.895 71.2358 412.511 71.1011 412.241 70.832 cv
411.972 70.563 411.837 70.1943 411.837 69.7261 cv
cp
f
422.944 86.333 mo
420.986 86.333 419.498 85.7617 418.479 84.6187 cv
417.462 83.4756 416.952 81.8354 416.952 79.6973 cv
416.952 77.5205 417.485 75.8472 418.55 74.6768 cv
419.615 73.5063 421.153 72.9214 423.167 72.9214 cv
424.532 72.9214 425.761 73.1748 426.854 73.6816 cv
426.022 75.894 li
424.86 75.4414 423.9 75.2148 423.144 75.2148 cv
420.904 75.2148 419.784 76.7012 419.784 79.6738 cv
419.784 81.125 420.063 82.2158 420.622 82.9453 cv
421.179 83.6748 421.997 84.0396 423.073 84.0396 cv
424.298 84.0396 425.457 83.7349 426.55 83.1265 cv
426.55 85.5259 li
426.058 85.8145 425.532 86.021 424.976 86.146 cv
424.417 86.2705 423.74 86.333 422.944 86.333 cv
cp
f
433.783 75.0044 mo
432.909 75.0044 432.209 75.2813 431.683 75.8354 cv
431.155 76.3892 430.842 77.1968 430.74 78.2578 cv
436.615 78.2578 li
436.6 77.189 436.343 76.3794 435.843 75.8296 cv
435.343 75.2793 434.657 75.0044 433.783 75.0044 cv
cp
434.286 86.333 mo
432.273 86.333 430.699 85.7461 429.563 84.5718 cv
428.429 83.3975 427.861 81.7808 427.861 79.7207 cv
427.861 77.6064 428.388 75.9448 429.441 74.7354 cv
430.495 73.5259 431.942 72.9214 433.783 72.9214 cv
435.491 72.9214 436.841 73.4399 437.833 74.4775 cv
438.823 75.5156 439.319 76.9434 439.319 78.7612 cv
439.319 80.2476 li
430.693 80.2476 li
430.732 81.5039 431.071 82.4692 431.712 83.144 cv
432.351 83.8188 433.253 84.1563 434.415 84.1563 cv
435.18 84.1563 435.892 84.0845 436.551 83.9399 cv
437.21 83.7954 437.919 83.5557 438.675 83.2202 cv
438.675 85.4556 li
438.004 85.7754 437.325 86.0015 436.639 86.1343 cv
435.952 86.2666 435.168 86.333 434.286 86.333 cv
cp
f
450.181 82.4126 mo
450.181 83.6768 449.72 84.646 448.8 85.3208 cv
447.878 85.9956 446.56 86.333 444.844 86.333 cv
443.119 86.333 441.734 86.0718 440.688 85.5488 cv
440.688 83.1733 li
442.21 83.8755 443.626 84.2266 444.937 84.2266 cv
446.63 84.2266 447.478 83.7158 447.478 82.6934 cv
447.478 82.3657 447.384 82.0928 447.196 81.874 cv
447.009 81.6558 446.7 81.4297 446.271 81.1953 cv
445.843 80.9614 445.245 80.6963 444.481 80.3994 cv
442.99 79.8223 441.981 79.2451 441.456 78.6675 cv
440.929 78.0903 440.665 77.3413 440.665 76.4204 cv
440.665 75.3125 441.112 74.4526 442.005 73.8398 cv
442.899 73.2275 444.114 72.9214 445.651 72.9214 cv
447.173 72.9214 448.612 73.2295 449.97 73.8457 cv
449.08 75.917 li
447.684 75.3398 446.509 75.0513 445.558 75.0513 cv
444.106 75.0513 443.381 75.4648 443.381 76.2915 cv
443.381 76.6973 443.569 77.0405 443.948 77.3218 cv
444.327 77.6025 445.151 77.9888 446.423 78.4805 cv
447.492 78.894 448.269 79.2725 448.753 79.6152 cv
449.236 79.959 449.595 80.355 449.829 80.8032 cv
450.063 81.252 450.181 81.7886 450.181 82.4126 cv
cp
f
556.341 642.341 mo
657.5 642.341 li
657.5 743.5 li
556.341 743.5 li
556.341 642.341 li
cp
1 1 1 rgb
f
593.77 692.415 mo
593.77 698.99 598.828 704.352 605.201 704.958 cv
604.594 711.331 608.235 717.704 614.508 720.335 cv
611.979 721.043 609.247 721.447 606.415 721.447 cv
590.33 721.447 577.281 708.397 577.281 692.313 cv
577.281 676.229 590.33 663.18 606.415 663.18 cv
622.499 663.18 635.549 676.229 635.549 692.313 cv
635.549 695.146 635.144 697.877 634.436 700.406 cv
631.907 694.337 625.635 690.492 619.06 691.1 cv
618.352 684.828 612.99 679.77 606.415 679.77 cv
599.435 679.77 593.77 685.435 593.77 692.415 cv
cp
.607843 .788235 1 rgb
f
634.335 700.508 mo
635.043 702.328 635.447 704.25 635.447 706.273 cv
635.447 714.67 628.67 721.447 620.273 721.447 cv
618.25 721.447 616.228 721.043 614.508 720.335 cv
609.045 718.008 605.1 712.646 605.1 706.273 cv
605.1 697.979 611.776 691.302 619.869 691.1 cv
626.039 690.998 631.907 694.641 634.335 700.508 cv
cp
1 1 1 rgb
f
606.415 722.763 mo
598.322 722.763 590.735 719.627 584.969 713.86 cv
579.203 708.095 576.067 700.508 576.067 692.415 cv
576.067 684.322 579.203 676.735 584.969 670.969 cv
590.735 665.203 598.322 662.067 606.415 662.067 cv
614.508 662.067 622.095 665.203 627.86 670.969 cv
633.627 676.735 636.763 684.322 636.763 692.415 cv
636.763 695.247 636.357 698.181 635.549 700.912 cv
635.346 701.62 634.638 701.924 634.031 701.822 cv
633.323 701.62 633.02 700.912 633.121 700.305 cv
633.829 697.776 634.233 695.146 634.233 692.516 cv
634.233 677.039 621.791 664.596 606.415 664.596 cv
591.039 664.596 578.596 677.039 578.596 692.415 cv
578.596 707.791 591.039 720.233 606.415 720.233 cv
609.045 720.233 611.675 719.829 614.204 719.121 cv
614.912 718.918 615.62 719.323 615.722 720.031 cv
615.924 720.739 615.519 721.447 614.811 721.549 cv
612.181 722.357 609.247 722.763 606.415 722.763 cv
cp
.117647 .505882 .807843 rgb
f
630.49 707.589 mo
610.259 707.589 li
609.551 707.589 608.943 706.981 608.943 706.273 cv
608.943 705.565 609.551 704.958 610.259 704.958 cv
630.49 704.958 li
631.198 704.958 631.806 705.565 631.806 706.273 cv
631.806 706.981 631.098 707.589 630.49 707.589 cv
cp
f
620.375 717.704 mo
619.667 717.704 619.06 717.098 619.06 716.39 cv
619.06 696.157 li
619.06 695.449 619.667 694.843 620.375 694.843 cv
621.083 694.843 621.689 695.449 621.689 696.157 cv
621.689 716.39 li
621.589 717.098 620.981 717.704 620.375 717.704 cv
cp
f
606.415 706.375 mo
606.415 712.039 609.753 717.098 615.014 719.222 cv
616.732 719.93 618.453 720.233 620.375 720.233 cv
627.962 720.233 634.233 713.962 634.233 706.375 cv
634.233 704.554 633.93 702.732 633.222 701.014 cv
631.098 695.854 626.039 692.313 620.071 692.415 cv
612.585 692.516 606.415 698.687 606.415 706.375 cv
cp
620.375 722.763 mo
618.25 722.763 616.126 722.357 614.103 721.549 cv
607.932 719.02 603.987 713.051 603.987 706.375 cv
603.987 697.271 611.371 689.886 620.476 689.886 cv
627.152 689.886 633.121 693.831 635.649 700.002 cv
636.459 702.024 636.863 704.149 636.863 706.273 cv
636.763 715.378 629.378 722.763 620.375 722.763 cv
cp
f
594.983 710.421 mo
594.781 710.421 594.479 710.32 594.275 710.219 cv
588.408 706.172 584.868 699.597 584.868 692.415 cv
584.868 691.707 585.475 691.1 586.183 691.1 cv
586.891 691.1 587.498 691.707 587.498 692.415 cv
587.498 698.687 590.634 704.554 595.793 708.095 cv
596.4 708.499 596.501 709.309 596.097 709.814 cv
595.793 710.219 595.389 710.421 594.983 710.421 cv
cp
f
625.534 687.458 mo
624.927 687.458 624.421 687.054 624.32 686.548 cv
622.701 680.478 618.25 675.521 612.383 673.396 cv
611.776 673.194 611.371 672.385 611.574 671.778 cv
611.776 671.171 612.585 670.767 613.192 670.969 cv
619.869 673.396 624.927 678.961 626.748 685.84 cv
626.95 686.548 626.545 687.256 625.837 687.356 cv
625.837 687.458 625.635 687.458 625.534 687.458 cv
cp
f
605.1 706.273 mo
601.66 705.97 598.524 704.352 596.197 701.822 cv
593.871 699.293 592.556 695.955 592.556 692.415 cv
592.556 684.727 598.828 678.455 606.516 678.455 cv
609.955 678.455 613.294 679.77 615.924 682.097 cv
618.453 684.423 620.071 687.559 620.375 690.998 cv
620.476 691.707 619.97 692.313 619.262 692.415 cv
618.554 692.516 617.947 692.01 617.846 691.302 cv
617.34 685.435 612.383 680.983 606.516 680.983 cv
600.244 680.983 595.085 686.042 595.085 692.415 cv
595.085 698.282 599.536 703.138 605.403 703.744 cv
606.111 703.846 606.617 704.452 606.516 705.161 cv
606.415 705.869 605.808 706.375 605.1 706.273 cv
cp
f
428.881 642.341 mo
530.04 642.341 li
530.04 743.5 li
428.881 743.5 li
428.881 642.341 li
cp
1 1 1 rgb
f
456.193 677.241 mo
456.193 678.151 456.193 704.25 456.193 705.06 cv
456.193 710.725 459.026 715.682 463.376 718.615 cv
463.376 718.615 li
463.376 718.615 li
468.839 722.357 476.224 722.459 481.888 718.615 cv
481.888 718.615 li
481.888 718.615 li
486.238 715.682 489.07 710.725 489.07 705.06 cv
489.07 686.143 li
489.07 677.241 li
484.315 677.241 460.341 677.241 456.193 677.241 cv
cp
f
463.78 663.382 mo
481.483 663.382 li
481.483 677.342 li
463.78 677.342 li
463.78 663.382 li
cp
.607843 .788235 1 rgb
f
489.07 686.143 mo
496.051 686.143 501.715 691.808 501.715 698.788 cv
501.715 705.768 496.051 711.433 489.07 711.433 cv
488.666 711.433 488.261 711.433 487.856 711.331 cv
481.382 710.725 476.426 705.262 476.426 698.788 cv
476.426 691.707 482.091 686.143 489.07 686.143 cv
cp
1 1 1 rgb
f
481.483 678.556 mo
480.775 678.556 480.168 677.949 480.168 677.241 cv
480.168 664.596 li
464.994 664.596 li
464.994 677.241 li
464.994 677.949 464.388 678.556 463.68 678.556 cv
462.972 678.556 462.364 677.949 462.364 677.241 cv
462.364 663.382 li
462.364 662.674 462.972 662.067 463.68 662.067 cv
481.483 662.067 li
482.191 662.067 482.799 662.674 482.799 663.382 cv
482.799 677.342 li
482.799 677.949 482.191 678.556 481.483 678.556 cv
cp
.117647 .505882 .807843 rgb
f
472.683 722.763 mo
462.972 722.763 454.979 714.771 454.979 705.06 cv
454.979 677.241 li
454.979 676.533 455.587 675.926 456.295 675.926 cv
489.172 675.926 li
489.88 675.926 490.486 676.533 490.486 677.241 cv
490.486 686.143 li
490.486 686.851 489.88 687.458 489.172 687.458 cv
488.463 687.458 487.856 686.851 487.856 686.143 cv
487.856 678.556 li
457.509 678.556 li
457.509 705.06 li
457.509 713.456 464.286 720.233 472.683 720.233 cv
475.718 720.233 478.651 719.323 481.18 717.604 cv
483.607 715.884 485.529 713.557 486.643 710.826 cv
486.946 710.219 487.654 709.915 488.261 710.117 cv
488.868 710.421 489.172 711.129 488.969 711.736 cv
487.654 714.973 485.429 717.704 482.596 719.627 cv
479.662 721.751 476.224 722.763 472.683 722.763 cv
cp
f
489.07 687.356 mo
482.799 687.356 477.64 692.415 477.64 698.788 cv
477.64 704.655 482.091 709.511 487.856 710.117 cv
488.261 710.117 488.564 710.219 488.969 710.219 cv
495.241 710.219 500.4 705.16 500.4 698.788 cv
500.4 692.415 495.342 687.356 489.07 687.356 cv
cp
489.07 712.646 mo
488.564 712.646 488.16 712.646 487.755 712.545 cv
484.315 712.242 481.18 710.623 478.854 708.095 cv
476.526 705.565 475.212 702.227 475.212 698.687 cv
475.212 690.998 481.483 684.727 489.172 684.727 cv
496.859 684.727 503.132 690.998 503.132 698.687 cv
503.132 706.375 496.759 712.646 489.07 712.646 cv
cp
f
468.839 673.498 mo
468.131 673.498 467.523 672.891 467.523 672.183 cv
467.523 668.339 li
467.523 667.631 468.131 667.023 468.839 667.023 cv
469.547 667.023 470.153 667.631 470.153 668.339 cv
470.153 672.183 li
470.153 672.891 469.547 673.498 468.839 673.498 cv
cp
f
476.426 673.498 mo
475.718 673.498 475.11 672.891 475.11 672.183 cv
475.11 668.339 li
475.11 667.631 475.718 667.023 476.426 667.023 cv
477.134 667.023 477.74 667.631 477.74 668.339 cv
477.74 672.183 li
477.74 672.891 477.134 673.498 476.426 673.498 cv
cp
f
496.657 700.002 mo
481.483 700.002 li
480.775 700.002 480.168 699.395 480.168 698.687 cv
480.168 697.979 480.775 697.371 481.483 697.371 cv
496.657 697.371 li
497.365 697.371 497.973 697.979 497.973 698.687 cv
497.973 699.395 497.365 700.002 496.657 700.002 cv
cp
f
301.42 642.341 mo
402.579 642.341 li
402.579 743.5 li
301.42 743.5 li
301.42 642.341 li
cp
1 1 1 rgb
f
322.461 670.969 mo
380.628 670.969 li
380.628 703.846 li
322.461 703.846 li
322.461 670.969 li
cp
f
347.751 711.433 mo
355.338 711.433 li
355.338 721.549 li
347.751 721.549 li
347.751 711.433 li
cp
f
380.628 703.846 mo
380.628 711.433 li
355.338 711.433 li
347.751 711.433 li
322.461 711.433 li
322.461 703.846 li
380.628 703.846 li
cp
.607843 .788235 1 rgb
f
352.809 663.382 mo
357.766 663.382 362.015 666.518 363.532 670.969 cv
363.937 672.183 364.139 673.396 364.139 674.813 cv
364.139 681.085 359.081 686.244 352.708 686.244 cv
346.335 686.244 341.277 681.186 341.277 674.813 cv
341.277 673.498 341.479 672.183 341.884 670.969 cv
343.604 666.518 347.853 663.382 352.809 663.382 cv
cp
f
355.338 722.763 mo
354.63 722.763 354.023 722.155 354.023 721.447 cv
354.023 711.331 li
354.023 710.623 354.63 710.017 355.338 710.017 cv
356.047 710.017 356.653 710.623 356.653 711.331 cv
356.653 721.447 li
356.552 722.155 355.945 722.763 355.338 722.763 cv
cp
.117647 .505882 .807843 rgb
f
347.751 722.763 mo
347.043 722.763 346.437 722.155 346.437 721.447 cv
346.437 711.331 li
346.437 710.623 347.043 710.017 347.751 710.017 cv
348.459 710.017 349.066 710.623 349.066 711.331 cv
349.066 721.447 li
348.965 722.155 348.358 722.763 347.751 722.763 cv
cp
f
359.081 722.763 mo
343.907 722.763 li
343.199 722.763 342.592 722.155 342.592 721.447 cv
342.592 720.739 343.199 720.132 343.907 720.132 cv
359.081 720.132 li
359.789 720.132 360.396 720.739 360.396 721.447 cv
360.396 722.155 359.789 722.763 359.081 722.763 cv
cp
f
380.628 705.06 mo
322.461 705.06 li
321.753 705.06 321.146 704.452 321.146 703.744 cv
321.146 703.036 321.753 702.43 322.461 702.43 cv
380.628 702.43 li
381.336 702.43 381.943 703.036 381.943 703.744 cv
381.943 704.452 381.235 705.06 380.628 705.06 cv
cp
f
380.628 712.646 mo
322.461 712.646 li
321.753 712.646 321.146 712.039 321.146 711.331 cv
321.146 670.868 li
321.146 670.16 321.753 669.553 322.461 669.553 cv
342.086 669.553 li
342.794 669.553 343.401 670.16 343.401 670.868 cv
343.401 671.576 342.794 672.183 342.086 672.183 cv
323.675 672.183 li
323.675 710.117 li
379.313 710.117 li
379.313 672.183 li
363.532 672.183 li
362.824 672.183 362.217 671.576 362.217 670.868 cv
362.217 670.16 362.824 669.553 363.532 669.553 cv
380.628 669.553 li
381.336 669.553 381.943 670.16 381.943 670.868 cv
381.943 711.331 li
381.842 712.039 381.235 712.646 380.628 712.646 cv
cp
f
352.809 664.596 mo
348.561 664.596 344.717 667.327 343.3 671.374 cv
342.896 672.486 342.693 673.6 342.693 674.712 cv
342.693 680.275 347.246 684.828 352.809 684.828 cv
358.373 684.828 362.925 680.275 362.925 674.712 cv
362.925 673.6 362.723 672.385 362.318 671.374 cv
360.902 667.327 357.058 664.596 352.809 664.596 cv
cp
352.809 687.356 mo
345.829 687.356 340.165 681.691 340.165 674.712 cv
340.165 673.296 340.367 671.88 340.873 670.463 cv
342.693 665.405 347.448 662.067 352.809 662.067 cv
358.171 662.067 362.925 665.405 364.746 670.463 cv
365.252 671.778 365.454 673.194 365.454 674.712 cv
365.454 681.691 359.688 687.356 352.809 687.356 cv
cp
f
359.081 676.027 mo
346.437 676.027 li
345.728 676.027 345.121 675.42 345.121 674.712 cv
345.121 674.004 345.728 673.396 346.437 673.396 cv
359.081 673.396 li
359.789 673.396 360.396 674.004 360.396 674.712 cv
360.396 675.42 359.789 676.027 359.081 676.027 cv
cp
f
352.809 682.299 mo
352.101 682.299 351.494 681.691 351.494 680.983 cv
351.494 668.44 li
351.494 667.731 352.101 667.125 352.809 667.125 cv
353.518 667.125 354.125 667.731 354.125 668.44 cv
354.125 681.085 li
354.023 681.691 353.416 682.299 352.809 682.299 cv
cp
f
173.96 642.341 mo
275.119 642.341 li
275.119 743.5 li
173.96 743.5 li
173.96 642.341 li
cp
1 1 1 rgb
f
242.951 670.969 mo
239.208 670.969 li
229.092 670.969 li
218.976 670.969 li
208.86 670.969 li
205.117 670.969 li
203.701 670.969 202.588 672.082 202.588 673.498 cv
202.588 677.241 li
202.588 687.356 li
202.588 697.473 li
202.588 707.589 li
202.588 711.331 li
202.588 712.748 203.701 713.86 205.117 713.86 cv
208.86 713.86 li
218.976 713.86 li
229.092 713.86 li
239.208 713.86 li
242.951 713.86 li
244.367 713.86 245.479 712.748 245.479 711.331 cv
245.479 707.589 li
245.479 697.473 li
245.479 687.356 li
245.479 677.241 li
245.479 673.498 li
245.581 672.082 244.367 670.969 242.951 670.969 cv
cp
f
237.994 676.027 mo
239.41 676.027 240.523 677.14 240.523 678.556 cv
240.523 679.973 239.41 681.085 237.994 681.085 cv
236.578 681.085 235.465 679.973 235.465 678.556 cv
235.465 677.14 236.578 676.027 237.994 676.027 cv
cp
.607843 .788235 1 rgb
f
237.994 703.846 mo
239.41 703.846 240.523 704.958 240.523 706.375 cv
240.523 707.791 239.41 708.903 237.994 708.903 cv
236.578 708.903 235.465 707.791 235.465 706.375 cv
235.465 704.958 236.578 703.846 237.994 703.846 cv
cp
f
210.175 703.846 mo
211.591 703.846 212.704 704.958 212.704 706.375 cv
212.704 707.791 211.591 708.903 210.175 708.903 cv
208.759 708.903 207.646 707.791 207.646 706.375 cv
207.646 704.958 208.759 703.846 210.175 703.846 cv
cp
f
210.175 676.027 mo
211.591 676.027 212.704 677.14 212.704 678.556 cv
212.704 679.973 211.591 681.085 210.175 681.085 cv
208.759 681.085 207.646 679.973 207.646 678.556 cv
207.646 677.14 208.759 676.027 210.175 676.027 cv
cp
f
205.117 672.183 mo
204.409 672.183 203.802 672.79 203.802 673.498 cv
203.802 711.331 li
203.802 712.039 204.409 712.646 205.117 712.646 cv
242.951 712.646 li
243.659 712.646 244.266 712.039 244.266 711.331 cv
244.266 673.498 li
244.266 672.79 243.659 672.183 242.951 672.183 cv
205.117 672.183 li
cp
242.951 715.176 mo
205.117 715.176 li
202.993 715.176 201.273 713.456 201.273 711.331 cv
201.273 673.498 li
201.273 671.374 202.993 669.654 205.117 669.654 cv
242.951 669.654 li
245.075 669.654 246.795 671.374 246.795 673.498 cv
246.795 711.331 li
246.795 713.456 245.075 715.176 242.951 715.176 cv
cp
.117647 .505882 .807843 rgb
f
208.86 672.183 mo
208.152 672.183 207.545 671.576 207.545 670.868 cv
207.545 663.281 li
207.545 662.572 208.152 661.966 208.86 661.966 cv
209.568 661.966 210.175 662.572 210.175 663.281 cv
210.175 670.868 li
210.175 671.576 209.568 672.183 208.86 672.183 cv
cp
f
218.976 672.183 mo
218.268 672.183 217.661 671.576 217.661 670.868 cv
217.661 663.281 li
217.661 662.572 218.268 661.966 218.976 661.966 cv
219.684 661.966 220.291 662.572 220.291 663.281 cv
220.291 670.868 li
220.291 671.576 219.684 672.183 218.976 672.183 cv
cp
f
229.092 672.183 mo
228.384 672.183 227.777 671.576 227.777 670.868 cv
227.777 663.281 li
227.777 662.572 228.384 661.966 229.092 661.966 cv
229.8 661.966 230.407 662.572 230.407 663.281 cv
230.407 670.868 li
230.407 671.576 229.8 672.183 229.092 672.183 cv
cp
f
239.208 672.183 mo
238.5 672.183 237.893 671.576 237.893 670.868 cv
237.893 663.281 li
237.893 662.572 238.5 661.966 239.208 661.966 cv
239.916 661.966 240.523 662.572 240.523 663.281 cv
240.523 670.868 li
240.523 671.576 239.916 672.183 239.208 672.183 cv
cp
f
208.86 722.763 mo
208.152 722.763 207.545 722.155 207.545 721.447 cv
207.545 713.86 li
207.545 713.152 208.152 712.545 208.86 712.545 cv
209.568 712.545 210.175 713.152 210.175 713.86 cv
210.175 721.447 li
210.175 722.155 209.568 722.763 208.86 722.763 cv
cp
f
218.976 722.763 mo
218.268 722.763 217.661 722.155 217.661 721.447 cv
217.661 713.86 li
217.661 713.152 218.268 712.545 218.976 712.545 cv
219.684 712.545 220.291 713.152 220.291 713.86 cv
220.291 721.447 li
220.291 722.155 219.684 722.763 218.976 722.763 cv
cp
f
229.092 722.763 mo
228.384 722.763 227.777 722.155 227.777 721.447 cv
227.777 713.86 li
227.777 713.152 228.384 712.545 229.092 712.545 cv
229.8 712.545 230.407 713.152 230.407 713.86 cv
230.407 721.447 li
230.407 722.155 229.8 722.763 229.092 722.763 cv
cp
f
239.208 722.763 mo
238.5 722.763 237.893 722.155 237.893 721.447 cv
237.893 713.86 li
237.893 713.152 238.5 712.545 239.208 712.545 cv
239.916 712.545 240.523 713.152 240.523 713.86 cv
240.523 721.447 li
240.523 722.155 239.916 722.763 239.208 722.763 cv
cp
f
253.167 678.556 mo
245.581 678.556 li
244.873 678.556 244.266 677.949 244.266 677.241 cv
244.266 676.533 244.873 675.926 245.581 675.926 cv
253.167 675.926 li
253.876 675.926 254.483 676.533 254.483 677.241 cv
254.382 677.949 253.775 678.556 253.167 678.556 cv
cp
f
253.167 688.672 mo
245.581 688.672 li
244.873 688.672 244.266 688.064 244.266 687.356 cv
244.266 686.648 244.873 686.042 245.581 686.042 cv
253.167 686.042 li
253.876 686.042 254.483 686.648 254.483 687.356 cv
254.382 688.064 253.775 688.672 253.167 688.672 cv
cp
f
253.167 698.788 mo
245.581 698.788 li
244.873 698.788 244.266 698.181 244.266 697.473 cv
244.266 696.765 244.873 696.157 245.581 696.157 cv
253.167 696.157 li
253.876 696.157 254.483 696.765 254.483 697.473 cv
254.483 698.181 253.775 698.788 253.167 698.788 cv
cp
f
253.167 708.903 mo
245.581 708.903 li
244.873 708.903 244.266 708.297 244.266 707.589 cv
244.266 706.881 244.873 706.273 245.581 706.273 cv
253.167 706.273 li
253.876 706.273 254.483 706.881 254.483 707.589 cv
254.382 708.297 253.775 708.903 253.167 708.903 cv
cp
f
202.588 678.556 mo
195.001 678.556 li
194.293 678.556 193.687 677.949 193.687 677.241 cv
193.687 676.533 194.293 675.926 195.001 675.926 cv
202.588 675.926 li
203.296 675.926 203.903 676.533 203.903 677.241 cv
203.802 677.949 203.195 678.556 202.588 678.556 cv
cp
f
202.588 688.672 mo
195.001 688.672 li
194.293 688.672 193.687 688.064 193.687 687.356 cv
193.687 686.648 194.293 686.042 195.001 686.042 cv
202.588 686.042 li
203.296 686.042 203.903 686.648 203.903 687.356 cv
203.802 688.064 203.195 688.672 202.588 688.672 cv
cp
f
202.588 698.788 mo
195.001 698.788 li
194.293 698.788 193.687 698.181 193.687 697.473 cv
193.687 696.765 194.293 696.157 195.001 696.157 cv
202.588 696.157 li
203.296 696.157 203.903 696.765 203.903 697.473 cv
203.903 698.181 203.195 698.788 202.588 698.788 cv
cp
f
202.588 708.903 mo
195.001 708.903 li
194.293 708.903 193.687 708.297 193.687 707.589 cv
193.687 706.881 194.293 706.273 195.001 706.273 cv
202.588 706.273 li
203.296 706.273 203.903 706.881 203.903 707.589 cv
203.802 708.297 203.195 708.903 202.588 708.903 cv
cp
f
210.175 677.241 mo
209.467 677.241 208.86 677.848 208.86 678.556 cv
208.86 679.264 209.467 679.871 210.175 679.871 cv
210.883 679.871 211.49 679.264 211.49 678.556 cv
211.49 677.848 210.782 677.241 210.175 677.241 cv
cp
210.175 682.299 mo
208.051 682.299 206.331 680.579 206.331 678.455 cv
206.331 676.33 208.051 674.61 210.175 674.61 cv
212.299 674.61 214.019 676.33 214.019 678.455 cv
214.019 680.579 212.198 682.299 210.175 682.299 cv
cp
f
210.175 705.06 mo
209.467 705.06 208.86 705.666 208.86 706.375 cv
208.86 707.083 209.467 707.689 210.175 707.689 cv
210.883 707.689 211.49 707.083 211.49 706.375 cv
211.49 705.666 210.782 705.06 210.175 705.06 cv
cp
210.175 710.117 mo
208.051 710.117 206.331 708.397 206.331 706.273 cv
206.331 704.149 208.051 702.43 210.175 702.43 cv
212.299 702.43 214.019 704.149 214.019 706.273 cv
214.019 708.397 212.198 710.117 210.175 710.117 cv
cp
f
237.994 677.241 mo
237.286 677.241 236.679 677.848 236.679 678.556 cv
236.679 679.264 237.286 679.871 237.994 679.871 cv
238.702 679.871 239.309 679.264 239.309 678.556 cv
239.309 677.848 238.601 677.241 237.994 677.241 cv
cp
237.994 682.299 mo
235.87 682.299 234.15 680.579 234.15 678.455 cv
234.15 676.33 235.87 674.61 237.994 674.61 cv
240.118 674.61 241.838 676.33 241.838 678.455 cv
241.838 680.579 240.017 682.299 237.994 682.299 cv
cp
f
237.994 705.06 mo
237.286 705.06 236.679 705.666 236.679 706.375 cv
236.679 707.083 237.286 707.689 237.994 707.689 cv
238.702 707.689 239.309 707.083 239.309 706.375 cv
239.309 705.666 238.601 705.06 237.994 705.06 cv
cp
237.994 710.117 mo
235.87 710.117 234.15 708.397 234.15 706.273 cv
234.15 704.149 235.87 702.43 237.994 702.43 cv
240.118 702.43 241.838 704.149 241.838 706.273 cv
241.838 708.397 240.017 710.117 237.994 710.117 cv
cp
f
46.5 642.341 mo
147.659 642.341 li
147.659 743.5 li
46.5 743.5 li
46.5 642.341 li
cp
1 1 1 rgb
f
73.813 677.241 mo
73.813 678.151 73.813 704.25 73.813 705.06 cv
73.813 710.725 76.6455 715.682 80.9951 718.615 cv
80.9951 718.615 li
80.9951 718.615 li
86.458 722.357 93.8423 722.459 99.5073 718.615 cv
99.5073 718.615 li
99.5073 718.615 li
103.857 715.682 106.689 710.725 106.689 705.06 cv
106.689 686.143 li
106.689 677.241 li
101.935 677.241 77.9604 677.241 73.813 677.241 cv
cp
f
81.3999 663.382 mo
99.1025 663.382 li
99.1025 677.342 li
81.3999 677.342 li
81.3999 663.382 li
cp
.607843 .788235 1 rgb
f
106.689 686.143 mo
113.669 686.143 119.334 691.808 119.334 698.788 cv
119.334 705.768 113.669 711.433 106.689 711.433 cv
106.285 711.433 105.88 711.433 105.476 711.331 cv
99.0015 710.725 94.0449 705.262 94.0449 698.788 cv
94.0449 691.707 99.7095 686.143 106.689 686.143 cv
cp
1 1 1 rgb
f
99.1025 678.556 mo
98.3945 678.556 97.7876 677.949 97.7876 677.241 cv
97.7876 664.596 li
82.6138 664.596 li
82.6138 677.241 li
82.6138 677.949 82.0068 678.556 81.2988 678.556 cv
80.5908 678.556 79.9834 677.949 79.9834 677.241 cv
79.9834 663.382 li
79.9834 662.674 80.5908 662.067 81.2988 662.067 cv
99.1025 662.067 li
99.8105 662.067 100.417 662.674 100.417 663.382 cv
100.417 677.342 li
100.417 677.949 99.8105 678.556 99.1025 678.556 cv
cp
.117647 .505882 .807843 rgb
f
90.3018 722.763 mo
80.5908 722.763 72.5991 714.771 72.5991 705.06 cv
72.5991 677.241 li
72.5991 676.533 73.2061 675.926 73.9141 675.926 cv
106.791 675.926 li
107.499 675.926 108.106 676.533 108.106 677.241 cv
108.106 686.143 li
108.106 686.851 107.499 687.458 106.791 687.458 cv
106.083 687.458 105.476 686.851 105.476 686.143 cv
105.476 678.556 li
75.1279 678.556 li
75.1279 705.06 li
75.1279 713.456 81.9058 720.233 90.3018 720.233 cv
93.3364 720.233 96.27 719.323 98.7993 717.604 cv
101.227 715.884 103.149 713.557 104.262 710.826 cv
104.565 710.219 105.273 709.915 105.88 710.117 cv
106.487 710.421 106.791 711.129 106.588 711.736 cv
105.273 714.973 103.048 717.704 100.215 719.627 cv
97.2817 721.751 93.8423 722.763 90.3018 722.763 cv
cp
f
106.689 687.356 mo
100.417 687.356 95.2588 692.415 95.2588 698.788 cv
95.2588 704.655 99.7095 709.511 105.476 710.117 cv
105.88 710.117 106.184 710.219 106.588 710.219 cv
112.86 710.219 118.02 705.16 118.02 698.788 cv
118.02 692.415 112.961 687.356 106.689 687.356 cv
cp
106.689 712.646 mo
106.184 712.646 105.779 712.646 105.375 712.545 cv
101.935 712.242 98.7993 710.623 96.4727 708.095 cv
94.146 705.565 92.8306 702.227 92.8306 698.687 cv
92.8306 690.998 99.1025 684.727 106.791 684.727 cv
114.479 684.727 120.75 690.998 120.75 698.687 cv
120.75 706.375 114.377 712.646 106.689 712.646 cv
cp
f
86.458 673.498 mo
85.7495 673.498 85.1426 672.891 85.1426 672.183 cv
85.1426 668.339 li
85.1426 667.631 85.7495 667.023 86.458 667.023 cv
87.166 667.023 87.7729 667.631 87.7729 668.339 cv
87.7729 672.183 li
87.7729 672.891 87.166 673.498 86.458 673.498 cv
cp
f
94.0449 673.498 mo
93.3364 673.498 92.7295 672.891 92.7295 672.183 cv
92.7295 668.339 li
92.7295 667.631 93.3364 667.023 94.0449 667.023 cv
94.7529 667.023 95.3599 667.631 95.3599 668.339 cv
95.3599 672.183 li
95.3599 672.891 94.7529 673.498 94.0449 673.498 cv
cp
f
114.276 700.002 mo
99.1025 700.002 li
98.3945 700.002 97.7876 699.395 97.7876 698.687 cv
97.7876 697.979 98.3945 697.371 99.1025 697.371 cv
114.276 697.371 li
114.984 697.371 115.592 697.979 115.592 698.687 cv
115.592 699.395 114.984 700.002 114.276 700.002 cv
cp
f
106.689 707.589 mo
105.981 707.589 105.375 706.981 105.375 706.273 cv
105.375 691.1 li
105.375 690.392 105.981 689.784 106.689 689.784 cv
107.397 689.784 108.004 690.392 108.004 691.1 cv
108.004 706.273 li
108.004 706.981 107.397 707.589 106.689 707.589 cv
cp
f
556.341 514.881 mo
657.5 514.881 li
657.5 616.04 li
556.341 616.04 li
556.341 514.881 li
cp
1 1 1 rgb
f
591.241 535.922 mo
608.943 535.922 li
608.943 549.882 li
591.241 549.882 li
591.241 535.922 li
cp
.607843 .788235 1 rgb
f
583.654 549.78 mo
583.654 550.691 583.654 576.79 583.654 577.6 cv
583.654 583.264 586.486 588.221 590.836 591.154 cv
590.836 591.154 li
590.836 591.154 li
596.299 594.897 603.684 594.999 609.349 591.154 cv
609.349 591.154 li
609.349 591.154 li
613.698 588.221 616.53 583.264 616.53 577.6 cv
616.53 558.683 li
616.53 549.78 li
611.776 549.78 587.802 549.78 583.654 549.78 cv
cp
1 1 1 rgb
f
616.53 558.683 mo
623.511 558.683 629.176 564.348 629.176 571.327 cv
629.176 578.308 623.511 583.973 616.53 583.973 cv
616.126 583.973 615.722 583.973 615.316 583.871 cv
608.843 583.264 603.886 577.802 603.886 571.327 cv
603.886 564.246 609.551 558.683 616.53 558.683 cv
cp
f
608.943 551.096 mo
608.235 551.096 607.629 550.488 607.629 549.78 cv
607.629 537.136 li
592.455 537.136 li
592.455 549.78 li
592.455 550.488 591.848 551.096 591.14 551.096 cv
590.432 551.096 589.824 550.488 589.824 549.78 cv
589.824 535.922 li
589.824 535.214 590.432 534.606 591.14 534.606 cv
608.943 534.606 li
609.651 534.606 610.259 535.214 610.259 535.922 cv
610.259 549.882 li
610.259 550.488 609.651 551.096 608.943 551.096 cv
cp
.117647 .505882 .807843 rgb
f
600.143 595.302 mo
590.432 595.302 582.44 587.311 582.44 577.6 cv
582.44 549.78 li
582.44 549.072 583.047 548.466 583.755 548.466 cv
616.632 548.466 li
617.34 548.466 617.947 549.072 617.947 549.78 cv
617.947 558.683 li
617.947 559.391 617.34 559.998 616.632 559.998 cv
615.924 559.998 615.316 559.391 615.316 558.683 cv
615.316 551.096 li
584.969 551.096 li
584.969 577.6 li
584.969 585.995 591.747 592.773 600.143 592.773 cv
603.178 592.773 606.111 591.862 608.641 590.143 cv
611.068 588.423 612.99 586.097 614.103 583.365 cv
614.406 582.759 615.114 582.455 615.722 582.657 cv
616.328 582.961 616.632 583.669 616.43 584.275 cv
615.114 587.513 612.889 590.244 610.057 592.166 cv
607.123 594.291 603.684 595.302 600.143 595.302 cv
cp
f
616.53 559.896 mo
610.259 559.896 605.1 564.954 605.1 571.327 cv
605.1 577.194 609.551 582.05 615.316 582.657 cv
615.722 582.657 616.024 582.759 616.43 582.759 cv
622.701 582.759 627.86 577.7 627.86 571.327 cv
627.86 564.954 622.803 559.896 616.53 559.896 cv
cp
616.53 585.187 mo
616.024 585.187 615.62 585.187 615.216 585.085 cv
611.776 584.781 608.641 583.163 606.313 580.634 cv
603.987 578.105 602.672 574.767 602.672 571.227 cv
602.672 563.538 608.943 557.267 616.632 557.267 cv
624.32 557.267 630.592 563.538 630.592 571.227 cv
630.592 578.914 624.219 585.187 616.53 585.187 cv
cp
f
596.299 546.038 mo
595.591 546.038 594.983 545.431 594.983 544.723 cv
594.983 540.879 li
594.983 540.171 595.591 539.563 596.299 539.563 cv
597.007 539.563 597.614 540.171 597.614 540.879 cv
597.614 544.723 li
597.614 545.431 597.007 546.038 596.299 546.038 cv
cp
f
603.886 546.038 mo
603.178 546.038 602.57 545.431 602.57 544.723 cv
602.57 540.879 li
602.57 540.171 603.178 539.563 603.886 539.563 cv
604.594 539.563 605.201 540.171 605.201 540.879 cv
605.201 544.723 li
605.201 545.431 604.594 546.038 603.886 546.038 cv
cp
f
622.903 569.911 mo
622.499 569.911 621.993 569.709 621.791 569.305 cv
620.678 567.483 618.756 566.27 616.53 566.27 cv
614.305 566.27 612.383 567.382 611.271 569.305 cv
610.967 569.911 610.157 570.113 609.551 569.811 cv
608.943 569.507 608.741 568.697 609.045 568.091 cv
610.563 565.46 613.395 563.842 616.43 563.842 cv
619.464 563.842 622.297 565.46 623.814 568.091 cv
624.117 568.697 623.915 569.507 623.309 569.811 cv
623.309 569.811 623.106 569.911 622.903 569.911 cv
cp
f
620.375 574.16 mo
619.97 574.16 619.464 573.958 619.262 573.553 cv
618.655 572.541 617.644 572.035 616.53 572.035 cv
615.418 572.035 614.406 572.643 613.799 573.553 cv
613.496 574.16 612.687 574.362 612.08 574.059 cv
611.473 573.755 611.271 572.946 611.574 572.339 cv
612.585 570.619 614.406 569.507 616.43 569.507 cv
618.452 569.507 620.273 570.619 621.285 572.339 cv
621.589 572.946 621.387 573.755 620.779 574.059 cv
620.779 574.16 620.577 574.16 620.375 574.16 cv
cp
f
618.958 578.914 mo
618.554 578.914 618.048 578.712 617.846 578.308 cv
617.542 577.802 617.036 577.498 616.53 577.498 cv
616.024 577.498 615.418 577.802 615.216 578.308 cv
614.912 578.914 614.103 579.116 613.496 578.813 cv
612.889 578.51 612.687 577.7 612.99 577.094 cv
613.698 575.88 615.114 575.07 616.53 575.07 cv
617.947 575.07 619.363 575.88 620.071 577.094 cv
620.375 577.7 620.172 578.51 619.565 578.813 cv
619.363 578.813 619.161 578.914 618.958 578.914 cv
cp
f
428.881 514.881 mo
530.04 514.881 li
530.04 616.04 li
428.881 616.04 li
428.881 514.881 li
cp
1 1 1 rgb
f
497.871 543.509 mo
494.128 543.509 li
484.013 543.509 li
473.896 543.509 li
463.78 543.509 li
460.038 543.509 li
458.621 543.509 457.509 544.621 457.509 546.038 cv
457.509 549.78 li
457.509 559.896 li
457.509 570.013 li
457.509 580.128 li
457.509 583.871 li
457.509 585.287 458.621 586.4 460.038 586.4 cv
463.78 586.4 li
473.896 586.4 li
484.013 586.4 li
494.128 586.4 li
497.871 586.4 li
499.287 586.4 500.4 585.287 500.4 583.871 cv
500.4 580.128 li
500.4 570.013 li
500.4 559.896 li
500.4 549.78 li
500.4 546.038 li
500.501 544.621 499.287 543.509 497.871 543.509 cv
cp
f
491.6 554.839 mo
491.6 574.969 li
491.6 576.386 490.486 577.498 489.07 577.498 cv
468.839 577.498 li
467.422 577.498 466.31 576.386 466.31 574.969 cv
466.31 554.839 li
466.31 553.422 467.422 552.31 468.839 552.31 cv
488.969 552.31 li
490.486 552.31 491.6 553.422 491.6 554.839 cv
cp
.607843 .788235 1 rgb
f
460.038 544.723 mo
459.33 544.723 458.723 545.329 458.723 546.038 cv
458.723 583.871 li
458.723 584.579 459.33 585.187 460.038 585.187 cv
497.871 585.187 li
498.579 585.187 499.187 584.579 499.187 583.871 cv
499.187 546.038 li
499.187 545.329 498.579 544.723 497.871 544.723 cv
460.038 544.723 li
cp
497.871 587.715 mo
460.038 587.715 li
457.913 587.715 456.193 585.995 456.193 583.871 cv
456.193 546.038 li
456.193 543.913 457.913 542.193 460.038 542.193 cv
497.871 542.193 li
499.995 542.193 501.715 543.913 501.715 546.038 cv
501.715 583.871 li
501.715 585.995 499.995 587.715 497.871 587.715 cv
cp
.117647 .505882 .807843 rgb
f
468.839 553.625 mo
468.131 553.625 467.523 554.231 467.523 554.939 cv
467.523 575.07 li
467.523 575.778 468.131 576.386 468.839 576.386 cv
488.969 576.386 li
489.678 576.386 490.284 575.778 490.284 575.07 cv
490.284 554.839 li
490.284 554.131 489.678 553.523 488.969 553.523 cv
468.839 553.523 li
468.839 553.625 li
cp
489.07 578.914 mo
468.839 578.914 li
466.714 578.914 464.994 577.194 464.994 575.07 cv
464.994 554.839 li
464.994 552.714 466.714 550.994 468.839 550.994 cv
488.969 550.994 li
491.094 550.994 492.813 552.714 492.813 554.839 cv
492.813 574.969 li
492.914 577.094 491.094 578.914 489.07 578.914 cv
cp
f
463.78 544.723 mo
463.072 544.723 462.466 544.115 462.466 543.407 cv
462.466 535.82 li
462.466 535.112 463.072 534.506 463.78 534.506 cv
464.488 534.506 465.096 535.112 465.096 535.82 cv
465.096 543.407 li
465.096 544.115 464.488 544.723 463.78 544.723 cv
cp
f
473.896 544.723 mo
473.188 544.723 472.581 544.115 472.581 543.407 cv
472.581 535.82 li
472.581 535.112 473.188 534.506 473.896 534.506 cv
474.604 534.506 475.212 535.112 475.212 535.82 cv
475.212 543.407 li
475.212 544.115 474.604 544.723 473.896 544.723 cv
cp
f
484.013 544.723 mo
483.305 544.723 482.697 544.115 482.697 543.407 cv
482.697 535.82 li
482.697 535.112 483.305 534.506 484.013 534.506 cv
484.721 534.506 485.327 535.112 485.327 535.82 cv
485.327 543.407 li
485.327 544.115 484.721 544.723 484.013 544.723 cv
cp
f
494.128 544.723 mo
493.42 544.723 492.813 544.115 492.813 543.407 cv
492.813 535.82 li
492.813 535.112 493.42 534.506 494.128 534.506 cv
494.836 534.506 495.443 535.112 495.443 535.82 cv
495.443 543.407 li
495.443 544.115 494.836 544.723 494.128 544.723 cv
cp
f
463.78 595.302 mo
463.072 595.302 462.466 594.695 462.466 593.987 cv
462.466 586.4 li
462.466 585.692 463.072 585.085 463.78 585.085 cv
464.488 585.085 465.096 585.692 465.096 586.4 cv
465.096 593.987 li
465.096 594.695 464.488 595.302 463.78 595.302 cv
cp
f
473.896 595.302 mo
473.188 595.302 472.581 594.695 472.581 593.987 cv
472.581 586.4 li
472.581 585.692 473.188 585.085 473.896 585.085 cv
474.604 585.085 475.212 585.692 475.212 586.4 cv
475.212 593.987 li
475.212 594.695 474.604 595.302 473.896 595.302 cv
cp
f
484.013 595.302 mo
483.305 595.302 482.697 594.695 482.697 593.987 cv
482.697 586.4 li
482.697 585.692 483.305 585.085 484.013 585.085 cv
484.721 585.085 485.327 585.692 485.327 586.4 cv
485.327 593.987 li
485.327 594.695 484.721 595.302 484.013 595.302 cv
cp
f
494.128 595.302 mo
493.42 595.302 492.813 594.695 492.813 593.987 cv
492.813 586.4 li
492.813 585.692 493.42 585.085 494.128 585.085 cv
494.836 585.085 495.443 585.692 495.443 586.4 cv
495.443 593.987 li
495.443 594.695 494.836 595.302 494.128 595.302 cv
cp
f
508.088 551.096 mo
500.501 551.096 li
499.793 551.096 499.187 550.488 499.187 549.78 cv
499.187 549.072 499.793 548.466 500.501 548.466 cv
508.088 548.466 li
508.797 548.466 509.403 549.072 509.403 549.78 cv
509.302 550.488 508.695 551.096 508.088 551.096 cv
cp
f
508.088 561.212 mo
500.501 561.212 li
499.793 561.212 499.187 560.604 499.187 559.896 cv
499.187 559.188 499.793 558.581 500.501 558.581 cv
508.088 558.581 li
508.797 558.581 509.403 559.188 509.403 559.896 cv
509.302 560.604 508.695 561.212 508.088 561.212 cv
cp
f
508.088 571.327 mo
500.501 571.327 li
499.793 571.327 499.187 570.721 499.187 570.013 cv
499.187 569.305 499.793 568.697 500.501 568.697 cv
508.088 568.697 li
508.797 568.697 509.403 569.305 509.403 570.013 cv
509.403 570.721 508.695 571.327 508.088 571.327 cv
cp
f
508.088 581.443 mo
500.501 581.443 li
499.793 581.443 499.187 580.836 499.187 580.128 cv
499.187 579.42 499.793 578.813 500.501 578.813 cv
508.088 578.813 li
508.797 578.813 509.403 579.42 509.403 580.128 cv
509.302 580.836 508.695 581.443 508.088 581.443 cv
cp
f
457.509 551.096 mo
449.922 551.096 li
449.214 551.096 448.606 550.488 448.606 549.78 cv
448.606 549.072 449.214 548.466 449.922 548.466 cv
457.509 548.466 li
458.217 548.466 458.824 549.072 458.824 549.78 cv
458.723 550.488 458.115 551.096 457.509 551.096 cv
cp
f
457.509 561.212 mo
449.922 561.212 li
449.214 561.212 448.606 560.604 448.606 559.896 cv
448.606 559.188 449.214 558.581 449.922 558.581 cv
457.509 558.581 li
458.217 558.581 458.824 559.188 458.824 559.896 cv
458.723 560.604 458.115 561.212 457.509 561.212 cv
cp
f
457.509 571.327 mo
449.922 571.327 li
449.214 571.327 448.606 570.721 448.606 570.013 cv
448.606 569.305 449.214 568.697 449.922 568.697 cv
457.509 568.697 li
458.217 568.697 458.824 569.305 458.824 570.013 cv
458.824 570.721 458.115 571.327 457.509 571.327 cv
cp
f
457.509 581.443 mo
449.922 581.443 li
449.214 581.443 448.606 580.836 448.606 580.128 cv
448.606 579.42 449.214 578.813 449.922 578.813 cv
457.509 578.813 li
458.217 578.813 458.824 579.42 458.824 580.128 cv
458.723 580.836 458.115 581.443 457.509 581.443 cv
cp
f
301.42 514.881 mo
402.579 514.881 li
402.579 616.04 li
301.42 616.04 li
301.42 514.881 li
cp
1 1 1 rgb
f
370.411 543.509 mo
366.668 543.509 li
356.552 543.509 li
346.437 543.509 li
336.32 543.509 li
332.578 543.509 li
331.161 543.509 330.048 544.621 330.048 546.038 cv
330.048 549.78 li
330.048 559.896 li
330.048 570.013 li
330.048 580.128 li
330.048 583.871 li
330.048 585.287 331.161 586.4 332.578 586.4 cv
336.32 586.4 li
346.437 586.4 li
356.552 586.4 li
366.668 586.4 li
370.411 586.4 li
371.827 586.4 372.939 585.287 372.939 583.871 cv
372.939 580.128 li
372.939 570.013 li
372.939 559.896 li
372.939 549.78 li
372.939 546.038 li
373.041 544.621 371.827 543.509 370.411 543.509 cv
cp
f
360.093 566.371 mo
360.093 568.799 li
351.494 568.799 li
351.494 568.293 351.494 567.787 351.595 567.382 cv
351.696 566.978 351.798 566.573 352 566.27 cv
352.202 565.966 352.506 565.562 352.809 565.258 cv
353.113 564.954 353.518 564.651 354.023 564.448 cv
354.529 564.146 355.035 563.943 355.338 563.74 cv
355.743 563.538 355.945 563.336 356.147 563.234 cv
356.35 563.134 356.552 562.932 356.653 562.83 cv
356.755 562.729 356.755 562.526 356.755 562.426 cv
356.755 562.122 356.653 561.818 356.451 561.616 cv
356.249 561.414 355.844 561.313 355.439 561.313 cv
354.934 561.313 354.529 561.414 354.226 561.616 cv
353.922 561.818 353.518 562.122 353.214 562.526 cv
351.494 560.504 li
351.696 560.301 351.899 560.099 352.202 559.896 cv
352.506 559.694 352.809 559.492 353.214 559.391 cv
353.619 559.188 354.023 559.087 354.529 558.986 cv
355.035 558.885 355.439 558.885 355.945 558.885 cv
357.159 558.885 358.069 559.188 358.777 559.694 cv
359.485 560.2 359.789 560.908 359.789 561.818 cv
359.789 562.224 359.688 562.526 359.587 562.83 cv
359.485 563.134 359.283 563.438 359.081 563.64 cv
358.879 563.842 358.677 564.044 358.475 564.246 cv
358.271 564.448 357.969 564.55 357.766 564.752 cv
357.563 564.854 357.361 564.954 357.261 565.056 cv
357.058 565.157 356.855 565.258 356.653 565.46 cv
356.451 565.562 356.249 565.764 356.147 565.865 cv
355.945 565.966 355.844 566.168 355.743 566.371 cv
360.093 566.371 li
360.093 566.371 li
cp
.117647 .505882 .807843 rgb
f
350.28 567.787 mo
350.28 568.293 350.179 568.799 349.977 569.203 cv
349.774 569.607 349.471 570.013 349.066 570.315 cv
348.662 570.619 348.156 570.821 347.65 571.024 cv
347.043 571.227 346.437 571.227 345.728 571.227 cv
344.008 571.227 342.693 570.721 341.682 569.709 cv
343.098 567.787 li
343.401 568.091 343.705 568.394 344.109 568.495 cv
344.514 568.697 345.02 568.697 345.526 568.697 cv
346.841 568.697 347.448 568.191 347.448 567.281 cv
347.448 566.775 347.246 566.371 346.841 566.168 cv
346.437 565.865 345.829 565.764 345.02 565.764 cv
344.514 565.764 li
344.514 563.842 li
345.121 563.842 li
345.728 563.842 346.234 563.74 346.639 563.438 cv
347.043 563.134 347.145 562.83 347.145 562.426 cv
347.145 562.021 347.043 561.718 346.74 561.616 cv
346.437 561.414 346.133 561.313 345.728 561.313 cv
345.222 561.313 344.818 561.414 344.413 561.616 cv
344.008 561.818 343.705 562.122 343.401 562.526 cv
341.682 560.504 li
341.884 560.301 342.086 559.998 342.39 559.795 cv
342.693 559.593 342.997 559.391 343.401 559.289 cv
343.806 559.188 344.211 558.986 344.615 558.986 cv
345.02 558.885 345.526 558.885 345.931 558.885 cv
346.538 558.885 347.043 558.986 347.549 559.087 cv
348.055 559.188 348.459 559.391 348.864 559.694 cv
349.269 559.998 349.471 560.301 349.673 560.604 cv
349.875 561.01 349.977 561.414 349.977 561.818 cv
349.977 562.122 349.875 562.526 349.774 562.83 cv
349.673 563.134 349.471 563.438 349.37 563.64 cv
349.167 563.842 348.965 564.146 348.662 564.246 cv
348.358 564.448 348.055 564.55 347.751 564.55 cv
348.055 564.651 348.459 564.752 348.763 564.954 cv
349.066 565.157 349.269 565.359 349.471 565.662 cv
349.673 565.966 349.875 566.27 349.977 566.573 cv
350.179 567.079 350.28 567.382 350.28 567.787 cv
cp
f
332.578 544.723 mo
331.869 544.723 331.262 545.329 331.262 546.038 cv
331.262 583.871 li
331.262 584.579 331.869 585.187 332.578 585.187 cv
370.411 585.187 li
371.119 585.187 371.726 584.579 371.726 583.871 cv
371.726 546.038 li
371.726 545.329 371.119 544.723 370.411 544.723 cv
332.578 544.723 li
cp
370.411 587.715 mo
332.578 587.715 li
330.453 587.715 328.733 585.995 328.733 583.871 cv
328.733 546.038 li
328.733 543.913 330.453 542.193 332.578 542.193 cv
370.411 542.193 li
372.535 542.193 374.255 543.913 374.255 546.038 cv
374.255 583.871 li
374.255 585.995 372.535 587.715 370.411 587.715 cv
cp
f
336.32 544.723 mo
335.612 544.723 335.005 544.115 335.005 543.407 cv
335.005 535.82 li
335.005 535.112 335.612 534.506 336.32 534.506 cv
337.028 534.506 337.635 535.112 337.635 535.82 cv
337.635 543.407 li
337.635 544.115 337.028 544.723 336.32 544.723 cv
cp
f
346.437 544.723 mo
345.728 544.723 345.121 544.115 345.121 543.407 cv
345.121 535.82 li
345.121 535.112 345.728 534.506 346.437 534.506 cv
347.145 534.506 347.751 535.112 347.751 535.82 cv
347.751 543.407 li
347.751 544.115 347.145 544.723 346.437 544.723 cv
cp
f
356.552 544.723 mo
355.844 544.723 355.237 544.115 355.237 543.407 cv
355.237 535.82 li
355.237 535.112 355.844 534.506 356.552 534.506 cv
357.261 534.506 357.867 535.112 357.867 535.82 cv
357.867 543.407 li
357.867 544.115 357.261 544.723 356.552 544.723 cv
cp
f
366.668 544.723 mo
365.96 544.723 365.353 544.115 365.353 543.407 cv
365.353 535.82 li
365.353 535.112 365.96 534.506 366.668 534.506 cv
367.376 534.506 367.983 535.112 367.983 535.82 cv
367.983 543.407 li
367.983 544.115 367.376 544.723 366.668 544.723 cv
cp
f
336.32 595.302 mo
335.612 595.302 335.005 594.695 335.005 593.987 cv
335.005 586.4 li
335.005 585.692 335.612 585.085 336.32 585.085 cv
337.028 585.085 337.635 585.692 337.635 586.4 cv
337.635 593.987 li
337.635 594.695 337.028 595.302 336.32 595.302 cv
cp
f
346.437 595.302 mo
345.728 595.302 345.121 594.695 345.121 593.987 cv
345.121 586.4 li
345.121 585.692 345.728 585.085 346.437 585.085 cv
347.145 585.085 347.751 585.692 347.751 586.4 cv
347.751 593.987 li
347.751 594.695 347.145 595.302 346.437 595.302 cv
cp
f
356.552 595.302 mo
355.844 595.302 355.237 594.695 355.237 593.987 cv
355.237 586.4 li
355.237 585.692 355.844 585.085 356.552 585.085 cv
357.261 585.085 357.867 585.692 357.867 586.4 cv
357.867 593.987 li
357.867 594.695 357.261 595.302 356.552 595.302 cv
cp
f
366.668 595.302 mo
365.96 595.302 365.353 594.695 365.353 593.987 cv
365.353 586.4 li
365.353 585.692 365.96 585.085 366.668 585.085 cv
367.376 585.085 367.983 585.692 367.983 586.4 cv
367.983 593.987 li
367.983 594.695 367.376 595.302 366.668 595.302 cv
cp
f
380.628 551.096 mo
373.041 551.096 li
372.333 551.096 371.726 550.488 371.726 549.78 cv
371.726 549.072 372.333 548.466 373.041 548.466 cv
380.628 548.466 li
381.336 548.466 381.943 549.072 381.943 549.78 cv
381.842 550.488 381.235 551.096 380.628 551.096 cv
cp
f
380.628 561.212 mo
373.041 561.212 li
372.333 561.212 371.726 560.604 371.726 559.896 cv
371.726 559.188 372.333 558.581 373.041 558.581 cv
380.628 558.581 li
381.336 558.581 381.943 559.188 381.943 559.896 cv
381.842 560.604 381.235 561.212 380.628 561.212 cv
cp
f
380.628 571.327 mo
373.041 571.327 li
372.333 571.327 371.726 570.721 371.726 570.013 cv
371.726 569.305 372.333 568.697 373.041 568.697 cv
380.628 568.697 li
381.336 568.697 381.943 569.305 381.943 570.013 cv
381.943 570.721 381.235 571.327 380.628 571.327 cv
cp
f
380.628 581.443 mo
373.041 581.443 li
372.333 581.443 371.726 580.836 371.726 580.128 cv
371.726 579.42 372.333 578.813 373.041 578.813 cv
380.628 578.813 li
381.336 578.813 381.943 579.42 381.943 580.128 cv
381.842 580.836 381.235 581.443 380.628 581.443 cv
cp
f
330.048 551.096 mo
322.461 551.096 li
321.753 551.096 321.146 550.488 321.146 549.78 cv
321.146 549.072 321.753 548.466 322.461 548.466 cv
330.048 548.466 li
330.757 548.466 331.364 549.072 331.364 549.78 cv
331.262 550.488 330.655 551.096 330.048 551.096 cv
cp
f
330.048 561.212 mo
322.461 561.212 li
321.753 561.212 321.146 560.604 321.146 559.896 cv
321.146 559.188 321.753 558.581 322.461 558.581 cv
330.048 558.581 li
330.757 558.581 331.364 559.188 331.364 559.896 cv
331.262 560.604 330.655 561.212 330.048 561.212 cv
cp
f
330.048 571.327 mo
322.461 571.327 li
321.753 571.327 321.146 570.721 321.146 570.013 cv
321.146 569.305 321.753 568.697 322.461 568.697 cv
330.048 568.697 li
330.757 568.697 331.364 569.305 331.364 570.013 cv
331.364 570.721 330.655 571.327 330.048 571.327 cv
cp
f
330.048 581.443 mo
322.461 581.443 li
321.753 581.443 321.146 580.836 321.146 580.128 cv
321.146 579.42 321.753 578.813 322.461 578.813 cv
330.048 578.813 li
330.757 578.813 331.364 579.42 331.364 580.128 cv
331.262 580.836 330.655 581.443 330.048 581.443 cv
cp
f
173.96 514.881 mo
275.119 514.881 li
275.119 616.04 li
173.96 616.04 li
173.96 514.881 li
cp
1 1 1 rgb
f
242.951 543.509 mo
239.208 543.509 li
229.092 543.509 li
218.976 543.509 li
208.86 543.509 li
205.117 543.509 li
203.701 543.509 202.588 544.621 202.588 546.038 cv
202.588 549.78 li
202.588 559.896 li
202.588 570.013 li
202.588 580.128 li
202.588 583.871 li
202.588 585.287 203.701 586.4 205.117 586.4 cv
208.86 586.4 li
218.976 586.4 li
229.092 586.4 li
239.208 586.4 li
242.951 586.4 li
244.367 586.4 245.479 585.287 245.479 583.871 cv
245.479 580.128 li
245.479 570.013 li
245.479 559.896 li
245.479 549.78 li
245.479 546.038 li
245.581 544.621 244.367 543.509 242.951 543.509 cv
cp
f
228.991 567.079 mo
228.991 564.146 li
226.765 567.079 li
228.991 567.079 li
cp
232.835 567.079 mo
232.835 569.507 li
231.418 569.507 li
231.418 571.833 li
228.789 571.833 li
228.789 569.507 li
224.236 569.507 li
224.236 567.079 li
229.699 560.099 li
231.52 560.099 li
231.52 567.079 li
232.835 567.079 li
cp
.117647 .505882 .807843 rgb
f
220.595 565.662 mo
220.595 565.46 220.595 565.157 220.493 564.954 cv
220.392 564.752 220.291 564.55 220.089 564.348 cv
219.886 564.146 219.684 564.044 219.482 563.943 cv
219.279 563.842 218.976 563.842 218.774 563.842 cv
218.47 563.842 218.268 563.842 218.065 563.943 cv
217.863 564.044 217.661 564.146 217.458 564.348 cv
217.256 564.55 217.155 564.651 217.054 564.954 cv
216.953 565.157 216.953 565.359 216.953 565.662 cv
216.953 565.966 216.953 566.168 217.054 566.371 cv
217.155 566.573 217.256 566.775 217.458 566.978 cv
217.661 567.18 217.863 567.281 218.065 567.382 cv
218.268 567.483 218.571 567.483 218.774 567.483 cv
218.976 567.483 219.279 567.483 219.482 567.382 cv
219.684 567.281 219.886 567.18 220.089 566.978 cv
220.291 566.775 220.392 566.573 220.493 566.371 cv
220.595 566.168 220.595 565.865 220.595 565.662 cv
cp
223.124 565.662 mo
223.124 566.27 223.022 566.775 222.82 567.281 cv
222.618 567.787 222.314 568.191 221.91 568.596 cv
221.505 569.001 221.1 569.305 220.493 569.507 cv
219.988 569.709 219.38 569.811 218.774 569.811 cv
218.065 569.811 217.458 569.709 216.953 569.405 cv
216.447 569.102 215.941 568.799 215.537 568.293 cv
215.132 567.787 214.829 567.281 214.626 566.573 cv
214.424 565.865 214.323 565.056 214.323 564.246 cv
214.323 563.234 214.424 562.324 214.626 561.515 cv
214.829 560.706 215.132 559.998 215.537 559.492 cv
215.941 558.986 216.447 558.48 216.953 558.278 cv
217.56 557.975 218.167 557.873 218.875 557.873 cv
219.583 557.873 220.291 557.975 220.898 558.278 cv
221.505 558.581 222.112 558.986 222.517 559.593 cv
220.999 561.313 li
220.696 560.908 220.392 560.706 219.988 560.504 cv
219.583 560.301 219.178 560.2 218.774 560.2 cv
218.167 560.2 217.56 560.402 217.256 560.908 cv
216.852 561.414 216.649 562.021 216.649 562.932 cv
216.852 562.628 217.155 562.426 217.56 562.224 cv
217.964 562.021 218.369 562.021 218.875 562.021 cv
219.482 562.021 219.988 562.122 220.493 562.324 cv
220.999 562.526 221.404 562.83 221.809 563.134 cv
222.213 563.438 222.416 563.943 222.719 564.348 cv
223.022 564.55 223.124 565.056 223.124 565.662 cv
cp
f
205.117 544.723 mo
204.409 544.723 203.802 545.329 203.802 546.038 cv
203.802 583.871 li
203.802 584.579 204.409 585.187 205.117 585.187 cv
242.951 585.187 li
243.659 585.187 244.266 584.579 244.266 583.871 cv
244.266 546.038 li
244.266 545.329 243.659 544.723 242.951 544.723 cv
205.117 544.723 li
cp
242.951 587.715 mo
205.117 587.715 li
202.993 587.715 201.273 585.995 201.273 583.871 cv
201.273 546.038 li
201.273 543.913 202.993 542.193 205.117 542.193 cv
242.951 542.193 li
245.075 542.193 246.795 543.913 246.795 546.038 cv
246.795 583.871 li
246.795 585.995 245.075 587.715 242.951 587.715 cv
cp
f
208.86 544.723 mo
208.152 544.723 207.545 544.115 207.545 543.407 cv
207.545 535.82 li
207.545 535.112 208.152 534.506 208.86 534.506 cv
209.568 534.506 210.175 535.112 210.175 535.82 cv
210.175 543.407 li
210.175 544.115 209.568 544.723 208.86 544.723 cv
cp
f
218.976 544.723 mo
218.268 544.723 217.661 544.115 217.661 543.407 cv
217.661 535.82 li
217.661 535.112 218.268 534.506 218.976 534.506 cv
219.684 534.506 220.291 535.112 220.291 535.82 cv
220.291 543.407 li
220.291 544.115 219.684 544.723 218.976 544.723 cv
cp
f
229.092 544.723 mo
228.384 544.723 227.777 544.115 227.777 543.407 cv
227.777 535.82 li
227.777 535.112 228.384 534.506 229.092 534.506 cv
229.8 534.506 230.407 535.112 230.407 535.82 cv
230.407 543.407 li
230.407 544.115 229.8 544.723 229.092 544.723 cv
cp
f
239.208 544.723 mo
238.5 544.723 237.893 544.115 237.893 543.407 cv
237.893 535.82 li
237.893 535.112 238.5 534.506 239.208 534.506 cv
239.916 534.506 240.523 535.112 240.523 535.82 cv
240.523 543.407 li
240.523 544.115 239.916 544.723 239.208 544.723 cv
cp
f
208.86 595.302 mo
208.152 595.302 207.545 594.695 207.545 593.987 cv
207.545 586.4 li
207.545 585.692 208.152 585.085 208.86 585.085 cv
209.568 585.085 210.175 585.692 210.175 586.4 cv
210.175 593.987 li
210.175 594.695 209.568 595.302 208.86 595.302 cv
cp
f
218.976 595.302 mo
218.268 595.302 217.661 594.695 217.661 593.987 cv
217.661 586.4 li
217.661 585.692 218.268 585.085 218.976 585.085 cv
219.684 585.085 220.291 585.692 220.291 586.4 cv
220.291 593.987 li
220.291 594.695 219.684 595.302 218.976 595.302 cv
cp
f
229.092 595.302 mo
228.384 595.302 227.777 594.695 227.777 593.987 cv
227.777 586.4 li
227.777 585.692 228.384 585.085 229.092 585.085 cv
229.8 585.085 230.407 585.692 230.407 586.4 cv
230.407 593.987 li
230.407 594.695 229.8 595.302 229.092 595.302 cv
cp
f
239.208 595.302 mo
238.5 595.302 237.893 594.695 237.893 593.987 cv
237.893 586.4 li
237.893 585.692 238.5 585.085 239.208 585.085 cv
239.916 585.085 240.523 585.692 240.523 586.4 cv
240.523 593.987 li
240.523 594.695 239.916 595.302 239.208 595.302 cv
cp
f
253.167 551.096 mo
245.581 551.096 li
244.873 551.096 244.266 550.488 244.266 549.78 cv
244.266 549.072 244.873 548.466 245.581 548.466 cv
253.167 548.466 li
253.876 548.466 254.483 549.072 254.483 549.78 cv
254.382 550.488 253.775 551.096 253.167 551.096 cv
cp
f
253.167 561.212 mo
245.581 561.212 li
244.873 561.212 244.266 560.604 244.266 559.896 cv
244.266 559.188 244.873 558.581 245.581 558.581 cv
253.167 558.581 li
253.876 558.581 254.483 559.188 254.483 559.896 cv
254.382 560.604 253.775 561.212 253.167 561.212 cv
cp
f
253.167 571.327 mo
245.581 571.327 li
244.873 571.327 244.266 570.721 244.266 570.013 cv
244.266 569.305 244.873 568.697 245.581 568.697 cv
253.167 568.697 li
253.876 568.697 254.483 569.305 254.483 570.013 cv
254.483 570.721 253.775 571.327 253.167 571.327 cv
cp
f
253.167 581.443 mo
245.581 581.443 li
244.873 581.443 244.266 580.836 244.266 580.128 cv
244.266 579.42 244.873 578.813 245.581 578.813 cv
253.167 578.813 li
253.876 578.813 254.483 579.42 254.483 580.128 cv
254.382 580.836 253.775 581.443 253.167 581.443 cv
cp
f
202.588 551.096 mo
195.001 551.096 li
194.293 551.096 193.687 550.488 193.687 549.78 cv
193.687 549.072 194.293 548.466 195.001 548.466 cv
202.588 548.466 li
203.296 548.466 203.903 549.072 203.903 549.78 cv
203.802 550.488 203.195 551.096 202.588 551.096 cv
cp
f
202.588 561.212 mo
195.001 561.212 li
194.293 561.212 193.687 560.604 193.687 559.896 cv
193.687 559.188 194.293 558.581 195.001 558.581 cv
202.588 558.581 li
203.296 558.581 203.903 559.188 203.903 559.896 cv
203.802 560.604 203.195 561.212 202.588 561.212 cv
cp
f
202.588 571.327 mo
195.001 571.327 li
194.293 571.327 193.687 570.721 193.687 570.013 cv
193.687 569.305 194.293 568.697 195.001 568.697 cv
202.588 568.697 li
203.296 568.697 203.903 569.305 203.903 570.013 cv
203.903 570.721 203.195 571.327 202.588 571.327 cv
cp
f
202.588 581.443 mo
195.001 581.443 li
194.293 581.443 193.687 580.836 193.687 580.128 cv
193.687 579.42 194.293 578.813 195.001 578.813 cv
202.588 578.813 li
203.296 578.813 203.903 579.42 203.903 580.128 cv
203.802 580.836 203.195 581.443 202.588 581.443 cv
cp
f
46.5 514.881 mo
147.659 514.881 li
147.659 616.04 li
46.5 616.04 li
46.5 514.881 li
cp
1 1 1 rgb
f
67.541 551.096 mo
125.708 551.096 li
125.708 594.088 li
67.541 594.088 li
67.541 551.096 li
cp
f
118.424 535.922 mo
74.7231 535.922 li
70.6768 535.922 67.4399 539.159 67.4399 543.205 cv
67.4399 551.096 li
125.606 551.096 li
125.606 543.205 li
125.708 539.159 122.369 535.922 118.424 535.922 cv
cp
.607843 .788235 1 rgb
f
88.9868 568.799 mo
104.161 568.799 li
104.161 576.386 li
88.9868 576.386 li
88.9868 568.799 li
cp
1 1 1 rgb
f
78.8711 583.973 mo
114.276 583.973 li
114.276 594.088 li
78.8711 594.088 li
78.8711 583.973 li
cp
.607843 .788235 1 rgb
f
114.276 575.98 mo
114.276 583.871 li
78.8711 583.871 li
78.8711 575.98 li
78.8711 571.935 82.1079 568.697 86.1543 568.697 cv
88.9868 568.697 li
88.9868 576.284 li
104.161 576.284 li
104.161 568.697 li
106.993 568.697 li
111.04 568.799 114.276 572.035 114.276 575.98 cv
cp
f
75.1279 540.979 mo
90.3018 540.979 li
90.3018 546.038 li
75.1279 546.038 li
75.1279 540.979 li
cp
1 1 1 rgb
f
125.708 595.302 mo
114.276 595.302 li
113.568 595.302 112.961 594.695 112.961 593.987 cv
112.961 593.279 113.568 592.672 114.276 592.672 cv
124.393 592.672 li
124.393 543.104 li
124.393 539.766 121.661 537.136 118.424 537.136 cv
74.7231 537.136 li
71.3853 537.136 68.7549 539.867 68.7549 543.104 cv
68.7549 592.773 li
78.8711 592.773 li
79.5791 592.773 80.186 593.38 80.186 594.088 cv
80.186 594.796 79.5791 595.403 78.8711 595.403 cv
67.541 595.403 li
66.833 595.403 66.2261 594.797 66.2261 594.088 cv
66.2261 543.104 li
66.2261 538.35 70.0698 534.606 74.7231 534.606 cv
118.323 534.606 li
123.077 534.606 126.82 538.451 126.82 543.104 cv
126.82 593.987 li
126.921 594.695 126.314 595.302 125.708 595.302 cv
cp
.117647 .505882 .807843 rgb
f
114.276 595.302 mo
78.8711 595.302 li
78.1626 595.302 77.5557 594.695 77.5557 593.987 cv
77.5557 575.98 li
77.5557 571.227 81.3999 567.483 86.0532 567.483 cv
88.9868 567.483 li
89.6948 567.483 90.3018 568.091 90.3018 568.799 cv
90.3018 569.507 89.6948 570.113 88.9868 570.113 cv
86.1543 570.113 li
82.8159 570.113 80.186 572.845 80.186 576.082 cv
80.186 592.773 li
113.063 592.773 li
113.063 575.98 li
113.063 572.643 110.331 570.013 107.094 570.013 cv
104.161 570.013 li
103.453 570.013 102.846 569.405 102.846 568.697 cv
102.846 567.989 103.453 567.483 104.161 567.483 cv
106.993 567.483 li
111.748 567.483 115.49 571.327 115.49 575.98 cv
115.49 593.987 li
115.592 594.695 114.984 595.302 114.276 595.302 cv
cp
f
125.708 552.31 mo
67.541 552.31 li
66.833 552.31 66.2261 551.702 66.2261 550.994 cv
66.2261 550.286 66.833 549.68 67.541 549.68 cv
125.708 549.68 li
126.416 549.68 127.022 550.286 127.022 550.994 cv
126.921 551.702 126.314 552.31 125.708 552.31 cv
cp
f
114.276 585.187 mo
78.8711 585.187 li
78.1626 585.187 77.5557 584.579 77.5557 583.871 cv
77.5557 583.163 78.1626 582.556 78.8711 582.556 cv
114.276 582.556 li
114.984 582.556 115.592 583.163 115.592 583.871 cv
115.592 584.579 114.984 585.187 114.276 585.187 cv
cp
f
90.3018 575.07 mo
102.947 575.07 li
102.947 570.013 li
90.3018 570.013 li
90.3018 575.07 li
cp
104.161 577.6 mo
88.9868 577.6 li
88.2788 577.6 87.6719 576.992 87.6719 576.284 cv
87.6719 568.697 li
87.6719 567.989 88.2788 567.382 88.9868 567.382 cv
104.161 567.382 li
104.869 567.382 105.476 567.989 105.476 568.697 cv
105.476 576.284 li
105.476 576.992 104.869 577.6 104.161 577.6 cv
cp
f
100.417 590.244 mo
91.5156 590.244 li
90.8076 590.244 90.2007 589.637 90.2007 588.929 cv
90.2007 588.221 90.8076 587.614 91.5156 587.614 cv
100.417 587.614 li
101.126 587.614 101.733 588.221 101.733 588.929 cv
101.632 589.637 101.025 590.244 100.417 590.244 cv
cp
f
100.417 559.896 mo
91.5156 559.896 li
90.8076 559.896 90.2007 559.289 90.2007 558.581 cv
90.2007 557.873 90.8076 557.267 91.5156 557.267 cv
100.417 557.267 li
101.126 557.267 101.733 557.873 101.733 558.581 cv
101.632 559.289 101.025 559.896 100.417 559.896 cv
cp
f
76.3418 544.723 mo
88.9868 544.723 li
88.9868 542.193 li
76.3418 542.193 li
76.3418 544.723 li
cp
90.3018 547.252 mo
75.1279 547.252 li
74.4199 547.252 73.813 546.645 73.813 545.937 cv
73.813 540.879 li
73.813 540.171 74.4199 539.563 75.1279 539.563 cv
90.3018 539.563 li
91.0098 539.563 91.6167 540.171 91.6167 540.879 cv
91.6167 545.937 li
91.5156 546.645 90.9087 547.252 90.3018 547.252 cv
cp
f
101.227 538.451 mo
100.013 538.451 99.1025 539.463 99.1025 540.575 cv
99.1025 541.789 100.114 542.699 101.227 542.699 cv
102.441 542.699 103.351 541.688 103.351 540.575 cv
103.453 539.361 102.441 538.451 101.227 538.451 cv
cp
f
106.689 538.451 mo
105.476 538.451 104.565 539.463 104.565 540.575 cv
104.565 541.789 105.577 542.699 106.689 542.699 cv
107.802 542.699 108.814 541.688 108.814 540.575 cv
108.814 539.361 107.903 538.451 106.689 538.451 cv
cp
f
112.152 542.699 mo
113.366 542.699 114.276 541.688 114.276 540.575 cv
114.276 539.361 113.265 538.451 112.152 538.451 cv
110.938 538.451 110.028 539.463 110.028 540.575 cv
109.927 541.789 110.938 542.699 112.152 542.699 cv
cp
f
101.227 544.217 mo
100.013 544.217 99.1025 545.229 99.1025 546.341 cv
99.1025 547.555 100.114 548.466 101.227 548.466 cv
102.441 548.466 103.351 547.454 103.351 546.341 cv
103.453 545.127 102.441 544.217 101.227 544.217 cv
cp
f
106.689 544.217 mo
105.476 544.217 104.565 545.229 104.565 546.341 cv
104.565 547.555 105.577 548.466 106.689 548.466 cv
107.802 548.466 108.814 547.454 108.814 546.341 cv
108.814 545.127 107.903 544.217 106.689 544.217 cv
cp
f
112.152 544.217 mo
110.938 544.217 110.028 545.229 110.028 546.341 cv
110.028 547.555 111.04 548.466 112.152 548.466 cv
113.366 548.466 114.276 547.454 114.276 546.341 cv
114.276 545.127 113.265 544.217 112.152 544.217 cv
cp
f
556.341 387.42 mo
657.5 387.42 li
657.5 488.579 li
556.341 488.579 li
556.341 387.42 li
cp
1 1 1 rgb
f
620.476 408.461 mo
592.354 408.461 li
590.33 408.461 588.712 410.08 588.712 412.104 cv
588.712 421.106 li
588.712 432.537 li
588.712 443.969 li
588.712 455.197 li
588.712 462.986 li
588.712 465.01 590.33 466.628 592.354 466.628 cv
620.476 466.628 li
622.499 466.628 624.117 465.01 624.117 462.986 cv
624.117 455.197 li
624.117 443.867 li
624.117 432.437 li
624.117 421.106 li
624.117 412.104 li
624.117 410.08 622.499 408.461 620.476 408.461 cv
cp
f
617.846 418.375 mo
617.846 456.613 li
617.846 458.637 616.228 460.255 614.204 460.255 cv
598.625 460.255 li
596.603 460.255 594.983 458.637 594.983 456.613 cv
594.983 418.375 li
594.983 416.352 596.603 414.733 598.625 414.733 cv
614.103 414.733 li
616.126 414.733 617.846 416.352 617.846 418.375 cv
cp
.607843 .788235 1 rgb
f
592.354 409.675 mo
591.039 409.675 590.027 410.687 590.027 412.002 cv
590.027 462.885 li
590.027 464.2 591.039 465.212 592.354 465.212 cv
620.476 465.212 li
621.791 465.212 622.803 464.2 622.803 462.885 cv
622.803 412.002 li
622.803 410.687 621.791 409.675 620.476 409.675 cv
592.354 409.675 li
cp
620.476 467.842 mo
592.354 467.842 li
589.622 467.842 587.498 465.616 587.498 462.986 cv
587.498 412.002 li
587.498 409.271 589.724 407.146 592.354 407.146 cv
620.476 407.146 li
623.207 407.146 625.331 409.372 625.331 412.002 cv
625.331 462.885 li
625.433 465.616 623.207 467.842 620.476 467.842 cv
cp
.117647 .505882 .807843 rgb
f
598.625 416.049 mo
597.311 416.049 596.299 417.061 596.299 418.375 cv
596.299 456.613 li
596.299 457.929 597.311 458.939 598.625 458.939 cv
614.103 458.939 li
615.418 458.939 616.43 457.929 616.43 456.613 cv
616.43 418.375 li
616.43 417.061 615.418 416.049 614.103 416.049 cv
598.625 416.049 li
cp
614.204 461.57 mo
598.625 461.57 li
595.895 461.57 593.77 459.345 593.77 456.715 cv
593.77 418.375 li
593.77 415.644 595.995 413.52 598.625 413.52 cv
614.103 413.52 li
616.834 413.52 618.958 415.745 618.958 418.375 cv
618.958 456.613 li
619.06 459.345 616.834 461.57 614.204 461.57 cv
cp
f
588.712 422.32 mo
577.382 422.32 li
576.674 422.32 576.067 421.713 576.067 421.005 cv
576.067 420.297 576.674 419.69 577.382 419.69 cv
588.712 419.69 li
589.42 419.69 590.027 420.297 590.027 421.005 cv
590.027 421.713 589.42 422.32 588.712 422.32 cv
cp
f
588.712 433.751 mo
577.382 433.751 li
576.674 433.751 576.067 433.145 576.067 432.437 cv
576.067 431.729 576.674 431.121 577.382 431.121 cv
588.712 431.121 li
589.42 431.121 590.027 431.729 590.027 432.437 cv
590.027 433.145 589.42 433.751 588.712 433.751 cv
cp
f
588.712 445.081 mo
577.382 445.081 li
576.674 445.081 576.067 444.475 576.067 443.766 cv
576.067 443.058 576.674 442.451 577.382 442.451 cv
588.712 442.451 li
589.42 442.451 590.027 443.058 590.027 443.766 cv
590.027 444.475 589.42 445.081 588.712 445.081 cv
cp
f
588.712 456.512 mo
577.382 456.512 li
576.674 456.512 576.067 455.905 576.067 455.197 cv
576.067 454.489 576.674 453.882 577.382 453.882 cv
588.712 453.882 li
589.42 453.882 590.027 454.489 590.027 455.197 cv
590.027 455.905 589.42 456.512 588.712 456.512 cv
cp
f
635.549 422.32 mo
624.117 422.32 li
623.409 422.32 622.803 421.713 622.803 421.005 cv
622.803 420.297 623.409 419.69 624.117 419.69 cv
635.549 419.69 li
636.257 419.69 636.863 420.297 636.863 421.005 cv
636.863 421.713 636.155 422.32 635.549 422.32 cv
cp
f
635.549 433.751 mo
624.117 433.751 li
623.409 433.751 622.803 433.145 622.803 432.437 cv
622.803 431.729 623.409 431.121 624.117 431.121 cv
635.549 431.121 li
636.257 431.121 636.863 431.729 636.863 432.437 cv
636.763 433.145 636.155 433.751 635.549 433.751 cv
cp
f
635.549 445.081 mo
624.117 445.081 li
623.409 445.081 622.803 444.475 622.803 443.766 cv
622.803 443.058 623.409 442.451 624.117 442.451 cv
635.549 442.451 li
636.257 442.451 636.863 443.058 636.863 443.766 cv
636.863 444.475 636.155 445.081 635.549 445.081 cv
cp
f
635.549 456.512 mo
624.117 456.512 li
623.409 456.512 622.803 455.905 622.803 455.197 cv
622.803 454.489 623.409 453.882 624.117 453.882 cv
635.549 453.882 li
636.257 453.882 636.863 454.489 636.863 455.197 cv
636.763 455.905 636.155 456.512 635.549 456.512 cv
cp
f
428.881 387.42 mo
530.04 387.42 li
530.04 488.579 li
428.881 488.579 li
428.881 387.42 li
cp
1 1 1 rgb
f
494.432 408.461 mo
463.478 408.461 li
462.264 408.461 461.252 409.473 461.252 410.687 cv
461.252 464.504 li
461.252 465.718 462.264 466.729 463.478 466.729 cv
494.533 466.729 li
495.747 466.729 496.759 465.718 496.759 464.504 cv
496.759 410.586 li
496.657 409.372 495.646 408.461 494.432 408.461 cv
cp
f
478.954 441.237 mo
483.871 441.237 487.856 445.223 487.856 450.139 cv
487.856 455.056 483.871 459.041 478.954 459.041 cv
474.038 459.041 470.053 455.056 470.053 450.139 cv
470.053 445.223 474.038 441.237 478.954 441.237 cv
cp
.607843 .788235 1 rgb
f
463.478 409.675 mo
462.972 409.675 462.566 410.08 462.566 410.586 cv
462.566 464.402 li
462.566 464.908 462.972 465.313 463.478 465.313 cv
494.533 465.313 li
495.039 465.313 495.443 464.908 495.443 464.402 cv
495.443 410.586 li
495.443 410.08 495.039 409.675 494.533 409.675 cv
463.478 409.675 li
cp
494.432 467.842 mo
463.478 467.842 li
461.555 467.842 460.038 466.324 460.038 464.402 cv
460.038 410.586 li
460.038 408.664 461.555 407.146 463.478 407.146 cv
494.533 407.146 li
496.455 407.146 497.973 408.664 497.973 410.586 cv
497.973 464.402 li
497.973 466.324 496.354 467.842 494.432 467.842 cv
cp
.117647 .505882 .807843 rgb
f
489.07 417.263 mo
468.839 417.263 li
468.131 417.263 467.523 416.655 467.523 415.947 cv
467.523 415.239 468.131 414.632 468.839 414.632 cv
489.07 414.632 li
489.778 414.632 490.386 415.239 490.386 415.947 cv
490.386 416.655 489.778 417.263 489.07 417.263 cv
cp
f
489.07 424.85 mo
468.839 424.85 li
468.131 424.85 467.523 424.242 467.523 423.534 cv
467.523 422.826 468.131 422.219 468.839 422.219 cv
489.07 422.219 li
489.778 422.219 490.386 422.826 490.386 423.534 cv
490.386 424.242 489.778 424.85 489.07 424.85 cv
cp
f
489.07 432.437 mo
468.839 432.437 li
468.131 432.437 467.523 431.829 467.523 431.121 cv
467.523 430.413 468.131 429.806 468.839 429.806 cv
489.07 429.806 li
489.778 429.806 490.386 430.413 490.386 431.121 cv
490.386 431.829 489.778 432.437 489.07 432.437 cv
cp
f
478.954 442.552 mo
474.807 442.552 471.367 445.991 471.367 450.139 cv
471.367 454.286 474.807 457.726 478.954 457.726 cv
483.102 457.726 486.541 454.286 486.541 450.139 cv
486.541 445.991 483.102 442.552 478.954 442.552 cv
cp
478.954 460.255 mo
473.391 460.255 468.839 455.703 468.839 450.139 cv
468.839 444.575 473.391 440.023 478.954 440.023 cv
484.519 440.023 489.07 444.575 489.07 450.139 cv
489.07 455.703 484.519 460.255 478.954 460.255 cv
cp
f
301.42 387.42 mo
402.579 387.42 li
402.579 488.579 li
301.42 488.579 li
301.42 387.42 li
cp
1 1 1 rgb
f
359.587 465.414 mo
357.058 466.122 354.327 466.526 351.494 466.526 cv
335.41 466.526 322.36 453.478 322.36 437.393 cv
322.36 421.309 335.41 408.259 351.494 408.259 cv
367.578 408.259 380.628 421.309 380.628 437.393 cv
380.628 440.226 380.224 442.957 379.516 445.485 cv
376.986 439.416 370.715 435.572 364.139 436.179 cv
363.431 429.907 358.069 424.85 351.494 424.85 cv
344.514 424.85 338.849 430.514 338.849 437.494 cv
338.849 444.069 343.907 449.431 350.28 450.038 cv
349.673 456.613 353.518 462.885 359.587 465.414 cv
cp
.607843 .788235 1 rgb
f
379.414 445.587 mo
380.122 447.408 380.526 449.33 380.526 451.353 cv
380.526 459.749 373.749 466.526 365.353 466.526 cv
363.33 466.526 361.307 466.122 359.587 465.414 cv
353.518 462.885 349.471 456.613 350.28 449.734 cv
351.089 442.147 357.463 436.28 365.353 436.28 cv
371.726 436.28 377.188 440.124 379.414 445.587 cv
cp
1 1 1 rgb
f
351.494 467.842 mo
343.401 467.842 335.814 464.706 330.048 458.939 cv
324.282 453.174 321.146 445.587 321.146 437.494 cv
321.146 429.401 324.283 421.814 330.048 416.049 cv
335.814 410.282 343.401 407.146 351.494 407.146 cv
359.587 407.146 367.174 410.282 372.939 416.049 cv
378.706 421.814 381.842 429.401 381.842 437.494 cv
381.842 440.326 381.438 443.26 380.628 445.991 cv
380.426 446.699 379.718 447.003 379.11 446.902 cv
378.402 446.699 378.099 445.991 378.2 445.385 cv
378.908 442.855 379.313 440.226 379.313 437.596 cv
379.313 422.118 366.87 409.675 351.494 409.675 cv
336.118 409.675 323.675 422.118 323.675 437.494 cv
323.675 452.87 336.118 465.313 351.494 465.313 cv
354.125 465.313 356.755 464.908 359.283 464.2 cv
359.991 463.998 360.699 464.402 360.801 465.11 cv
361.003 465.818 360.599 466.526 359.891 466.628 cv
357.261 467.438 354.327 467.842 351.494 467.842 cv
cp
.117647 .505882 .807843 rgb
f
372.535 459.851 mo
372.231 459.851 371.929 459.749 371.625 459.445 cv
357.361 445.183 li
356.855 444.677 356.855 443.867 357.361 443.361 cv
357.867 442.855 358.677 442.855 359.183 443.361 cv
373.445 457.625 li
373.951 458.131 373.951 458.939 373.445 459.445 cv
373.243 459.648 372.839 459.851 372.535 459.851 cv
cp
f
358.271 459.851 mo
357.969 459.851 357.665 459.749 357.361 459.445 cv
356.855 458.939 356.855 458.131 357.361 457.625 cv
371.625 443.361 li
372.131 442.855 372.939 442.855 373.445 443.361 cv
373.951 443.867 373.951 444.677 373.445 445.183 cv
359.183 459.445 li
358.879 459.648 358.575 459.851 358.271 459.851 cv
cp
f
360.093 464.301 mo
361.813 465.01 363.532 465.313 365.454 465.313 cv
373.041 465.313 379.313 459.041 379.313 451.454 cv
379.313 449.633 379.01 447.813 378.302 446.093 cv
375.975 440.529 370.613 437.292 365.15 437.494 cv
362.419 437.596 359.891 438.404 357.665 439.82 cv
351.899 443.665 351.595 449.734 351.595 449.836 cv
350.887 456.209 354.529 461.975 360.093 464.301 cv
cp
365.454 467.842 mo
363.33 467.842 361.205 467.438 359.183 466.628 cv
352.708 463.998 348.864 457.625 349.066 451.05 cv
349.167 445.688 352 440.529 356.653 437.596 cv
365.252 432.133 376.784 435.673 380.729 445.183 cv
381.538 447.205 381.943 449.33 381.943 451.454 cv
381.842 460.457 374.457 467.842 365.454 467.842 cv
cp
f
340.063 455.5 mo
339.861 455.5 339.558 455.399 339.355 455.298 cv
333.488 451.252 329.947 444.677 329.947 437.494 cv
329.947 436.786 330.554 436.179 331.262 436.179 cv
331.971 436.179 332.578 436.786 332.578 437.494 cv
332.578 443.766 335.713 449.633 340.873 453.174 cv
341.479 453.578 341.581 454.388 341.176 454.894 cv
340.873 455.298 340.468 455.5 340.063 455.5 cv
cp
f
370.613 432.537 mo
370.006 432.537 369.5 432.133 369.399 431.627 cv
367.781 425.558 363.33 420.601 357.463 418.477 cv
356.855 418.274 356.451 417.465 356.653 416.857 cv
356.855 416.251 357.665 415.846 358.271 416.049 cv
364.948 418.477 370.006 424.04 371.827 430.919 cv
372.029 431.627 371.625 432.335 370.917 432.437 cv
370.917 432.537 370.715 432.537 370.613 432.537 cv
cp
f
350.179 451.353 mo
346.74 451.05 343.604 449.431 341.277 446.902 cv
338.951 444.373 337.635 441.035 337.635 437.494 cv
337.635 429.806 343.907 423.534 351.595 423.534 cv
355.035 423.534 358.373 424.85 361.003 427.176 cv
363.532 429.503 365.15 432.639 365.454 436.078 cv
365.556 436.786 365.05 437.393 364.342 437.494 cv
363.633 437.596 363.026 437.09 362.925 436.382 cv
362.419 430.514 357.463 426.063 351.595 426.063 cv
345.323 426.063 340.165 431.121 340.165 437.494 cv
340.165 443.361 344.615 448.217 350.482 448.824 cv
351.191 448.925 351.696 449.532 351.595 450.24 cv
351.494 450.948 350.887 451.454 350.179 451.353 cv
cp
f
173.96 387.42 mo
275.119 387.42 li
275.119 488.579 li
173.96 488.579 li
173.96 387.42 li
cp
1 1 1 rgb
f
236.679 437.494 mo
236.679 430.514 231.014 424.85 224.034 424.85 cv
217.054 424.85 211.389 430.514 211.389 437.494 cv
211.389 444.475 217.054 450.139 224.034 450.139 cv
231.014 450.139 236.679 444.475 236.679 437.494 cv
cp
224.034 408.461 mo
240.118 408.461 253.167 421.511 253.167 437.596 cv
253.167 453.68 240.118 466.628 224.034 466.628 cv
207.95 466.628 195.001 453.578 195.001 437.494 cv
195.001 421.41 207.95 408.461 224.034 408.461 cv
cp
f
224.034 409.675 mo
208.658 409.675 196.215 422.118 196.215 437.494 cv
196.215 452.87 208.658 465.313 224.034 465.313 cv
239.41 465.313 251.853 452.87 251.853 437.494 cv
251.853 422.118 239.41 409.675 224.034 409.675 cv
cp
224.034 467.842 mo
215.941 467.842 208.354 464.706 202.588 458.939 cv
196.822 453.174 193.687 445.587 193.687 437.494 cv
193.687 429.401 196.822 421.814 202.588 416.049 cv
208.354 410.282 215.941 407.146 224.034 407.146 cv
232.126 407.146 239.713 410.282 245.479 416.049 cv
251.246 421.814 254.382 429.401 254.382 437.494 cv
254.382 445.587 251.246 453.174 245.479 458.939 cv
239.713 464.706 232.126 467.842 224.034 467.842 cv
cp
.117647 .505882 .807843 rgb
f
224.034 426.164 mo
217.762 426.164 212.603 431.223 212.603 437.596 cv
212.603 443.969 217.661 449.026 224.034 449.026 cv
230.407 449.026 235.465 443.969 235.465 437.596 cv
235.465 431.223 230.306 426.164 224.034 426.164 cv
cp
224.034 451.454 mo
216.346 451.454 210.074 445.183 210.074 437.494 cv
210.074 429.806 216.346 423.534 224.034 423.534 cv
231.722 423.534 237.994 429.806 237.994 437.494 cv
237.994 445.183 231.722 451.454 224.034 451.454 cv
cp
f
224.034 460.255 mo
211.49 460.255 201.273 450.038 201.273 437.494 cv
201.273 436.786 201.88 436.179 202.588 436.179 cv
203.296 436.179 203.903 436.786 203.903 437.494 cv
203.903 448.622 213.008 457.726 224.135 457.726 cv
224.843 457.726 225.45 458.333 225.45 459.041 cv
225.349 459.648 224.742 460.255 224.034 460.255 cv
cp
f
245.581 438.81 mo
244.873 438.81 244.266 438.202 244.266 437.494 cv
244.266 426.366 235.162 417.263 224.034 417.263 cv
223.326 417.263 222.719 416.655 222.719 415.947 cv
222.719 415.239 223.326 414.632 224.034 414.632 cv
236.578 414.733 246.795 424.95 246.795 437.494 cv
246.795 438.202 246.188 438.81 245.581 438.81 cv
cp
f
46.5 387.42 mo
147.659 387.42 li
147.659 488.579 li
46.5 488.579 li
46.5 387.42 li
cp
1 1 1 rgb
f
104.667 465.414 mo
102.137 466.122 99.4063 466.526 96.5737 466.526 cv
80.4893 466.526 67.4399 453.478 67.4399 437.393 cv
67.4399 421.309 80.4893 408.259 96.5737 408.259 cv
112.658 408.259 125.708 421.309 125.708 437.393 cv
125.708 440.226 125.303 442.957 124.595 445.485 cv
121.964 439.214 115.592 435.572 109.219 436.179 cv
108.51 429.907 103.149 424.85 96.5737 424.85 cv
89.5938 424.85 83.9287 430.514 83.9287 437.494 cv
83.9287 444.069 88.9868 449.431 95.3599 450.038 cv
94.7529 456.512 98.3945 462.885 104.667 465.414 cv
cp
.607843 .788235 1 rgb
f
110.534 436.28 mo
116.907 436.28 122.268 440.124 124.595 445.688 cv
125.303 447.509 125.708 449.431 125.708 451.454 cv
125.708 459.851 118.93 466.628 110.534 466.628 cv
108.51 466.628 106.487 466.224 104.768 465.516 cv
99.3052 463.188 95.3599 457.827 95.3599 451.454 cv
95.3599 442.957 102.137 436.28 110.534 436.28 cv
cp
1 1 1 rgb
f
96.5737 467.842 mo
88.481 467.842 80.894 464.706 75.1279 458.939 cv
69.3618 453.174 66.2261 445.587 66.2261 437.494 cv
66.2261 429.401 69.3618 421.814 75.1279 416.049 cv
80.894 410.282 88.481 407.146 96.5737 407.146 cv
104.667 407.146 112.253 410.282 118.02 416.049 cv
123.785 421.814 126.921 429.401 126.921 437.494 cv
126.921 440.326 126.517 443.26 125.708 445.991 cv
125.505 446.699 124.797 447.003 124.19 446.902 cv
123.482 446.699 123.179 445.991 123.28 445.385 cv
123.988 442.855 124.393 440.226 124.393 437.596 cv
124.393 422.118 111.95 409.675 96.5737 409.675 cv
81.1973 409.675 68.7549 422.118 68.7549 437.494 cv
68.7549 452.87 81.1973 465.313 96.5737 465.313 cv
99.2036 465.313 101.834 464.908 104.363 464.2 cv
105.071 463.998 105.779 464.402 105.88 465.11 cv
106.083 465.818 105.678 466.526 104.97 466.628 cv
102.34 467.438 99.4063 467.842 96.5737 467.842 cv
cp
.117647 .505882 .807843 rgb
f
96.5737 451.454 mo
96.5737 457.119 99.9121 462.177 105.172 464.301 cv
106.892 465.01 108.612 465.313 110.534 465.313 cv
118.121 465.313 124.393 459.041 124.393 451.454 cv
124.393 449.633 124.089 447.813 123.381 446.093 cv
121.054 440.529 115.693 437.292 110.23 437.494 cv
109.927 437.494 109.623 437.494 109.016 437.596 cv
102.036 438.304 96.5737 444.171 96.5737 451.454 cv
cp
110.534 467.842 mo
108.409 467.842 106.285 467.438 104.262 466.628 cv
98.0908 464.099 94.146 458.131 94.146 451.454 cv
94.146 443.563 99.7095 436.887 107.296 435.37 cv
108.409 435.168 109.522 435.066 110.534 435.066 cv
117.21 435.066 123.179 439.012 125.708 445.183 cv
126.517 447.205 126.921 449.33 126.921 451.454 cv
126.921 460.457 119.537 467.842 110.534 467.842 cv
cp
f
120.649 452.668 mo
100.417 452.668 li
99.7095 452.668 99.1025 452.062 99.1025 451.353 cv
99.1025 450.645 99.7095 450.038 100.417 450.038 cv
120.649 450.038 li
121.357 450.038 121.964 450.645 121.964 451.353 cv
121.964 452.062 121.256 452.668 120.649 452.668 cv
cp
f
85.1426 455.5 mo
84.9404 455.5 84.6367 455.399 84.4346 455.298 cv
78.5674 451.252 75.0269 444.677 75.0269 437.494 cv
75.0269 436.786 75.6338 436.179 76.3418 436.179 cv
77.0498 436.179 77.6572 436.786 77.6572 437.494 cv
77.6572 443.766 80.793 449.633 85.9521 453.174 cv
86.5591 453.578 86.6602 454.388 86.2554 454.894 cv
85.9521 455.298 85.5474 455.5 85.1426 455.5 cv
cp
f
115.693 432.537 mo
115.086 432.537 114.58 432.133 114.479 431.627 cv
112.86 425.558 108.409 420.601 102.542 418.477 cv
101.935 418.274 101.53 417.465 101.733 416.857 cv
101.935 416.251 102.744 415.846 103.352 416.049 cv
110.028 418.477 115.086 424.04 116.907 430.919 cv
117.109 431.627 116.704 432.335 115.996 432.437 cv
115.996 432.537 115.794 432.537 115.693 432.537 cv
cp
f
95.2588 451.353 mo
91.8193 451.05 88.6831 449.431 86.3564 446.902 cv
84.0298 444.373 82.7148 441.035 82.7148 437.494 cv
82.7148 429.806 88.9868 423.534 96.6748 423.534 cv
100.114 423.534 103.453 424.85 106.083 427.176 cv
108.612 429.503 110.23 432.639 110.534 436.078 cv
110.635 436.786 110.129 437.393 109.421 437.494 cv
108.713 437.596 108.106 437.09 108.004 436.382 cv
107.499 430.514 102.542 426.063 96.6748 426.063 cv
90.4028 426.063 85.2437 431.121 85.2437 437.494 cv
85.2437 443.361 89.6948 448.217 95.562 448.824 cv
96.27 448.925 96.7759 449.532 96.6748 450.24 cv
96.5737 450.948 95.9668 451.454 95.2588 451.353 cv
cp
f
556.341 259.96 mo
657.5 259.96 li
657.5 361.119 li
556.341 361.119 li
556.341 259.96 li
cp
1 1 1 rgb
f
614.508 337.954 mo
611.979 338.662 609.247 339.066 606.415 339.066 cv
590.33 339.066 577.281 326.017 577.281 309.933 cv
577.281 293.849 590.33 280.799 606.415 280.799 cv
622.499 280.799 635.549 293.849 635.549 309.933 cv
635.549 312.765 635.144 315.497 634.436 318.025 cv
631.907 311.956 625.635 308.112 619.06 308.719 cv
618.352 302.447 612.99 297.389 606.415 297.389 cv
599.435 297.389 593.77 303.054 593.77 310.034 cv
593.77 316.609 598.828 321.971 605.201 322.578 cv
604.594 329.052 608.235 335.425 614.508 337.954 cv
cp
.607843 .788235 1 rgb
f
634.335 318.126 mo
635.043 319.947 635.447 321.87 635.447 323.893 cv
635.447 332.289 628.67 339.066 620.273 339.066 cv
618.25 339.066 616.228 338.662 614.508 337.954 cv
605.302 334.11 602.166 322.578 608.235 314.687 cv
608.235 314.687 608.337 314.485 608.438 314.485 cv
609.247 313.473 610.461 312.259 611.776 311.349 cv
619.768 306.089 630.693 309.225 634.335 318.126 cv
cp
1 1 1 rgb
f
606.415 340.381 mo
598.322 340.381 590.735 337.246 584.969 331.479 cv
579.203 325.713 576.067 318.126 576.067 310.034 cv
576.067 301.941 579.203 294.354 584.969 288.588 cv
590.735 282.822 598.322 279.686 606.415 279.686 cv
614.508 279.686 622.095 282.822 627.86 288.588 cv
633.627 294.354 636.763 301.941 636.763 310.034 cv
636.763 312.866 636.357 315.8 635.549 318.531 cv
635.346 319.239 634.638 319.543 634.031 319.442 cv
633.323 319.239 633.02 318.531 633.121 317.924 cv
633.829 315.396 634.233 312.765 634.233 310.135 cv
634.233 294.658 621.791 282.215 606.415 282.215 cv
591.039 282.215 578.596 294.658 578.596 310.034 cv
578.596 325.41 591.039 337.853 606.415 337.853 cv
609.045 337.853 611.675 337.448 614.204 336.74 cv
614.912 336.538 615.62 336.942 615.722 337.65 cv
615.924 338.358 615.519 339.066 614.811 339.167 cv
612.181 339.977 609.247 340.381 606.415 340.381 cv
cp
.117647 .505882 .807843 rgb
f
615.014 336.841 mo
616.732 337.549 618.453 337.853 620.375 337.853 cv
627.962 337.853 634.233 331.581 634.233 323.994 cv
634.233 322.173 633.93 320.352 633.222 318.632 cv
631.098 313.473 626.039 309.933 620.071 310.034 cv
619.768 310.034 619.565 310.034 619.565 310.034 cv
619.565 310.034 619.565 310.034 619.464 310.034 cv
615.722 310.236 612.282 311.956 609.753 314.991 cv
603.582 322.274 606.313 333.199 615.014 336.841 cv
cp
620.375 340.381 mo
618.25 340.381 616.126 339.977 614.103 339.167 cv
604.189 335.121 600.851 322.78 607.123 314.181 cv
609.651 310.641 613.9 308.112 618.554 307.606 cv
619.161 307.505 619.768 307.505 620.375 307.505 cv
627.051 307.505 633.02 311.45 635.549 317.621 cv
636.357 319.644 636.763 321.769 636.763 323.893 cv
636.763 332.997 629.378 340.381 620.375 340.381 cv
cp
f
617.846 332.795 mo
617.441 332.795 617.138 332.592 616.834 332.289 cv
611.776 325.916 li
611.371 325.41 611.473 324.601 611.979 324.095 cv
612.484 323.69 613.294 323.792 613.799 324.297 cv
617.846 329.355 li
626.95 316.812 li
627.354 316.205 628.164 316.104 628.67 316.508 cv
629.176 316.913 629.378 317.722 628.974 318.228 cv
618.857 332.188 li
618.554 332.592 618.25 332.795 617.846 332.795 cv
617.846 332.795 li
cp
f
594.983 328.04 mo
594.781 328.04 594.479 327.939 594.275 327.838 cv
588.408 323.792 584.868 317.216 584.868 310.034 cv
584.868 309.326 585.475 308.719 586.183 308.719 cv
586.891 308.719 587.498 309.326 587.498 310.034 cv
587.498 316.306 590.634 322.173 595.793 325.713 cv
596.4 326.118 596.501 326.927 596.097 327.433 cv
595.793 327.838 595.389 328.04 594.983 328.04 cv
cp
f
625.534 305.077 mo
624.927 305.077 624.421 304.672 624.32 304.167 cv
622.701 298.097 618.25 293.141 612.383 291.016 cv
611.776 290.813 611.371 290.004 611.574 289.397 cv
611.776 288.791 612.585 288.386 613.192 288.588 cv
619.869 291.016 624.927 296.58 626.748 303.458 cv
626.95 304.167 626.545 304.875 625.837 304.976 cv
625.837 305.077 625.635 305.077 625.534 305.077 cv
cp
f
605.1 323.893 mo
601.66 323.589 598.524 321.971 596.197 319.442 cv
593.871 316.913 592.556 313.575 592.556 310.034 cv
592.556 302.346 598.828 296.074 606.516 296.074 cv
609.955 296.074 613.294 297.389 615.924 299.716 cv
618.453 302.042 620.071 305.178 620.375 308.618 cv
620.476 309.326 619.97 309.933 619.262 310.034 cv
618.554 310.135 617.947 309.629 617.846 308.921 cv
617.34 303.054 612.383 298.603 606.516 298.603 cv
600.244 298.603 595.085 303.661 595.085 310.034 cv
595.085 315.901 599.536 320.757 605.403 321.364 cv
606.111 321.465 606.617 322.072 606.516 322.78 cv
606.415 323.488 605.808 323.994 605.1 323.893 cv
cp
f
428.881 259.96 mo
530.04 259.96 li
530.04 361.119 li
428.881 361.119 li
428.881 259.96 li
cp
1 1 1 rgb
f
508.088 298.704 mo
508.088 329.052 li
500.501 329.052 li
492.914 329.052 li
465.096 329.052 li
457.509 329.052 li
449.922 329.052 li
449.922 298.704 li
508.088 298.704 li
cp
f
484.013 284.744 mo
491.723 284.744 497.973 290.994 497.973 298.704 cv
497.973 306.414 491.723 312.664 484.013 312.664 cv
476.303 312.664 470.053 306.414 470.053 298.704 cv
470.053 290.994 476.303 284.744 484.013 284.744 cv
cp
.607843 .788235 1 rgb
f
457.509 329.052 mo
465.096 329.052 li
465.096 335.425 li
457.509 335.425 li
457.509 329.052 li
cp
f
492.914 329.052 mo
500.501 329.052 li
500.501 335.425 li
492.914 335.425 li
492.914 329.052 li
cp
f
484.013 291.117 mo
488.16 291.117 491.6 294.557 491.6 298.704 cv
491.6 302.852 488.16 306.291 484.013 306.291 cv
479.865 306.291 476.426 302.852 476.426 298.704 cv
476.426 294.557 479.865 291.117 484.013 291.117 cv
cp
1 1 1 rgb
f
465.096 336.639 mo
457.509 336.639 li
456.801 336.639 456.193 336.032 456.193 335.324 cv
456.193 328.951 li
456.193 328.243 456.801 327.636 457.509 327.636 cv
458.217 327.636 458.824 328.243 458.824 328.951 cv
458.824 334.009 li
463.882 334.009 li
463.882 328.951 li
463.882 328.243 464.488 327.636 465.197 327.636 cv
465.905 327.636 466.512 328.243 466.512 328.951 cv
466.512 335.324 li
466.31 336.032 465.703 336.639 465.096 336.639 cv
cp
.117647 .505882 .807843 rgb
f
500.501 336.639 mo
492.914 336.639 li
492.206 336.639 491.6 336.032 491.6 335.324 cv
491.6 328.951 li
491.6 328.243 492.206 327.636 492.914 327.636 cv
493.622 327.636 494.229 328.243 494.229 328.951 cv
494.229 334.009 li
499.287 334.009 li
499.287 328.951 li
499.287 328.243 499.895 327.636 500.603 327.636 cv
501.311 327.636 501.918 328.243 501.918 328.951 cv
501.918 335.324 li
501.715 336.032 501.108 336.639 500.501 336.639 cv
cp
f
508.088 330.266 mo
449.922 330.266 li
449.214 330.266 448.606 329.659 448.606 328.951 cv
448.606 298.603 li
448.606 297.895 449.214 297.288 449.922 297.288 cv
470.153 297.288 li
470.861 297.288 471.469 297.895 471.469 298.603 cv
471.469 299.311 470.861 299.918 470.153 299.918 cv
451.136 299.918 li
451.136 327.737 li
506.773 327.737 li
506.773 299.918 li
497.871 299.918 li
497.163 299.918 496.556 299.311 496.556 298.603 cv
496.556 297.895 497.163 297.288 497.871 297.288 cv
507.987 297.288 li
508.695 297.288 509.302 297.895 509.302 298.603 cv
509.302 328.951 li
509.302 329.659 508.695 330.266 508.088 330.266 cv
cp
f
484.013 286.059 mo
477.032 286.059 471.367 291.724 471.367 298.704 cv
471.367 305.684 477.032 311.349 484.013 311.349 cv
490.992 311.349 496.657 305.684 496.657 298.704 cv
496.657 291.724 490.992 286.059 484.013 286.059 cv
cp
484.013 313.878 mo
475.616 313.878 468.839 307.1 468.839 298.704 cv
468.839 290.308 475.616 283.53 484.013 283.53 cv
492.408 283.53 499.187 290.308 499.187 298.704 cv
499.187 307.1 492.408 313.878 484.013 313.878 cv
cp
f
484.013 292.331 mo
480.573 292.331 477.64 295.164 477.64 298.704 cv
477.64 302.245 480.472 305.077 484.013 305.077 cv
487.553 305.077 490.386 302.245 490.386 298.704 cv
490.386 295.164 487.452 292.331 484.013 292.331 cv
cp
484.013 307.505 mo
479.157 307.505 475.11 303.56 475.11 298.603 cv
475.11 293.646 479.056 289.701 484.013 289.701 cv
488.969 289.701 492.914 293.646 492.914 298.603 cv
492.914 303.56 488.868 307.505 484.013 307.505 cv
cp
f
463.78 310.034 mo
454.879 310.034 li
454.171 310.034 453.563 309.427 453.563 308.719 cv
453.563 308.011 454.171 307.404 454.879 307.404 cv
463.78 307.404 li
464.488 307.404 465.096 308.011 465.096 308.719 cv
465.096 309.427 464.488 310.034 463.78 310.034 cv
cp
f
473.896 316.407 mo
454.979 316.407 li
454.271 316.407 453.665 315.8 453.665 315.092 cv
453.665 314.384 454.271 313.777 454.979 313.777 cv
473.998 313.777 li
474.706 313.777 475.313 314.384 475.313 315.092 cv
475.313 315.8 474.604 316.407 473.896 316.407 cv
cp
f
473.896 322.679 mo
454.979 322.679 li
454.271 322.679 453.665 322.072 453.665 321.364 cv
453.665 320.656 454.271 320.049 454.979 320.049 cv
473.998 320.049 li
474.706 320.049 475.313 320.656 475.313 321.364 cv
475.313 322.072 474.604 322.679 473.896 322.679 cv
cp
f
301.42 259.96 mo
402.579 259.96 li
402.579 361.119 li
301.42 361.119 li
301.42 259.96 li
cp
1 1 1 rgb
f
322.461 288.588 mo
380.628 288.588 li
380.628 321.465 li
322.461 321.465 li
322.461 288.588 li
cp
f
347.751 329.052 mo
355.338 329.052 li
355.338 339.167 li
347.751 339.167 li
347.751 329.052 li
cp
f
380.628 321.465 mo
380.628 329.052 li
355.338 329.052 li
347.751 329.052 li
322.461 329.052 li
322.461 321.465 li
380.628 321.465 li
cp
.607843 .788235 1 rgb
f
352.809 303.762 mo
346.538 303.762 341.378 298.704 341.378 292.331 cv
341.378 291.016 341.581 289.701 341.985 288.487 cv
343.502 284.036 347.751 280.9 352.708 280.9 cv
357.665 280.9 361.914 284.036 363.431 288.487 cv
363.836 289.701 364.038 290.915 364.038 292.331 cv
364.139 298.603 359.081 303.762 352.809 303.762 cv
cp
f
355.338 340.381 mo
354.63 340.381 354.023 339.775 354.023 339.066 cv
354.023 328.951 li
354.023 328.243 354.63 327.636 355.338 327.636 cv
356.047 327.636 356.653 328.243 356.653 328.951 cv
356.653 339.066 li
356.552 339.775 355.945 340.381 355.338 340.381 cv
cp
.117647 .505882 .807843 rgb
f
347.751 340.381 mo
347.043 340.381 346.437 339.775 346.437 339.066 cv
346.437 328.951 li
346.437 328.243 347.043 327.636 347.751 327.636 cv
348.459 327.636 349.066 328.243 349.066 328.951 cv
349.066 339.066 li
348.965 339.775 348.358 340.381 347.751 340.381 cv
cp
f
359.081 340.381 mo
343.907 340.381 li
343.199 340.381 342.592 339.775 342.592 339.066 cv
342.592 338.358 343.199 337.751 343.907 337.751 cv
359.081 337.751 li
359.789 337.751 360.396 338.358 360.396 339.066 cv
360.396 339.775 359.789 340.381 359.081 340.381 cv
cp
f
380.628 322.679 mo
322.461 322.679 li
321.753 322.679 321.146 322.072 321.146 321.364 cv
321.146 320.656 321.753 320.049 322.461 320.049 cv
380.628 320.049 li
381.336 320.049 381.943 320.656 381.943 321.364 cv
381.943 322.072 381.235 322.679 380.628 322.679 cv
cp
f
380.628 330.266 mo
322.461 330.266 li
321.753 330.266 321.146 329.659 321.146 328.951 cv
321.146 288.487 li
321.146 287.779 321.753 287.172 322.461 287.172 cv
342.086 287.172 li
342.794 287.172 343.401 287.779 343.401 288.487 cv
343.401 289.195 342.794 289.802 342.086 289.802 cv
323.675 289.802 li
323.675 327.737 li
379.313 327.737 li
379.313 289.802 li
363.532 289.802 li
362.824 289.802 362.217 289.195 362.217 288.487 cv
362.217 287.779 362.824 287.172 363.532 287.172 cv
380.628 287.172 li
381.336 287.172 381.943 287.779 381.943 288.487 cv
381.943 328.951 li
381.842 329.659 381.235 330.266 380.628 330.266 cv
cp
f
352.809 282.215 mo
348.561 282.215 344.717 284.946 343.3 288.993 cv
342.896 290.105 342.693 291.218 342.693 292.331 cv
342.693 297.895 347.246 302.447 352.809 302.447 cv
358.373 302.447 362.925 297.895 362.925 292.331 cv
362.925 291.218 362.723 290.004 362.318 288.993 cv
360.902 284.946 357.058 282.215 352.809 282.215 cv
cp
352.809 304.976 mo
345.829 304.976 340.165 299.311 340.165 292.331 cv
340.165 290.915 340.367 289.499 340.873 288.083 cv
342.693 283.024 347.448 279.686 352.809 279.686 cv
358.171 279.686 362.925 283.024 364.746 288.083 cv
365.252 289.397 365.454 290.813 365.454 292.331 cv
365.454 299.311 359.688 304.976 352.809 304.976 cv
cp
f
351.494 298.704 mo
351.191 298.704 350.887 298.603 350.584 298.299 cv
346.74 294.456 li
346.234 293.95 346.234 293.141 346.74 292.635 cv
347.246 292.129 348.055 292.129 348.561 292.635 cv
351.191 295.265 li
356.653 286.464 li
357.058 285.857 357.766 285.655 358.373 286.059 cv
358.98 286.464 359.183 287.172 358.777 287.779 cv
352.405 297.895 li
352.202 298.198 351.899 298.401 351.494 298.502 cv
351.595 298.603 351.494 298.704 351.494 298.704 cv
cp
f
173.96 259.96 mo
275.119 259.96 li
275.119 361.119 li
173.96 361.119 li
173.96 259.96 li
cp
1 1 1 rgb
f
201.273 294.86 mo
201.273 295.771 201.273 321.87 201.273 322.679 cv
201.273 328.344 204.105 333.3 208.456 336.234 cv
208.456 336.234 li
208.456 336.234 li
213.918 339.977 221.303 340.078 226.967 336.234 cv
226.967 336.234 li
226.967 336.234 li
231.317 333.3 234.15 328.344 234.15 322.679 cv
234.15 303.762 li
234.15 294.86 li
229.396 294.86 205.421 294.86 201.273 294.86 cv
cp
f
208.86 281.001 mo
226.563 281.001 li
226.563 294.961 li
208.86 294.961 li
208.86 281.001 li
cp
.607843 .788235 1 rgb
f
221.505 316.407 mo
221.505 309.427 227.17 303.762 234.15 303.762 cv
241.13 303.762 246.795 309.326 246.795 316.407 cv
246.795 323.488 241.13 329.052 234.15 329.052 cv
233.745 329.052 233.341 329.052 232.936 328.951 cv
226.462 328.344 221.505 322.881 221.505 316.407 cv
cp
1 1 1 rgb
f
226.563 296.175 mo
225.855 296.175 225.248 295.568 225.248 294.86 cv
225.248 282.215 li
210.074 282.215 li
210.074 294.86 li
210.074 295.568 209.467 296.175 208.759 296.175 cv
208.051 296.175 207.444 295.568 207.444 294.86 cv
207.444 281.001 li
207.444 280.293 208.051 279.686 208.759 279.686 cv
226.563 279.686 li
227.271 279.686 227.878 280.293 227.878 281.001 cv
227.878 294.961 li
227.878 295.568 227.271 296.175 226.563 296.175 cv
cp
.117647 .505882 .807843 rgb
f
217.762 340.381 mo
208.051 340.381 200.059 332.39 200.059 322.679 cv
200.059 294.86 li
200.059 294.152 200.666 293.545 201.375 293.545 cv
234.251 293.545 li
234.959 293.545 235.566 294.152 235.566 294.86 cv
235.566 303.762 li
235.566 304.47 234.959 305.077 234.251 305.077 cv
233.543 305.077 232.936 304.47 232.936 303.762 cv
232.936 296.175 li
202.588 296.175 li
202.588 322.679 li
202.588 331.075 209.366 337.853 217.762 337.853 cv
220.797 337.853 223.73 336.942 226.259 335.223 cv
228.688 333.503 230.609 331.176 231.722 328.445 cv
232.025 327.838 232.733 327.534 233.341 327.737 cv
233.947 328.04 234.251 328.748 234.049 329.355 cv
232.733 332.592 230.508 335.324 227.676 337.246 cv
224.742 339.37 221.303 340.381 217.762 340.381 cv
cp
f
234.15 304.976 mo
227.878 304.976 222.719 310.034 222.719 316.407 cv
222.719 322.274 227.17 327.13 232.936 327.737 cv
233.341 327.737 233.644 327.838 234.049 327.838 cv
240.32 327.838 245.479 322.78 245.479 316.407 cv
245.479 310.034 240.422 304.976 234.15 304.976 cv
cp
234.15 330.266 mo
233.644 330.266 233.239 330.266 232.835 330.165 cv
229.396 329.861 226.259 328.243 223.933 325.713 cv
221.606 323.185 220.291 319.846 220.291 316.306 cv
220.291 308.618 226.563 302.346 234.251 302.346 cv
241.939 302.346 248.211 308.618 248.211 316.306 cv
248.211 323.994 241.838 330.266 234.15 330.266 cv
cp
f
213.918 291.117 mo
213.21 291.117 212.603 290.51 212.603 289.802 cv
212.603 285.958 li
212.603 285.25 213.21 284.643 213.918 284.643 cv
214.626 284.643 215.233 285.25 215.233 285.958 cv
215.233 289.802 li
215.233 290.51 214.626 291.117 213.918 291.117 cv
cp
f
221.505 291.117 mo
220.797 291.117 220.19 290.51 220.19 289.802 cv
220.19 285.958 li
220.19 285.25 220.797 284.643 221.505 284.643 cv
222.213 284.643 222.82 285.25 222.82 285.958 cv
222.82 289.802 li
222.82 290.51 222.213 291.117 221.505 291.117 cv
cp
f
239.511 322.982 mo
239.208 322.982 238.904 322.881 238.601 322.578 cv
227.878 311.855 li
227.372 311.349 227.372 310.54 227.878 310.034 cv
228.384 309.528 229.193 309.528 229.699 310.034 cv
240.422 320.757 li
240.928 321.263 240.928 322.072 240.422 322.578 cv
240.118 322.881 239.814 322.982 239.511 322.982 cv
cp
f
228.789 322.982 mo
228.485 322.982 228.182 322.881 227.878 322.578 cv
227.372 322.072 227.372 321.263 227.878 320.757 cv
238.601 310.034 li
239.106 309.528 239.916 309.528 240.422 310.034 cv
240.928 310.54 240.928 311.349 240.422 311.855 cv
229.699 322.578 li
229.396 322.881 229.092 322.982 228.789 322.982 cv
cp
f
46.5 259.96 mo
147.659 259.96 li
147.659 361.119 li
46.5 361.119 li
46.5 259.96 li
cp
1 1 1 rgb
f
96.5737 302.447 mo
99.3672 302.447 101.632 304.711 101.632 307.505 cv
101.632 310.298 99.3672 312.563 96.5737 312.563 cv
93.7803 312.563 91.5156 310.298 91.5156 307.505 cv
91.5156 304.711 93.7803 302.447 96.5737 302.447 cv
cp
.737255 .85098 .839216 rgb
f
125.708 339.167 mo
67.541 339.167 li
67.541 332.896 72.1943 327.636 78.1626 326.725 cv
82.917 331.277 89.3916 334.11 96.5737 334.11 cv
103.756 334.11 110.23 331.277 114.984 326.725 cv
118.02 327.231 120.649 328.748 122.571 330.974 cv
124.494 333.098 125.708 335.931 125.708 339.167 cv
cp
.607843 .788235 1 rgb
f
96.5737 281.001 mo
81.9058 281.001 70.0698 292.837 70.0698 307.505 cv
70.0698 314.991 73.2061 321.769 78.1626 326.624 cv
82.917 331.176 89.3916 334.009 96.5737 334.009 cv
103.756 334.009 110.23 331.176 114.984 326.624 cv
120.042 321.769 123.077 314.991 123.077 307.505 cv
123.179 292.837 111.242 281.001 96.5737 281.001 cv
cp
1 1 1 rgb
f
123.179 307.505 mo
109.219 307.505 li
109.219 300.525 103.554 294.86 96.5737 294.86 cv
89.5938 294.86 83.9287 300.525 83.9287 307.505 cv
70.0698 307.505 li
70.0698 292.837 82.0068 280.9 96.6748 280.9 cv
94.5503 280.9 92.8306 282.62 92.8306 284.744 cv
92.8306 286.869 94.5503 288.588 96.6748 288.588 cv
98.7993 288.588 100.519 286.869 100.519 284.744 cv
100.519 282.62 98.7993 280.9 96.6748 280.9 cv
111.242 281.001 123.179 292.837 123.179 307.505 cv
cp
.607843 .788235 1 rgb
f
101.632 307.505 mo
101.632 304.672 99.4063 302.447 96.5737 302.447 cv
93.7412 302.447 91.5156 304.672 91.5156 307.505 cv
91.5156 310.337 93.7412 312.563 96.5737 312.563 cv
99.4063 312.563 101.632 310.337 101.632 307.505 cv
cp
96.5737 294.86 mo
103.554 294.86 109.219 300.525 109.219 307.505 cv
109.219 314.485 103.554 320.15 96.5737 320.15 cv
89.5938 320.15 83.9287 314.485 83.9287 307.505 cv
83.9287 300.525 89.5938 294.86 96.5737 294.86 cv
cp
1 1 1 rgb
f
96.5737 280.9 mo
98.6968 280.9 100.417 282.621 100.417 284.744 cv
100.417 286.867 98.6968 288.588 96.5737 288.588 cv
94.4507 288.588 92.7295 286.867 92.7295 284.744 cv
92.7295 282.621 94.4507 280.9 96.5737 280.9 cv
cp
f
125.708 340.381 mo
67.541 340.381 li
66.833 340.381 66.2261 339.775 66.2261 339.066 cv
66.2261 335.729 67.4399 332.491 69.564 329.962 cv
71.6885 327.433 74.7231 325.814 77.9604 325.309 cv
78.6685 325.208 79.2754 325.713 79.3765 326.32 cv
79.478 327.028 78.9722 327.636 78.3652 327.737 cv
73.2061 328.546 69.3618 332.693 68.856 337.751 cv
124.393 337.751 li
124.089 335.526 123.179 333.3 121.661 331.581 cv
119.941 329.558 117.514 328.142 114.782 327.737 cv
114.074 327.636 113.669 327.028 113.771 326.32 cv
113.872 325.612 114.479 325.208 115.187 325.309 cv
118.424 325.814 121.357 327.433 123.583 329.962 cv
125.708 332.491 126.921 335.729 126.921 339.066 cv
126.921 339.775 126.314 340.381 125.708 340.381 cv
cp
.117647 .505882 .807843 rgb
f
96.5737 282.215 mo
82.6138 282.215 71.2837 293.545 71.2837 307.505 cv
71.2837 314.485 74.0151 320.858 79.0732 325.713 cv
83.8276 330.266 89.9985 332.795 96.5737 332.795 cv
103.149 332.795 109.421 330.266 114.074 325.713 cv
119.031 320.858 121.863 314.384 121.863 307.505 cv
121.863 293.545 110.534 282.215 96.5737 282.215 cv
cp
96.5737 335.324 mo
89.29 335.324 82.5127 332.592 77.2524 327.534 cv
74.6221 325.005 72.4976 321.971 70.9805 318.531 cv
69.564 315.092 68.7549 311.349 68.7549 307.505 cv
68.7549 300.121 71.6885 293.039 76.9487 287.88 cv
82.209 282.62 89.189 279.686 96.5737 279.686 cv
103.958 279.686 111.04 282.62 116.199 287.88 cv
121.459 293.039 124.393 300.121 124.393 307.505 cv
124.393 311.349 123.583 315.092 122.066 318.531 cv
120.548 321.87 118.525 324.904 115.794 327.534 cv
110.635 332.592 103.857 335.324 96.5737 335.324 cv
cp
f
96.5737 296.175 mo
90.3018 296.175 85.1426 301.233 85.1426 307.606 cv
85.1426 313.979 90.2007 319.037 96.5737 319.037 cv
102.947 319.037 108.004 313.979 108.004 307.606 cv
108.004 301.233 102.846 296.175 96.5737 296.175 cv
cp
96.5737 321.465 mo
88.8857 321.465 82.6138 315.193 82.6138 307.505 cv
82.6138 299.817 88.8857 293.545 96.5737 293.545 cv
104.262 293.545 110.534 299.817 110.534 307.505 cv
110.534 315.193 104.262 321.465 96.5737 321.465 cv
cp
f
96.5737 303.762 mo
94.4492 303.762 92.7295 305.482 92.7295 307.606 cv
92.7295 309.73 94.4492 311.45 96.5737 311.45 cv
98.6982 311.45 100.417 309.73 100.417 307.606 cv
100.417 305.482 98.6982 303.762 96.5737 303.762 cv
cp
96.5737 313.878 mo
93.1343 313.878 90.2007 311.045 90.2007 307.505 cv
90.2007 303.964 93.0332 301.132 96.5737 301.132 cv
100.114 301.132 102.947 303.964 102.947 307.505 cv
102.947 311.045 100.013 313.878 96.5737 313.878 cv
cp
f
96.5737 282.215 mo
95.1572 282.215 94.0449 283.328 94.0449 284.744 cv
94.0449 286.16 95.1572 287.273 96.5737 287.273 cv
97.9897 287.273 99.1025 286.16 99.1025 284.744 cv
99.1025 283.328 97.9897 282.215 96.5737 282.215 cv
cp
96.5737 289.802 mo
93.7412 289.802 91.5156 287.577 91.5156 284.744 cv
91.5156 281.912 93.7412 279.686 96.5737 279.686 cv
99.4063 279.686 101.632 281.912 101.632 284.744 cv
101.632 287.577 99.4063 289.802 96.5737 289.802 cv
cp
f
83.9287 308.82 mo
70.0698 308.82 li
69.3618 308.82 68.7549 308.213 68.7549 307.505 cv
68.7549 306.797 69.3618 306.19 70.0698 306.19 cv
83.9287 306.19 li
84.6367 306.19 85.2437 306.797 85.2437 307.505 cv
85.2437 308.213 84.6367 308.82 83.9287 308.82 cv
cp
f
123.179 308.82 mo
109.219 308.82 li
108.51 308.82 107.903 308.213 107.903 307.505 cv
107.903 306.797 108.51 306.19 109.219 306.19 cv
123.179 306.19 li
123.887 306.19 124.494 306.797 124.494 307.505 cv
124.393 308.213 123.785 308.82 123.179 308.82 cv
cp
f
556.341 132.5 mo
657.5 132.5 li
657.5 233.659 li
556.341 233.659 li
556.341 132.5 li
cp
1 1 1 rgb
f
602.672 201.591 mo
610.259 201.591 li
610.259 211.708 li
602.672 211.708 li
602.672 201.591 li
cp
f
635.549 194.004 mo
635.549 201.591 li
610.259 201.591 li
602.672 201.591 li
577.382 201.591 li
577.382 194.004 li
635.549 194.004 li
cp
.607843 .788235 1 rgb
f
577.382 161.128 mo
635.549 161.128 li
635.549 194.004 li
577.382 194.004 li
577.382 161.128 li
cp
1 1 1 rgb
f
619.06 164.871 mo
619.06 171.143 614.002 176.302 607.629 176.302 cv
601.256 176.302 596.197 171.244 596.197 164.871 cv
596.197 163.556 596.4 162.241 596.805 161.027 cv
598.322 156.576 602.57 153.44 607.527 153.44 cv
612.484 153.44 616.732 156.576 618.25 161.027 cv
618.857 162.241 619.06 163.556 619.06 164.871 cv
cp
.607843 .788235 1 rgb
f
610.259 212.921 mo
609.551 212.921 608.943 212.314 608.943 211.606 cv
608.943 201.49 li
608.943 200.782 609.551 200.175 610.259 200.175 cv
610.967 200.175 611.574 200.782 611.574 201.49 cv
611.574 211.606 li
611.473 212.314 610.865 212.921 610.259 212.921 cv
cp
.117647 .505882 .807843 rgb
f
602.672 212.921 mo
601.964 212.921 601.356 212.314 601.356 211.606 cv
601.356 201.49 li
601.356 200.782 601.964 200.175 602.672 200.175 cv
603.38 200.175 603.987 200.782 603.987 201.49 cv
603.987 211.606 li
603.886 212.314 603.278 212.921 602.672 212.921 cv
cp
f
614.002 212.921 mo
598.828 212.921 li
598.12 212.921 597.513 212.314 597.513 211.606 cv
597.513 210.898 598.12 210.291 598.828 210.291 cv
614.002 210.291 li
614.71 210.291 615.316 210.898 615.316 211.606 cv
615.316 212.314 614.71 212.921 614.002 212.921 cv
cp
f
635.549 195.218 mo
577.382 195.218 li
576.674 195.218 576.067 194.612 576.067 193.903 cv
576.067 193.195 576.674 192.588 577.382 192.588 cv
635.549 192.588 li
636.257 192.588 636.863 193.195 636.863 193.903 cv
636.863 194.612 636.155 195.218 635.549 195.218 cv
cp
f
635.549 202.806 mo
577.382 202.806 li
576.674 202.806 576.067 202.198 576.067 201.49 cv
576.067 161.027 li
576.067 160.319 576.674 159.712 577.382 159.712 cv
597.007 159.712 li
597.715 159.712 598.322 160.319 598.322 161.027 cv
598.322 161.735 597.715 162.342 597.007 162.342 cv
578.596 162.342 li
578.596 200.276 li
634.233 200.276 li
634.233 162.342 li
618.453 162.342 li
617.744 162.342 617.138 161.735 617.138 161.027 cv
617.138 160.319 617.744 159.712 618.453 159.712 cv
635.549 159.712 li
636.257 159.712 636.863 160.319 636.863 161.027 cv
636.863 201.49 li
636.763 202.198 636.155 202.806 635.549 202.806 cv
cp
f
607.729 154.755 mo
603.481 154.755 599.637 157.486 598.221 161.533 cv
597.816 162.646 597.614 163.758 597.614 164.871 cv
597.614 170.435 602.166 174.987 607.729 174.987 cv
613.294 174.987 617.846 170.435 617.846 164.871 cv
617.846 163.758 617.644 162.544 617.238 161.533 cv
615.822 157.486 611.979 154.755 607.729 154.755 cv
cp
607.729 177.516 mo
600.75 177.516 595.085 171.851 595.085 164.871 cv
595.085 163.455 595.287 162.039 595.793 160.622 cv
597.614 155.564 602.368 152.226 607.729 152.226 cv
613.091 152.226 617.846 155.564 619.667 160.622 cv
620.172 161.937 620.375 163.354 620.375 164.871 cv
620.375 171.851 614.608 177.516 607.729 177.516 cv
cp
f
612.181 170.637 mo
611.877 170.637 611.574 170.536 611.271 170.232 cv
602.368 161.33 li
601.862 160.825 601.862 160.015 602.368 159.509 cv
602.874 159.003 603.684 159.003 604.189 159.509 cv
613.091 168.412 li
613.597 168.917 613.597 169.727 613.091 170.232 cv
612.788 170.435 612.484 170.637 612.181 170.637 cv
cp
f
603.178 170.637 mo
602.874 170.637 602.57 170.536 602.268 170.232 cv
601.762 169.727 601.762 168.917 602.268 168.412 cv
611.169 159.509 li
611.675 159.003 612.484 159.003 612.99 159.509 cv
613.496 160.015 613.496 160.825 612.99 161.33 cv
604.088 170.232 li
603.886 170.435 603.481 170.637 603.178 170.637 cv
cp
f
428.881 132.5 mo
530.04 132.5 li
530.04 233.659 li
428.881 233.659 li
428.881 132.5 li
cp
1 1 1 rgb
f
475.212 197.748 mo
482.799 197.748 li
482.799 207.863 li
475.212 207.863 li
475.212 197.748 li
cp
f
508.088 190.161 mo
508.088 197.748 li
482.799 197.748 li
475.212 197.748 li
449.922 197.748 li
449.922 190.161 li
508.088 190.161 li
cp
.607843 .788235 1 rgb
f
449.922 157.284 mo
508.088 157.284 li
508.088 190.161 li
449.922 190.161 li
449.922 157.284 li
cp
1 1 1 rgb
f
482.799 209.179 mo
482.091 209.179 481.483 208.571 481.483 207.863 cv
481.483 197.748 li
481.483 197.04 482.091 196.433 482.799 196.433 cv
483.507 196.433 484.113 197.04 484.113 197.748 cv
484.113 207.863 li
484.013 208.571 483.405 209.179 482.799 209.179 cv
cp
.117647 .505882 .807843 rgb
f
475.212 209.179 mo
474.504 209.179 473.896 208.571 473.896 207.863 cv
473.896 197.748 li
473.896 197.04 474.504 196.433 475.212 196.433 cv
475.92 196.433 476.526 197.04 476.526 197.748 cv
476.526 207.863 li
476.426 208.571 475.818 209.179 475.212 209.179 cv
cp
f
486.541 209.179 mo
471.367 209.179 li
470.659 209.179 470.053 208.571 470.053 207.863 cv
470.053 207.155 470.659 206.548 471.367 206.548 cv
486.541 206.548 li
487.249 206.548 487.856 207.155 487.856 207.863 cv
487.856 208.571 487.249 209.179 486.541 209.179 cv
cp
f
508.088 191.476 mo
449.922 191.476 li
449.214 191.476 448.606 190.869 448.606 190.161 cv
448.606 189.453 449.214 188.846 449.922 188.846 cv
508.088 188.846 li
508.797 188.846 509.403 189.453 509.403 190.161 cv
509.403 190.869 508.695 191.476 508.088 191.476 cv
cp
f
451.136 196.534 mo
506.773 196.534 li
506.773 158.599 li
451.136 158.599 li
451.136 196.534 li
cp
508.088 199.063 mo
449.922 199.063 li
449.214 199.063 448.606 198.456 448.606 197.748 cv
448.606 157.284 li
448.606 156.576 449.214 155.969 449.922 155.969 cv
508.088 155.969 li
508.797 155.969 509.403 156.576 509.403 157.284 cv
509.403 197.748 li
509.302 198.456 508.695 199.063 508.088 199.063 cv
cp
f
301.42 132.5 mo
402.579 132.5 li
402.579 233.659 li
301.42 233.659 li
301.42 132.5 li
cp
1 1 1 rgb
f
322.461 161.128 mo
380.628 161.128 li
380.628 194.004 li
322.461 194.004 li
322.461 161.128 li
cp
f
347.751 201.591 mo
355.338 201.591 li
355.338 211.708 li
347.751 211.708 li
347.751 201.591 li
cp
f
380.628 194.004 mo
380.628 201.591 li
355.338 201.591 li
347.751 201.591 li
322.461 201.591 li
322.461 194.004 li
380.628 194.004 li
cp
.607843 .788235 1 rgb
f
363.532 161.128 mo
363.937 162.342 364.139 163.556 364.139 164.972 cv
364.139 171.244 359.081 176.403 352.708 176.403 cv
346.335 176.403 341.277 171.345 341.277 164.972 cv
341.277 163.657 341.479 162.342 341.884 161.128 cv
343.401 156.677 347.65 153.541 352.607 153.541 cv
357.563 153.541 361.914 156.677 363.532 161.128 cv
cp
f
355.338 212.921 mo
354.63 212.921 354.023 212.314 354.023 211.606 cv
354.023 201.49 li
354.023 200.782 354.63 200.175 355.338 200.175 cv
356.047 200.175 356.653 200.782 356.653 201.49 cv
356.653 211.606 li
356.552 212.314 355.945 212.921 355.338 212.921 cv
cp
.117647 .505882 .807843 rgb
f
347.751 212.921 mo
347.043 212.921 346.437 212.314 346.437 211.606 cv
346.437 201.49 li
346.437 200.782 347.043 200.175 347.751 200.175 cv
348.459 200.175 349.066 200.782 349.066 201.49 cv
349.066 211.606 li
348.965 212.314 348.358 212.921 347.751 212.921 cv
cp
f
359.081 212.921 mo
343.907 212.921 li
343.199 212.921 342.592 212.314 342.592 211.606 cv
342.592 210.898 343.199 210.291 343.907 210.291 cv
359.081 210.291 li
359.789 210.291 360.396 210.898 360.396 211.606 cv
360.396 212.314 359.789 212.921 359.081 212.921 cv
cp
f
380.628 195.218 mo
322.461 195.218 li
321.753 195.218 321.146 194.612 321.146 193.903 cv
321.146 193.195 321.753 192.588 322.461 192.588 cv
380.628 192.588 li
381.336 192.588 381.943 193.195 381.943 193.903 cv
381.943 194.612 381.235 195.218 380.628 195.218 cv
cp
f
380.628 202.806 mo
322.461 202.806 li
321.753 202.806 321.146 202.198 321.146 201.49 cv
321.146 161.027 li
321.146 160.319 321.753 159.712 322.461 159.712 cv
342.086 159.712 li
342.794 159.712 343.401 160.319 343.401 161.027 cv
343.401 161.735 342.794 162.342 342.086 162.342 cv
323.675 162.342 li
323.675 200.276 li
379.313 200.276 li
379.313 162.342 li
363.532 162.342 li
362.824 162.342 362.217 161.735 362.217 161.027 cv
362.217 160.319 362.824 159.712 363.532 159.712 cv
380.628 159.712 li
381.336 159.712 381.943 160.319 381.943 161.027 cv
381.943 201.49 li
381.842 202.198 381.235 202.806 380.628 202.806 cv
cp
f
352.809 154.755 mo
348.561 154.755 344.717 157.486 343.3 161.533 cv
342.896 162.646 342.693 163.758 342.693 164.871 cv
342.693 170.435 347.246 174.987 352.809 174.987 cv
358.373 174.987 362.925 170.435 362.925 164.871 cv
362.925 163.758 362.723 162.544 362.318 161.533 cv
360.902 157.486 357.058 154.755 352.809 154.755 cv
cp
352.809 177.516 mo
345.829 177.516 340.165 171.851 340.165 164.871 cv
340.165 163.455 340.367 162.039 340.873 160.622 cv
342.693 155.564 347.448 152.226 352.809 152.226 cv
358.171 152.226 362.925 155.564 364.746 160.622 cv
365.252 161.937 365.454 163.354 365.454 164.871 cv
365.454 171.851 359.688 177.516 352.809 177.516 cv
cp
f
359.081 166.186 mo
346.437 166.186 li
345.728 166.186 345.121 165.579 345.121 164.871 cv
345.121 164.163 345.728 163.556 346.437 163.556 cv
359.081 163.556 li
359.789 163.556 360.396 164.163 360.396 164.871 cv
360.396 165.579 359.789 166.186 359.081 166.186 cv
cp
f
173.96 132.5 mo
275.119 132.5 li
275.119 233.659 li
173.96 233.659 li
173.96 132.5 li
cp
1 1 1 rgb
f
201.273 167.4 mo
201.273 168.31 201.273 194.409 201.273 195.218 cv
201.273 200.883 204.105 205.84 208.456 208.774 cv
208.456 208.774 li
208.456 208.774 li
213.918 212.517 221.303 212.618 226.967 208.774 cv
226.967 208.774 li
226.967 208.774 li
231.317 205.84 234.15 200.883 234.15 195.218 cv
234.15 176.302 li
234.15 167.4 li
229.396 167.4 205.421 167.4 201.273 167.4 cv
cp
f
208.86 153.541 mo
226.563 153.541 li
226.563 167.501 li
208.86 167.501 li
208.86 153.541 li
cp
.607843 .788235 1 rgb
f
234.15 176.302 mo
241.13 176.302 246.795 181.967 246.795 188.947 cv
246.795 195.927 241.13 201.591 234.15 201.591 cv
233.745 201.591 233.341 201.591 232.936 201.49 cv
226.462 200.883 221.505 195.421 221.505 188.947 cv
221.505 181.866 227.17 176.302 234.15 176.302 cv
cp
1 1 1 rgb
f
226.563 168.715 mo
225.855 168.715 225.248 168.108 225.248 167.4 cv
225.248 154.755 li
210.074 154.755 li
210.074 167.4 li
210.074 168.108 209.467 168.715 208.759 168.715 cv
208.051 168.715 207.444 168.108 207.444 167.4 cv
207.444 153.541 li
207.444 152.833 208.051 152.226 208.759 152.226 cv
226.563 152.226 li
227.271 152.226 227.878 152.833 227.878 153.541 cv
227.878 167.501 li
227.878 168.108 227.271 168.715 226.563 168.715 cv
cp
.117647 .505882 .807843 rgb
f
217.762 212.921 mo
208.051 212.921 200.059 204.93 200.059 195.218 cv
200.059 167.4 li
200.059 166.692 200.666 166.085 201.375 166.085 cv
234.251 166.085 li
234.959 166.085 235.566 166.692 235.566 167.4 cv
235.566 176.302 li
235.566 177.01 234.959 177.617 234.251 177.617 cv
233.543 177.617 232.936 177.01 232.936 176.302 cv
232.936 168.715 li
202.588 168.715 li
202.588 195.218 li
202.588 203.615 209.366 210.393 217.762 210.393 cv
220.797 210.393 223.73 209.482 226.259 207.762 cv
228.688 206.042 230.609 203.716 231.722 200.984 cv
232.025 200.377 232.733 200.074 233.341 200.276 cv
233.947 200.58 234.251 201.288 234.049 201.895 cv
232.733 205.132 230.508 207.863 227.676 209.785 cv
224.742 211.91 221.303 212.921 217.762 212.921 cv
cp
f
234.15 177.516 mo
227.878 177.516 222.719 182.574 222.719 188.947 cv
222.719 194.814 227.17 199.669 232.936 200.276 cv
233.341 200.276 233.644 200.377 234.049 200.377 cv
240.32 200.377 245.479 195.32 245.479 188.947 cv
245.479 182.574 240.422 177.516 234.15 177.516 cv
cp
234.15 202.806 mo
233.644 202.806 233.239 202.806 232.835 202.704 cv
229.396 202.401 226.259 200.782 223.933 198.253 cv
221.606 195.724 220.291 192.386 220.291 188.846 cv
220.291 181.157 226.563 174.886 234.251 174.886 cv
241.939 174.886 248.211 181.157 248.211 188.846 cv
248.211 196.534 241.838 202.806 234.15 202.806 cv
cp
f
213.918 163.657 mo
213.21 163.657 212.603 163.05 212.603 162.342 cv
212.603 158.498 li
212.603 157.79 213.21 157.183 213.918 157.183 cv
214.626 157.183 215.233 157.79 215.233 158.498 cv
215.233 162.342 li
215.233 163.05 214.626 163.657 213.918 163.657 cv
cp
f
221.505 163.657 mo
220.797 163.657 220.19 163.05 220.19 162.342 cv
220.19 158.498 li
220.19 157.79 220.797 157.183 221.505 157.183 cv
222.213 157.183 222.82 157.79 222.82 158.498 cv
222.82 162.342 li
222.82 163.05 222.213 163.657 221.505 163.657 cv
cp
f
231.621 196.534 mo
231.317 196.534 231.014 196.433 230.71 196.129 cv
226.866 192.285 li
226.36 191.779 226.36 190.97 226.866 190.464 cv
227.372 189.958 228.182 189.958 228.688 190.464 cv
231.52 193.296 li
239.511 184.192 li
240.017 183.687 240.725 183.585 241.332 184.091 cv
241.838 184.597 241.939 185.305 241.433 185.912 cv
232.531 196.028 li
232.329 196.331 232.025 196.433 231.621 196.534 cv
231.621 196.433 231.621 196.534 231.621 196.534 cv
cp
f
46.5 132.5 mo
147.659 132.5 li
147.659 233.659 li
46.5 233.659 li
46.5 132.5 li
cp
1 1 1 rgb
f
96.5737 173.773 mo
125.708 173.773 li
125.708 194.004 li
96.5737 194.004 li
96.5737 173.773 li
cp
f
114.276 181.36 mo
119.334 181.36 li
119.334 186.417 li
114.276 186.417 li
114.276 181.36 li
cp
.607843 .788235 1 rgb
f
102.947 181.36 mo
108.004 181.36 li
108.004 186.417 li
102.947 186.417 li
102.947 181.36 li
cp
f
71.2837 176.302 mo
81.3999 176.302 li
81.3999 196.534 li
71.2837 196.534 li
71.2837 176.302 li
cp
f
75.1279 153.541 mo
92.8306 153.541 li
92.8306 161.128 li
75.1279 161.128 li
75.1279 153.541 li
cp
1 1 1 rgb
f
100.417 161.128 mo
100.417 167.4 li
96.5737 167.4 li
71.2837 167.4 li
67.541 167.4 li
67.541 161.128 li
75.1279 161.128 li
92.8306 161.128 li
100.417 161.128 li
cp
.607843 .788235 1 rgb
f
100.417 205.334 mo
100.417 211.708 li
67.541 211.708 li
67.541 205.334 li
71.2837 205.334 li
96.5737 205.334 li
100.417 205.334 li
cp
f
96.5737 194.004 mo
96.5737 205.334 li
71.2837 205.334 li
71.2837 196.534 li
81.3999 196.534 li
81.3999 176.302 li
71.2837 176.302 li
71.2837 167.4 li
96.5737 167.4 li
96.5737 173.773 li
96.5737 194.004 li
cp
1 1 1 rgb
f
71.2837 168.715 mo
67.4399 168.715 li
66.7319 168.715 66.125 168.108 66.125 167.4 cv
66.125 161.027 li
66.125 160.319 66.7319 159.712 67.4399 159.712 cv
75.0269 159.712 li
75.7349 159.712 76.3418 160.319 76.3418 161.027 cv
76.3418 161.735 75.7349 162.342 75.0269 162.342 cv
68.7549 162.342 li
68.7549 166.186 li
71.2837 166.186 li
71.9922 166.186 72.5991 166.793 72.5991 167.501 cv
72.5991 168.108 71.9922 168.715 71.2837 168.715 cv
cp
.117647 .505882 .807843 rgb
f
100.417 168.715 mo
96.5737 168.715 li
95.8657 168.715 95.2588 168.108 95.2588 167.4 cv
95.2588 166.692 95.8657 166.085 96.5737 166.085 cv
99.1025 166.085 li
99.1025 162.241 li
92.7295 162.241 li
92.0215 162.241 91.4146 161.634 91.4146 160.926 cv
91.4146 160.217 92.0215 159.61 92.7295 159.61 cv
100.316 159.61 li
101.025 159.61 101.632 160.217 101.632 160.926 cv
101.632 167.299 li
101.632 168.108 101.025 168.715 100.417 168.715 cv
cp
f
100.417 212.921 mo
67.541 212.921 li
66.833 212.921 66.2261 212.314 66.2261 211.606 cv
66.2261 205.334 li
66.2261 204.626 66.833 204.02 67.541 204.02 cv
71.3853 204.02 li
72.0933 204.02 72.7002 204.626 72.7002 205.334 cv
72.7002 206.042 72.0933 206.649 71.3853 206.649 cv
68.7549 206.649 li
68.7549 210.393 li
99.1025 210.393 li
99.1025 206.548 li
96.5737 206.548 li
95.8657 206.548 95.2588 205.941 95.2588 205.233 cv
95.2588 204.525 95.8657 203.918 96.5737 203.918 cv
100.417 203.918 li
101.126 203.918 101.733 204.525 101.733 205.233 cv
101.733 211.606 li
101.632 212.314 101.025 212.921 100.417 212.921 cv
cp
f
96.5737 206.649 mo
71.2837 206.649 li
70.5757 206.649 69.9688 206.042 69.9688 205.334 cv
69.9688 196.433 li
69.9688 195.724 70.5757 195.117 71.2837 195.117 cv
71.9922 195.117 72.5991 195.724 72.5991 196.433 cv
72.5991 204.02 li
95.3599 204.02 li
95.3599 193.903 li
95.3599 193.195 95.9668 192.588 96.6748 192.588 cv
97.3828 192.588 97.9897 193.195 97.9897 193.903 cv
97.9897 205.334 li
97.8887 206.042 97.2817 206.649 96.5737 206.649 cv
cp
f
71.2837 177.516 mo
70.5757 177.516 69.9688 176.909 69.9688 176.201 cv
69.9688 167.299 li
69.9688 166.59 70.5757 165.983 71.2837 165.983 cv
96.5737 165.983 li
97.2817 165.983 97.8887 166.59 97.8887 167.299 cv
97.8887 173.672 li
97.8887 174.38 97.2817 174.987 96.5737 174.987 cv
95.8657 174.987 95.2588 174.38 95.2588 173.672 cv
95.2588 168.614 li
72.5991 168.614 li
72.5991 176.201 li
72.5991 176.909 71.9922 177.516 71.2837 177.516 cv
cp
f
72.5991 195.218 mo
80.186 195.218 li
80.186 177.516 li
72.5991 177.516 li
72.5991 195.218 li
cp
81.3999 197.748 mo
71.2837 197.748 li
70.5757 197.748 69.9688 197.141 69.9688 196.433 cv
69.9688 176.201 li
69.9688 175.493 70.5757 174.886 71.2837 174.886 cv
81.3999 174.886 li
82.1079 174.886 82.7148 175.493 82.7148 176.201 cv
82.7148 196.433 li
82.7148 197.141 82.1079 197.748 81.3999 197.748 cv
cp
f
97.8887 192.689 mo
124.393 192.689 li
124.393 174.987 li
97.8887 174.987 li
97.8887 192.689 li
cp
125.708 195.218 mo
96.5737 195.218 li
95.8657 195.218 95.2588 194.612 95.2588 193.903 cv
95.2588 173.672 li
95.2588 172.963 95.8657 172.356 96.5737 172.356 cv
125.708 172.356 li
126.416 172.356 127.022 172.963 127.022 173.672 cv
127.022 193.903 li
126.921 194.612 126.314 195.218 125.708 195.218 cv
cp
f
76.3418 159.813 mo
91.5156 159.813 li
91.5156 154.755 li
76.3418 154.755 li
76.3418 159.813 li
cp
92.8306 162.342 mo
75.1279 162.342 li
74.4199 162.342 73.813 161.735 73.813 161.027 cv
73.813 153.44 li
73.813 152.732 74.4199 152.125 75.1279 152.125 cv
92.8306 152.125 li
93.5391 152.125 94.146 152.732 94.146 153.44 cv
94.146 161.027 li
94.0449 161.735 93.4375 162.342 92.8306 162.342 cv
cp
f
104.161 185.103 mo
106.689 185.103 li
106.689 182.574 li
104.161 182.574 li
104.161 185.103 li
cp
108.004 187.631 mo
102.947 187.631 li
102.239 187.631 101.632 187.025 101.632 186.316 cv
101.632 181.259 li
101.632 180.55 102.239 179.943 102.947 179.943 cv
108.004 179.943 li
108.713 179.943 109.32 180.55 109.32 181.259 cv
109.32 186.316 li
109.219 187.025 108.612 187.631 108.004 187.631 cv
cp
f
115.592 185.103 mo
118.121 185.103 li
118.121 182.574 li
115.592 182.574 li
115.592 185.103 li
cp
119.334 187.631 mo
114.276 187.631 li
113.568 187.631 112.961 187.025 112.961 186.316 cv
112.961 181.259 li
112.961 180.55 113.568 179.943 114.276 179.943 cv
119.334 179.943 li
120.042 179.943 120.649 180.55 120.649 181.259 cv
120.649 186.316 li
120.649 187.025 120.042 187.631 119.334 187.631 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Blue_8-Template_252370240979.eps)
%%CreationDate: 12/9/2022 9:26 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7<+3o5/.X;MF3*g1COHpa1Tm=EXrBSnFC>8.65ZDZjL-e=/Jmen03MIfY>B3a0H/q.e\kItLs`b!-3
%5Ph.QDh%QEbHJYUp!^DMpFkr`SrS!goA8e=Q[bf;5QC)2roh+GouktEh);>.]alqOpZYdnYEEDtSG;I<Wup32roX*mIeWQdlgMQ7
%Gl.0gGMiAYmbp)X^Ua6"QbSj$]Y+-V?@VqHgOHb\qXr$5s%CX_nn7?J(LMUhqSh35DdImBfC'4Wb83;:DnhLBU]^Oao's\k]b/Yq
%?@W!ggmdqqk(!$H5CIjlUe#e/m-fH"qU])&p\h^jhgb=mS,`$!B_pf9\p"%QfAF<l5=fG%\4^l?9`B;2m.ETWr8Hu1opU*:Q2L7N
%5JBK$s7u)d^4kW0T%2phM8s%[r^nsLIf)=es6XEZs+Psc]5h!G3e.+[cZ"lF%Jk'GS,>;$$0fh@+Scmn&o[8X?GH=0l^-MDjql8/
%\=]VQr>bhclfaBUI[YWnrTJOKpHIkJPCLXRYeTXfr;*&#HMoM3\GNJ5?[hhISUJ[/n%ShP=9">/ZZ3)D;X3)^rB@,>mI.gfiTo+a
%rq;hb^6c=,='YSbro3=3YJ6C$h>P"]qB`oGl!a+3]uAmAI.usYhoeQ=qt1Kp*5B"Qa'jJpb9,U=q9.[.`o,$`Oh^bdof%Blp:p-X
%IpQa7_)n-HApG-i0"!1tp*e0MSiepGDgZ!Z*ds_0^W%,c?@OO/o<7#!p$8fqq8LZY5BOW8,4EA1#DV]>^AI3=4aKW4S,.X0I/!7)
%s-Nb8HN8=3hgb\&)h1:*J+<"EVg37:s2D0\(XKklo&8sTI%]rto;TraDe*m9rV"k:fDU>OP:h=Zet.eO0E1OESFG&fkkObqr_ibS
%^\I,uIulnol+=DhI/@R6r8ZPX5Ps,t0AlcHlb!2jqUP=YhoR8Go'W^\iIB"25JI"4kNLaZ]R0HHqN0U^k5OIDhu<07kYRlBh<R0$
%X.7A*o"Y3\s8A>VAHIcBfc@$`q)A?OqWkWJSiRA'bAY,-qsQ2qIJYais7Ots^NoYCNdll!s88pIQG:(s=13J5ZB+9OL=*L$P'@Vo
%gg&jJ1cYHuUFu61qgT7Gqtcd8^PgtAkKV8Pn70'-eSj=B_qVB0qX.("Ga?:_5P"6VJ,Sf)^\UE<oA'r7rR9T[]RB\MIM(;Lrj4o\
%]C5E_IlA1#`p^Nir:/Z_k795\rq`[&^O,eD5CN4iIJpqDmr>$3SGQ0YkS<"OqlY2B;dA\Z)?6;2j+HRkQX>U?qnTT<X_iO[0/((i
%ohV;gro)\VG@/&_*HMgbpE.0H7[E&G?iBKEpTO>cHMci/(iso9qPT\;6B%3`:+^\)m0d&>c3qG6J,\2hL3!%\RraKPIJ<<UY@R%r
%`SJl>p7#u,^6)FSf-ZZGooQ5e?S8Bd]6jD9kF__OkF__AT7;%B^O4P+*F_MY:QC4j77sPTQ:>'BBmN=ro8u\K\`]6Mk%FL83D(a&
%FBR@jQA>%D*];JO>93CYkF^;&oiZ_"Ng<mdXc9dCe+Tjb4n[TGDgh9.TCdp<X?Z/,`\Go_UQ.8/(h8OQj6:e*cc5R%bV\o*X(%At
%j_/_Z3L:^]k0s,[T?ZQj`I+qNQ'U4Z.]]_lUT]5\CTSt)4I+qmNb<ApQfH'JT</pq`=mOL-V9=L8)[<j1`i4.i%aV$EVP#Zp%\G@
%q7dG`4L=)Dj`ob)e)PJEpE-#Wp,"upb'T3GJYQK]l1$7f+*EMQ+4B2)r\je!L\1B3Xk1T5dc3j*qtT1^4as?Ks04FR&tMogX7Xag
%cU=rV.An)Qj_9%,?ANL@U0UqD152@]L\s9L-qX&(2%:cK70`QDdkXAa9S]3:/Q6#`e>/f%RGOf7r?jA)+54'pSGL5_Nq`j-;X6F[
%^%:ahB<$;Hq`sn?cotr5C7rp>EkE5BW/71*8n]F5NnVSHOm"26PgE%K>Vf59*RmlbTi=O!/Hn<!a0\56P9*HKq!3?aj-^q6j*9Mf
%FkRFrm;e#Cb,;#IkGTI^g7s;S;0qRN4N9l5F!&ijr&p,6gCNQ=GI7-nO,r`!U]6N!5Oj7's60!^BU#Eh;4^^YW227\J3TF'P/:CJ
%6@7gJfINBdAB4m[7942+/`h]MPAGEc'RfNpg>nnjWRN<UXA@OXC6K;,jL8h;f.!_"VJ2<n^Jh2C?5X%.R!*aqd4EUhh!13-?_CiM
%7E_X$&PXJgASW4aD\(I#Sp>K>Sj,97D:FTWBUoZJTDX9#7K^c"pc+9*]C]#Adc59AlbDHSm98scFo7rRJ#aVD)W_Y3pKMu<G%;YJ
%8#=8VWQipZH:"1"<mm+@[AIiBVVRP3,5>Wn9Z(GhE3P`WFkf@::"_Y8Y*oiDP?UfAR>GAdlY1Cf4G`t.,4)3Wq@48TL,eh]1[;T*
%Np*_W.M4WCcfBVB91+">4U3Ptkd`:mD@b67nD+T>[77>/#Lq$$&(+d^]2Vk2Q=:)n;=m*'6I[li;-[W+SG-se$HtW;n@kKn[j>Mc
%51fM0cCWM<)nPl!\(9s25I#n3hm<%scej47*5D.X&,.5soMIj8O<-Wdh*_4p6[J[o[f;J9FH,kN`J\@^T#tM%?F1O17=+smq(qj=
%9.!#i.@?^?GkOgcaHB!)5HE-$ZfC#`_m>,r1<cZg;]j.LHMTrtbCbbU7Gk\7%prkc*`&BNBRVE8d1gB,ak/8PU)pW25*J"t6tXW,
%\^P*.04G/+@N.Fr=nYfGLF!_SO;V/3-6eJ5jrp&2F.&k#`?&/;/Vd$e-FQMYRjF%]/=>TU^E5GaT?)t`1@r+k!)X]0$*n5tUWEUq
%4nPh4e\eBX7&DUaq@F*fs!flu(<r#r!?ED6RQRka2hWJ2Go+[FZ+:.NV,jVUfp+&]-l/4!4fHCFY7]J]F;PL56(G;9$WM+2_$hA]
%;nQdP2b!bi35jB@4K*Gp$QdW>4L;r'QA8UJe[S1.j.L,\q.KW_*_/:4olQGAEVj+sL\-E&4WY^0`<VFd^\)guX2hQ-4ruoMO<-Wd
%h$:f"ml@2aO)Fh:WQ.5:PWriG5A69GBTu<Eiu^,#+#M+^1s-msb,=Qf)Pu<hd2,U9IK%o>qL?WehiIfthi%8Yj>msY=hWEE$NAF`
%'LFQEC]$[`g77t%s2]EO5gC;h!jVF;Vs<a8GB0UsWg12^mLR]^EJYX>\*W?Caa\N2hY5ObV>9N9r1"pY[+t-@EF88TQZI'Ek3"Qd
%kfsVd^gE]tgUI@+%X^C1+FaAeOF\c--Tls]%smU;a#-?Wn@K0;X\Ouu59>9g,C7eZd.P02QFV:*Ab)FaG?HAq./a#@OO[6p:K]D`
%M<(Gj(,]J`iu#8G.0A`ONFl&'ae5"j!hWY8kZJnODi]CW4o#6#B[C[DNK;`uM6D"!C6pRpD;L&]GiI?`D'NtCb.E-I(OD1Hnj74A
%,PW]pCr^tcZcNl:\KXg,jV]!QE@bRTiI8X%=!^oD<*_:P"5m1dcV[mOr3W?,+?<V27t/cKhP\:U8UjPDdT8L1HBt_POO?=TOTufu
%8A,og=ACB@46OQ(V]5I1:U[>'kU6/4n)MHha>2YR+[mrQf9:fnUm<CU4TXsQ>?-q_"<VNIm(:-)qB_OG5c6U)H,-28;i5OdmH;ZB
%IZ>^=2%f=c8V"\9s&0=&(P_h=M!NEPc=TO12\Z#o:$6C`1X'Etb0U)^cT/$L]Gf%iC3X*Z9cEe.Y`pI;e@KfR#P/m+"9ic?!p"=(
%]nf?C4bMXudJ9b4AX_n1E`l@2[+oN!,s,P_CV'/2l\+oN1HJ>Cr3kg$0h!k^:>tF7RW,=sFVDL_go>L(VnMh>frrE]]s-S#?8J`t
%cC8'3Y._%%=%n'C3d'u+kV-VrOY?e!0$:dA=&Ig%*5s5u<TX(4>jjt]!9^RW05q<X%Mj$di<1bND,!Kj(l%&F4d44#A3;afPt>4C
%EU`%oVMnW9No\eeQ7=,l-kTj?FBN7nCg"pI),k.&--[-A1utp5&CgK6!.fb6!Mn!j;eH(;/:rp(%"8>p5fTo$%t3io>b`ol+Mfi=
%$Q(;-;uRleJ6*a^&>b=pK2:>(-I7dp1Z7d3>7@04BZ5"CDlj"A4D`[$#BfF9[XE\7h6><@V"FVYdN6^r0&WQ+\e#:UTcbR&B)<W6
%Ut'DVq?E)H[l=IM2Ip;b1EHX+:G=H83s4QG$QRJ+b"O14@/Xc"<Y2'aji]DNgmB(1?rFKg&WHANF/F=8'>-m$,)'6gVHlm0,,pH1
%B\XU15Wen]i(jK)2!ji5'kH.'+UmTt,=q#I"$)S(S&V*q7[SqhR:crK4CR_j0Z6j,6:hTB4D3%#ko]?]8)E(@OR=kG1@;\q/D>=H
%39l/bk"KLYhF2:X1>_U5)L?2UQW3k(Gl2Z3WbL5R+aR"S[%>^!FY%H,hQ6XMUnRLf\El*7p\][BomFMp.d)0VA:9pBrM-,14l'U^
%rhPYkn'g.R+V%MiUP_t.o<`V(`QrPrWR&5q9:bPIa!2DZ;tTcF>_M"@Sq@cL=u3+R.4;=9,\N1T7<`P'Y?pMMR.n#_EgLRT(W@j'
%8GujaEp!P^4jj<*]77Zsrh)KgN:lXgUVHh)q=jn'l+`$=GkW"uJ,_`n].ZD3=hd?,^QNegpBK&9f=UqOMqILacd,n0=*X*4`@YHp
%acgr+5Ps^\MG.Bkqp!qM1lCrR:Z&nb)E#G+'#)^:ShH\LI.b88IBnn,MdNb4o"X+ArseuUT)1bNTY3J:L]/eE&@m\iMQ_IK8b<pU
%CR(=+C/c(TnftD='j+81Ji.,Lh#6&%mHaTq91nqKl2@cA-91'SI8TR*=Ve``[dLc/D0KG?UJeMU[371GaU=KaIcb\&g3jT6H2!3Z
%c#tbO=M3`H;[DR2EaM70hUQa%b,UAmh^?gMGI?4ao#uR>\j'_J]dr[*_=!(b0@0N]`='siLAb<?/rtA,k/kmfotCja4*TmC\R(Wg
%*2:ePf%YeL[(5U^4@qQ5SL7=_7cR7Xr"R\Eqma]#Iokb%0ZS2enpT8C+ID>Rf4ENka`:J[4cm-s=l)qXIGWLr?c;lQM\`.G$MLgS
%]f;THDE[`KR"C&.i5YM??dl$!WQDW7DdfR:qisdg_^3`9]I2rB3h*O7rbgiS65Qru`*'M5Mu.e2:G(ObQ[(6Q.c"*MPHq3F5jj8I
%c&@624&K=4a+m7(*i0qPinI!/o',\%j`cDJ_1uCsi<gob]N0;aITCR.kos1DNA&&II^e&!j_"J'Q#nZDA2n^W]qThZS3N2Gl<`TL
%a\jIDWa&"SmW(>``-.^\^Eg#ODKMt!PHRkbhMUpC]b>rj=7N/`UFlX$NBP!deo^Ngj`so;H)N"k?rm*]o!r9LE&c&1Pf;FlSD9NG
%?[;<")Co,_agdj'h3?BX%'LiWO5kRt*IrI-Htb;o1RG6fDkZ)0b15SHO&ki-UKPXdr_[>(1]@06!?doLM=]jRQ!oF"*J_qWg*L5;
%c]S#ENqdH98T%:>e(mRW;O%d-HSL(Y/4R6DALt$FB%E$%4?d(VblrIPigt<LJ!T<^k2H$oQ\7:A?YC/$">\3X>btGUR@"I>RcSsU
%5Wis^*28OaI*iMX#F&)PA?tQ6<Nj%sEe.NBc?!^6cXIgLm>fVCQ(`0.SdFaG^TD232]a!q4PtV[s7Eeq^OQ--X<iAih%tS2;ASJO
%\)72IMmr`-[Dg9Ts3$0nq;pp\?bcO<op9&^\6X4mQm)Is^OKVlP0q_S!KD/Vk#no[AFp@W:KVm1=cM4^/!"pKZ5ED[;lA8=9bp]%
%VJ7?%94@IT?D5G6Pf6b3?([jKjfN;+jI4$0f/K!`nRP1%#jHUi<tU8!)bmpT_6Oi&SkB`a-[9+?!\\>89&1be+F@EBM4Rmfn_Xde
%5\n8IlFhm>%-tIMFK)2^:4RTS$*C`**ke%5qEXsYGqC.iaRXdKo=VV+`I`YI9;4>F\37"H&f)hi55*Hs6e83mG8n3;,)]QF&d#\r
%IcHZMXd^Z?jo$/[MrS9eBia[aMH52PdEg(4h+ifr6!28a/"@V7I`nH+e:o_td-)T07V[?,Lb=-ERPk;TXLNYk9qLtgc)+)JF'BD&
%,X,e!'n(5GT>aC4lPO,6jptUcAGs:q+3CqU+j+'fKfcFhctZ.Z4]]X(AOW2r@`hq_Z<Z3;=Z+,'Z1G21aAX]g+L4i!E@mCYCPg.Y
%cDLLT<KY3(P!s#clmnGo8"7*\LhaNEY`+<!j2A7Y+HZ:q9GPr+8#^s/8?4l'SLg"]s6t&WMU`kCn#S4ADI:QH[0UgXMm?U"*HD[/
%Y#7A?eo5oi<XZq_L/A^tR.0\6pT&PlA*2T<li[$:],):9`U#FJb1@\DQUO+@n$r(>2&FnjG#,`<hfX$_o5M160ASeep(M,S"?TT6
%>$*Cd3nX?>Bp3H^hc_)Z5"unVne!5R20@*)YoEho@U`unO>o+]f@e-Ug)[`>Y%Qq.FPJ)nI^_BO"2)`hf[hp1S`dHsc2>SVURUF.
%]gd)%oJM)LBq/`#1`4RV6_Za:<PnFEMV[AUM><T.m>E^C4&"Ylb9Ril,bGINH==\C!0M7+Pq4Dr@J#I0I@i7AA6SUm-;9k!`Ut2P
%I3\5(?oiQ`R8-`OV>/bP!c`q>.tL:2!pX&j6\:k$c!Tj#Z)Qm$$6n1aQ3-PgblQ*5WZq-i`n92ne^QqBOt8u3`i1*s)]N0@/lE)7
%#auQ<=OM7B0iGJK:R+@o9c4AOU"ndD[;q8&@s!li,I15=;dE)i;Et70,D;,.\_If[%Is.6SPAs_oMh68KnEQ0eIENi54X-$=IE]A
%*XVa;b?*OW:9Q)gnuY=SE]DM'P94hb9Pc[Bh%+iOa#Yf[*!Z20ks.("/4HN3,lT+(_l,?FP:Ys.MA%+iH611@Pl.OemSOtbJgE`a
%1jN`>/?D5-i-)Ik?J=A&E6'A2C:Ii^`@s12iB&mO:aJC:T1#ZR5]fY.YZ.\,VhS@26;OMn6=AEP1IE_^UQfkEl:Xh)0(\:K;3TY3
%EHfea*[!MUIFA'L`;eB>KFr[?CmI:LoP@>X/f&q@D#"/G)%<QO,X]7)q_TJ9A=MuSe="OBKTEICC(`V9gh5%.kD$8l=")YU=\,\s
%%<:00F;BpVqlH^i+;9P!8/u5&^i-ARH->\u'Dr*JmQ/nU:Z?C/$qhCiR];akdB$.B_U23dm!>j_n>We9G_*CF*G'St\=O"CgA>_U
%1V[qukk=h$LUHlOJmIk6&!:4N>>TfgjZKsT#GW"ON#p_G<=Cj,j0#X==LYS6Y)$qo$R-M+@p:X0O/(9AC^[p.(jmCZJhlH\4LULl
%1D(XJM/?+^67I4s9-4*S=Q5-R6'1\4BIi2EAtXjdTRXp'8.jRMC(rnp)VUot(&KdR>?Fqee^XqB7>k)X$VIhX\aMXlZ(`#/:)_kZ
%=f0*J7^aEY;ma&)[_d:YfG:@?/9>*,>L:Wsbd:ka1:("N(sbNQQt`kG>U*H.+kqSBB7VX3$SmgMa0ju@WJjNBi`].m"h7#0CIoVE
%o]8q%dI$M@`\j\@p,_d_*n+:LZq#eVAGs:D^'(gA)V7Lld)$0D($b<?\b\I09@nDhOpc?"Gs!V!fG.>!L/02NQp^W]cV!\d`su`j
%V*/Fo&^F!)l]Ai6Z`p7Q2"kmS>Zk*H\SI7=4dp&F(HEA!"('4uSeY.a6t'cQ-?cbMW`!HgW*SCc=Oo7o6>r)"5=NfBHZ?kJ^9j^P
%L5LFB:_d'D`3\HpFu+U`n*'K(Y3K99W-XG9D5i5_TJqcG)'5[gMcH:c[BAI>kZjbu:<a9^nF"=#kO?oc=qk^qA9"Vt]lQ.`mODE9
%D+?fL:\XmgB\&4M,_uNCPD[KaKl8SQRHf_H7^bZ"Hl60c1.fLt1f\<4eqT5`1LgDr*Ct4lM\h!ZkI"b2;m,$+6<9IE@p##uEMY"^
%-;k<4ZZ)e!_N?q+.0Pq^J@Rmf/&_FB3!=;+qSNJPkll6f!)h%)UZ4OLknBo#k]5%36&[etPJA5YMYk9dmHrmB-B"N]I]&5/&`_62
%.i&OJU+?Y[`M,K6.B".mAr7gG94C/9p6N/*hB:5mV4S]=c"NV.F,=6]U?X'HQ;rmhi0*Ul``6;RVu#dL_u4-&fqW3Y#n<`P8&/a)
%IFXfD+FG7\qT&c5@EF$3GTm]2DJMBjHBnl%'j`F_SEd)h,\JAs%bg9b3[>c!B;.L+85le_)T/]/Y/<9JJac.IW/?FBq*92PI:-$"
%64c2>[hfoJXCA(-S#6Cog*M^K8.(6N+X<\fSJ=Ps6,nD%:.tH"eJ!j]m(B"8%CnT6VRJk4VRj5J'/lH"PCmtrjC7<=@*rf?2*FM%
%'qE46+%/`(b-`H[QtWo&/+Nfd4a=IpOW]>U.]ZW7AI'emMOP,<748P95*b::_.5*K&m7Q@2-PmuU881doU5jP4<]:V.q?AAV@[\9
%W1b.n<Cj$%iAj&&R#_:^FmW_5W)tdDI//Y9@:hQ5VO]@#WHdRH(F$l2a-#NmdGZ(Umt;k$V=]*YALK(&(j[6"MO\,#E&M9!NML!;
%g.Y0F]$<s(%b#4I&2>T%Wh)/&j'(QHh`[R0+3kk#$0U!2)tB0C4Kk;;7+?mN'`#D'>k<`KL6``?FVYV%l8=>&m4]Kcf[^o[A]C5"
%WZepM&Pikr&YcVdB73Q&1!;Xoo(Hs!M$Wor-q;W;-Wu[(g:9?_>]Yb6RB9DcSjHnQ]OhiI\Jso&h%q'%PY[W&_)7dnS&NWB:Ua-q
%+2e:T-#)9o'uVGIQt-)jkD6m2",b(m5c>6C^:[tNbD_$O+rZW-E+Usb."c\$)DRu].q1Z98T]d2`AI#H'(a/$Ag;Le,R`iU5io?V
%V.jZr2(7ZJ<Epk4<Rrd/<DG[ai^F.*@d/42W/oc8!f%4n\osSZn<5irb(RJ?-:_$[,q]9jKHOgj&p&A0AsK-`)N&^,E$]^8>B66u
%d2'oXk_^IQ<DaPme^IN(o#a0Hmr#W+#Dg)84mDF>M`s_X)X/RYM/1NXd:N:3T!_%RiBY7/dah!K-q#G#o%&b-o2O%,6a,^X$V>'q
%5o/JFK?R9G\[`(?e9+<bWU&Be;pq)?U7<N@S4;0Ij0Q18Z5O,.dHkp[?djf%f,80Xn=OW:`5kj;^,+EHd!AkU"P53uDW_>kh:ItF
%7B`+q0$"G<6t\3^);OhA]&9%$5.-:RLq[c!oI%gp6_fLlQoAnrLtrN"^neT9(ab4*>hi/S(\&Md\=rECdM,.7DC>Q,$sd2pd"j*]
%)]E-NG;'UQ+$G[c)[bd!3'"#Fe5[CDmY1N+M\GBmn3IXRn&S4XDolg,=oH>H74<"Pgg2grpZG<8j#?h+864>=ajg^R@eUfZ'uDX4
%h\,tQV2ZEAP[UIfo;Q/e)LpP5L#h5'T#BbMm`sUsgfM0KU&4P,_g&KNm.ORHS/qW,Jbn(/K7fONo%.et`5DMP>!9pZeMG$`4(.f9
%,bjsj\t0hW%R=3;G8:h'C1n@r08j"%B<l?1T'N;T\g1b`Q>;J7nHdOqmBceFWUbucbWN55)0?kJ)%`-F%>(Xd)BH@Be397Y&G(!@
%hiGVG"99o%i%$QdQpX6b5:9I6C9P^Z(,%3PMm7<RLM!255TCXZ<35$s"X:#M1D)ek"pQVaIJNA)GGGV.S<Xh2,YqY^=6O5ZWFPVD
%/2;e(Gf0*lI%2FO;"/")0W9bf']#Pf=`oB*f$HB'N%jcfh167n;3mQeAA7&^&)*+M//>*7[QcMK0]Q'@/d[COnT8d>q%-Z(-Bk;I
%;emj:[P)mJj%qtqgiMg>UlKJI;i,phOB"^L&0Z?foYbo)$uqLE*d2%JU@QU,IaP12#9&onW88#=a3J2_MNbkJF]?D6Dm>'H0S1-n
%Q<,k=3))>6i<:R5nPU'OFD<4^BU\>D=\.nZG%uhk_1[#F=kD6R<V'q44l'F$N(8]LDP-SLZm9^6XMZbfQ=Pf&(80hrP<fA#@cF.[
%d-ct].2e)Kfb+$K&>s8/K%cKFT*VWbktLUU[ljt[FjR%;3N4_CpM&R@\0IU$iAau&1[3QJ%EEMUjO.g_S164&?*)+e,DN5J(F%m=
%c/+Q'>hW6>(6@I@.arjfUSEVnF"/RnF'`\M@:1$B*;+cmhllrF000Vj<0r9d(`0GH/[:<YC7,nAoZl%@/V@NlrPB;r7pYh*J18la
%F*JRVk`ZW\ja]S\e6nN2VJ98iKl#3V9"*g#3$e[-EN1LUOmX+L4L2YahE7acgsaIp\!JhU$53JtC.A5e];/93N'G+GecBd$heKYl
%HDh5X`\>^s>TXLSa%?R='NdO]'#Sp3DT&g\c)Q>\?Di7[MVoit&H)ecZ0<EMHpG71L-nnVVp7V,c9]?"DQ(';GGi^tO[>2H^8ack
%e@<2*(lo6!h*1-R="(tR=ZK.U/no6A`(OU?!9Go,LIajD\toKM8mm]O%*"DDX)r))F#^X%B-FO\`i1:+(1W9JOS2,uF^NZFG,jHV
%DA\EGS_ZKqkrm*8=q0f(plttr^:B-+O:Pq9%ZeroUN5%X`--eV'Z!(3_epi;,,4S=YE8NJmF2]bA7Ej53s//eUjYu7D$n4"c!0Rj
%nr=bSk'dJi!)Ffq!.uqr2a3'K/80_fMD;,f&6e9'dcO]PQC(iB!!U2c(DG08>P$-8'"b07)WGQ[iU.+W$D^/b<DE&,DqJq\)TF"(
%B9/\XoH">PeQFV3iWjbK0>n.a_3TkN4>7CZ%arE#5.V^aD94<;A-cI#2$Co$=j?.\,_".F.84OYP22P)<^9=P787/=%(eH:[3*OQ
%HM!Rh=j/#HhH3XBTt>p7Z)[KPg.&ngZ0Dd$/Vh.eqGCk##94![O$Q\dNe@XP]ckT9;"uT=6X)A6Y5r;NCfOS:NePLmdql+<iR+s<
%81,8lSjA^slUJe@0ESm6i:,+'A_k5^nT;]_"We]c3P3f.)g]hfAY=&@K3m@K&eC>-W$c-NF"Zjqg]gM:,d65+@pM&O1s#Qn1RIl:
%_lY]ae@-<DagIMNh%t3*=HRoR]4!ghpN?A/+-$>K&puf_FZD^k>HCYc5b_bIa^A9kYoXO9N#8l!eBl#"]<;du2=8U!bJN-C4-%%0
%`MN;ta#SU^mk,Nu"%6e2:O5o_#U:QkM:d@B&]^/i=Nmsl,SXaGM)I3AQn/>c**u=&HmM5^H.:\H%Ei2Le`\J.Ia(\m.RnLj+Lg/E
%``HI/X1H6n6G9pC(:PAk4aPDG0Er-iCeQD^cS#G(2!,X_oSN[nT2q>MZ]Y>K9rBI?Y8L^h&dfh?#%/[XOn5^o#`4s==uNV>GsMGs
%G)OSVA>P1hAR_ZD=Op>15eBtN)lk!0QJH/!'Fu>\Y9&PP"Q2Yo$Jgl*5Xq7^@^1QGbd<9C%fja?gd)VbKZ#Dh.j!=P]d=j4K26<?
%LH!*613'lQEnY:61:'hC4a?>o+@pq<YLa7,8"p#FY8omnUQ"&Qm/UCTP;D7,"+Ugl(D=+XoO1?E]6XJ5DeCDs#6:T.E6!kAn0+`T
%UNuq+%>\TN['K6'\G:QEap5/FnLbjnho?mSa493k-Bt:<\Ija4#8W="l1<<SWIhnh0jk:`hp&5Ti7([rm#lO(LtuR"^46sAkGj5t
%fVs=<]4'KEFE[PS-a1?Pog$":'Et@oq%%Jp"^jAFRrab"F61U],@6+@jmEO(45inR<Kl(7LA=%k[(:cdB-Ffl28jK]d9/TKmB`D@
%K*1HpPX^X7qA,!4,M^>EqI0WOgkJu#R/W2#dN\C72tZZkh:\+H<F>P51i]ggc0jr&a4jZQM(+"c]kA7Di13#Wf&'mpJ!+Pu.nIt/
%#m)=fo`Ti.Mh6O27P6.t![AL-"bDeoeD1ia(I\LYOc-5k^rSrI_%e12FTm>YMo((]aE_@5'd=Hj"TaaDidu^%75"':Oc/4MJB10-
%5sXLSRgVV:P)8]G;.L4T\Yq8C,NPTC+:rS*cG2/T;.spba@2dg@-"uI+<Y]%BlHAZ7B(h?jLj%dn8VcOE5fkC\O"$k]\XdXEF*X(
%"iko16"&`cjrg=:<ci9a`^SED!9:`Y+E2<tGAtC;7GU8fihGpMVr>>]i/3Hag4Opp7I`[ZihH;-$B'i5K7Lp0rB]B$*m`+*jD>@%
%J&TBt`!0c\]RR`QU+YA]Mi7F_h9\e'G%Y$"7];lr#%`_<!q$h*^#J&2p.c(W&\PG?c[&k=R-V?Ci_ErMZT7m>nSV2KE.Pts.D]n6
%`<N6#6?:)ES\t_EgO0srD-uiBMi/O4<cRHQdHr`=aD9UW:B^M^H$Fig`/%J'2:*7abs3#&"aak@,W1F4(jm@V%7Po7Ra.IX`3-\H
%'.T;n#%`;Lb\Vs]<R4^`l1VdKIK]-+dBfDkacH#LDu$s-.[I)sTE/Wnk!klJD@(ld!Ve(WgelR/VKi`9M"m?U((HIYG]mF;Z&??e
%=J:S0Q3s6FCG5nFq5PdH;uQ-Y>s(CEFo.utGPWPS<obinU&KsPS8QSh0`l*#*!%6*b;k+JF<T@Hm\rk'Q#h\FBZS'0ek_iRM-\Z]
%^5LU:\EMb:8B-5oMQ=>,Y3NL*)u:fGc>K9IUoio=gB9#@k0BG81#B4pm8e#BqZ;_#@Ynl(>@J*FXO#,RL9`'ZC:cP8M-W!)^C\^d
%pnDteYh_EI;h*P9IV[g(oM!i\m8JJ6R<d!M7YasLI7<[)Df3M/I_hFBka'?IRZ&YjT\L$>;O?bGeT3o5"Jqif9=2$efMs09'OkWA
%MnU[aLecQ$6"gA42fEkc.dcHn1!_NFa*7WoW_QhdQG-P)kaNMG+Eg1Hc'9G;^@;1KJ^-K>GaFd"GUT@5g._eT7pfJ0(QGN(M8`=b
%1m#@'7!d*kY\T]gPrm<8F3uZ_+SrZtd[t?;+r#YL\+gMB=nUjB9<54.a?n-OdN.,*W?)n!Z2M*Y'3fIt25=%#,h)2#"a70?rDb<\
%]J>?4r=#ecfiK-U_YL^>i?]q%f@J?ELH?l6Zhi8]<C)cA%&pnJUMIlXA@[tZ&R7.%9Foe[VL"Ria3b=*MQ+mSFqb"iSt5%B$l/!,
%kQmAeXjcr:&/eukX_?iUmN(+IhbQ*Y\LPMFJbR$gesdU5m)*^07i@^E3'Ki5"%5`N>S:5CQVu*<nIekaG8:h'C1oU@%gBY=3h'`<
%m&SDF(!>e7U1$/NFE[P_T?%)EIAaVi0V!;JU9ed@@K^k9cA(4Xo:aPmg?I983@6G<'tM&i:<a9nlCE6AM-n]V$utFih!Mfm1b/*=
%9paM3IW)i,4B?QIqk-0=R1.X"NUnM$mU]%t+Z,9m-;$%n"bEi@AIH^</GD=#90:?[Ej8#>+gGg;;e]\dD$]Thc9QNAk38TeYVY>%
%U7L1kFER2B5Ks1>]]ZNaG*t/fbRUmu:\,St2]@V($;%$q=6Wpucc0g1f"'bU36A-Q(YCV*`5;iD5p39',SKXolfjQbM%?<S[N!6b
%7q]:AqT0L^!1/So*4#Y;buHfq2kjO7OsO%,K?@TSh\%_9Wfo/,6SZs'&p<Ij,^.RkqP[M&*SL%-B-Labe\8%V?MXQbmHoZ%"M:k,
%#Mj=f;qB.jN\\+?R,eB2ZrlgCj1KqcX-f%[o9RE\#1-&(ncfH'5p'Duh@l/)ZYbZq@!JeiM"e^:.5q6FR1s*mjGiU4W@&PJ"5_kM
%QpJCZ);U:(\;p%>i,/[6_-S28DIc;X-o]Lj"MkTREKSP7(sT@;h2O,e)d'RSmbl-0<&[HJF5Nqa%e'RklP$:F&@#7pW-^)^g,(ac
%S&RAHP@mEFU<.3#^+nH#O@uI%/aZ+T:g`MmeI=K77VLRCh([r*foYVlTD_X>F!:l"7<JWQDlL_*6,q"Wl6pK`fU%_<d+ea!M8$E?
%a:1mh`88lWS3b\0C>eF6Ol<Y@p!,PbI9YPZDVR:!oR+Cu"8(V=.es:`%>dH]i?/8>HaYG4Ha)/""C>;S3I$MbX\DihI"Ts=JgMAi
%,,*^E`&IN2UE+bf5h[uu(ZOs./YE>2!O#A;Fc4NtB@3t-fuFO;qq*$-i1hZc35]-:GVur9D#!66I@]b#*)[54XPRlWf9IV8>6o-G
%Cf"?QY,h59!F6XHK7]u(2Sdm/5EOFgSF+@I*3F+SosC3.S2J=:;:5otH;'h!L9ehR3Ff/4;;?($etQJS8n.t)&Y8?<_lMt)%sbn,
%7)f6Qfc48AiTI`9b?0-Kl_0H@Aa21JH:n\L:&67\Tc>BgL&D9ONNl[M8NK[%OOEQ0$dPF-/N*%hm`=nFEOdlaHJarYpMF,!O.L5R
%59b?S[2TDEQ9+5tdIIr%)H@1*(-O6]lU^=MSsDgST=YEG'ft_[#<R9&JVU\W?")3*:G1E]D;@=#[f+j4-.aO6nsbQe6-bj;<%*cZ
%/tdS5r<=p7TNdk_<`mY7?hJkQE'Z*pW?IeF++li!`Qga5\0Z&-:Z@r#52(I#cu#Uhh12<1e6pOGU$2uADCk?@6(ug[5^<M2;/_2b
%.c".o-j41Uns12eH$<edkC($"2L=8H2iAXLNc(J-5<?YSNI7sC>]`LWat,>\'f$C>g)3bk_=[UB'eRS2k&HP.2g_nF^,cB5JF]!E
%O?#?WW,l53N/*F_nj`.#hTP<(I40GtoR/&(^]cC%`=?oV3H(p(SIH^;XOc%:lNT&"r-93+9.*iQf*Q^?JdZTRUlKDQNZ80>f=O9o
%pO0Sshn++*p`Y,*BB;XGHcV1/s'.JeHN)0UG5gYHZW#4VIa;=d,,>n!p$k,E\R>WEW?C:b;_](\s6$[lO<Kd:hd(m$MVeBQpKT>O
%HiA[XmdJIt?+a6`mGQlDdiaB?74F'Kk6>=m!ei5-]3IXV]rW^DWY^h`V?FaY*3?t[%OnJ$OH"lZ'7tlE!G%YLRm_)iQmr@e:F/%?
%_E8\j4KS8`L+<_>@&#VR176r0\sgJRc.js;?>F,tXapFcJ:dktW@SV`+_-mS2.A84_>l7tdUh/o&D\T5dgdRPiY;LA2Z#U%$c,oq
%RY$%o2gm.;U0pOo)OQ,>pX:Q[I6jeiESX@r)$<^8;Md1nL1n(FGC;GR)AY4u?U0^9OsXm@FHN-%W.5S&E#!*f%+!qePFbqB;G#n]
%Bur?C%`XZ,Vm]0nR'CFRAj`s[dBHdPPd4VjqqCuVK$53'!8%OWC%3j/3+/3=8cqQO'q?Y"gI!AcTY1[jW35cgCmU/+Q;gd:EsKW!
%^@<TPW:/P#emR0G:DQ>DD8CcSPSREf:*ICWUnIVO%QdGR>'@Oh1A2m%0WRdF8s!Q8VcJQL'"3Fq(2,"B0aP:LAQNF\'dPe%G-'NU
%4h5C$SMfOD%(._u^5g/!,Q\I>CorkY<e`J$=8r9hUh71Yh0@EZMsTXU!]G!3rQo+N-)d:JTCtP26_U!GfN'<rkS>X8R]:,%e&YXU
%8Ii@SnK"-sdj>\R4mj-E1HVkHOYT4ss4.lOb45a-\2`2V#\bD"JknT?4/bi.#P(b`p.f\G(';P)p*%__i^YTKgFMQk*8i>M83AC4
%MdSZ3o@G$@BWt,qG(MCW_/"g,])^_MZf^IBK0m)>BAY-aOY<AR=aS1#-,`Ibm1-WNr*:OoMrZ8tK(@.j?7:tBi3cc7D,pR&AI6<t
%r#:f%TRbK.OVP&C_H`S+kHG;V1+']CGb:4Pk6`rEb_hso<WYSp,W8E%Uuf!Nd*nuPLtR)F6/3j&#BJ#OLO_PoC/L#M:``fId\sLq
%;%+]\L:9aCj2=@M[+H(7Jj!CJU)jg!_;_c"NSmW/_fF;5i":j]lPG0b0[4V$Uk=3V>!rT2E8ZLilm76)n)QaY]_iYq@crTA>#4<U
%jlc-)?hlXBFe.L:KJ/3Ygm\]iKW@Sk,X18@A#WO=:RC^"!u3*75a/E_&YRI*i["s68O108_>X]hrGY$bYVk0D9:H2TQYOm!*C4X.
%N<GXi8OJJGcqHp(19F@`HW-Zr-sm*5'k.g90X0dkd'S^8AlPm'Aqh4LL)p>dJc.*<0n<A.ClbgLi3m#*r_/t:6k"+:1J"j2bM)WS
%1J4*Yo/q"BLB3YV"kX62C]&b*#q85r]dmM;c5Xk.]Nth&3H)mK5a*YsgZ``$#\tSUZ"Z&fO9`WSN<(2&.eqM$/tQ19Q_lLV-K#\X
%%$gRi6YrtDW;4:nC]L;YdLdWfBsU7[e1*h.-%8H=jCTYg6p-oe.cZ@qeKMZg+J]1gl-=46;E:.?LbM1%`Q$ejIWCj9MBF+2Ka>g,
%#]t.mcM"5VjXKe^XJgHs9AC.BKm4]iSkWOmNYIWk%gK&D6Rm+S==dkK:!ul4^A7&*=[UULU!?#8pLKI+ckp&F=t[hUUSnn:"i,g)
%6Fj?37b(DJ9IM7tJ@km.9q]ha>%k&eR5EH>)]`,>.r#bZSH8f>6)d8q$3Jed->;bE=Fa>mi"?gLW=erYHY\1)?#>.7cui=(/,'8U
%k$0a\4oo3cCs^4$f`i$[/Fr_\(H'J^PZ'0)nH;gtU_R[-Q0o;2Q2t(o5^bSC+`OZRJT=Fb-H5Gl;S/t!Pq[$]c4`[sct6Hcb3`ik
%7`q"(-DHQ*T_Q)r7%noc2>+q%CbfLa:VX046#,/cKje"jOCer,@Cp+;=<PVdQB"s_OD&O9h.:#6(%J#a/_gEq<=%f"_kt9u_.cDY
%l(\^tgN/MP`kjRfgp'2F.W#7;@]?q<g9XLJZsqN@*n*r2<Cg_?$7BU-&T`;ZPGPau(i0*O5Oh$)8]p7(LTN\LTJ@]5BCXRMnn6)"
%!Y2tLf;sH(pD*nP[b6Fr/s$*4h;EX:ab.hAAl3]G>:NAW\j!X'TCCt]I43'h*jE'1P#Anl_ol,L4Q6M?H&!0cdAJAs:rHm6m8cE8
%;cm$dd\*2rJ>pb>O:I">VAA&UcnGb5;KQ#<0n)dLk8aPO@VoT8#6H$Y'dKmS)$qYX3;!#?^En6k?2]gfQ0fG,`S#Au4ME1:``5@A
%),?b2BP+tgfNjBdC-6\L]/5sAY9m1pTi*_9Te$m.(f_2j"p7oI6(ABUDD`\3<^%,Y$8_ldrRu(!,[FC3Q5q91(e=m0X,n+DZ_=as
%Et!b]8HgZF8"nQp`]fH*HF;HSL&`1`nDtqWa((Mc">bT+8PQQ]!p@R*+T2o;%-DlBDX7HW%51K6V3m`CW&8ChFD0h>T]o(P=ef"Q
%%X$Ubl7u.A%78?70IL8:5VSb`1A,gsb!V$s%\2o`RPd_PLp`p]DCFhimhtR,liBq((rl&<nUX8C/H_NOc5*(K2jW9]:3.S8a2`dX
%ctZ$)Po=K8gIALe<meu.*!QO:=loeRj:[/L-:N:amYnHF9'6q\+o1MB=B5Ec`b?*P"YpRMC8su*b0dKS02*Pi2IUGil/8DrRm_:"
%DA,@A\CECbXa5ca)3/EXrX?HQYtnl\*1aL3*ZqWipa19T!4C-,#e(-C%g,L5,UAFgfN%9a;!:u[`B\!#G08eH/460QT]!OKCk.(B
%2Oc.VfgXH0BMMeAEt24QU,h&iWY6Z&_p$]La=VDg$E3j,Pkks>9`K8Jo`RnZ"ZIL#+f^1CYg_Z)d)4N*e\f%=[c!@$mB8#i9'O[u
%aTK=;-\<]V\)WY*Ok=4m.30ni@rA5E>X+tl%A#6(j'f<>`9([O\25X>JTqadB%?Loe<1jeKX27T$'<.AmhTQPL^*<mg$.IiWHDBL
%7;9S[1[_'Q,"FaEc4a3J.HeSd#,!n+019Du'X\Ar^):4Cs'ogYQ\'1"<X%0#j`.b*a21F%pbFGUWLT.3#mGt;3*_aFEL6ra5W?ka
%[k,h"US&kM7QATFrF'Is(.[pY%2`4Kl_bbYfS;"a<bKK*4H[a,>J?jr&*8Xe+(K<@C(!j(28u8fX+YHQ;Of:plWk'n&Yl,5g!V8e
%i\R%%1]])0>#a@4'QMa%*/(Wsn32!Ah:UP]F=O5ZPV''%pbO[N0=4?Bi?d!-F3de%]!1a;Wg.1,U=7mLf$/7@Kq&hq"TDi+Gt29c
%G7\Gr@mcic+<nb;-!_?K?5k/LL"$ut$oL>Deg*<W,Y.4k=HS^2om/):q=PY):X-IZ'e8s*_XJK!a,J[gg[]kP>Z`(0Q6;iG#oA:>
%_BP[L>,G<OK(X0Kc3R+?!EhDiq!:G'<$ftag6GtXWeP4t4pB+W$oL@C9tE[opO0oH.nF1NrkP>-\8cEl::4nKUIDY8=`k3]?r,BR
%n7Gb`O*650KXV?h$RMLcp8DHI`_K6C@]<MX=PQqR,>1a:\FDk;EN/HLgbtF2Z03_##=^&u\RZ0TnN'u7W*1&R#%_]U=]#:!RqZ8)
%W2r0g>%n$E%:Z!529JW;pjO\QdBG4@[9IJT,IViY[M7Ch\.'^*q;YFXM%I-"Z;Pea*MH"J1pt8^K=#U0L`klup.U7iRHKlqB8?#"
%%_&UR5`3tp<G:7dji56U]#-3I,%\h'-B**PM#bPJJ!IV-?XA$%9r#S))^5K8'eN!p9rMX?]Np0rB0MkgPo#fB27?E,#ss5()eC9h
%f;@"@!`Srd=WW?bb?[#ml43s1:cZRM$1jn/>d+dnYh?i5(GRAS0ug3oe/D-6p*N]=kk0`O!TL%/=lGiYAJq#+U5QL`g=W!\Pu\,?
%lq^lG@^p3k9\Xf[c,FgT1m;l<_mj'Y\fj@,6n:#<n=6eUTii'2!"b$QO5-/VAia%d'sF9)c$ko;cr63ZqCl+Zd5m#)jXi0`[psXr
%S!#CY!tfc':Y$`1XU/TJh=lfKI2LWG.TWLMd1'U16tR<:A^thk^'>2^&a69pOTA3*cAQ7+#P4Cu.R-dKrd5iY-G@TBB\3WD)\n-d
%HTl2T-^Ok.X[;P$$,^NT$l6(EFl9\](;2X65b<Qoqr(4)PVVK`AWOc(:]aZehlH=VXCDYRUsn+f9t0!)o?[_1Nau:EO@9;>5mrJP
%&(t@Yp>/ngUX@qGk_pdRW4`rTaALGn0dY2rb6*?V6sll4*Vp]]5utuMB>Z4XfQ7Kp[WFP<hF/e*)?FQ&i3oX#oo)t&2IXYA1\Q;D
%Yk&]V2HZ>C'%:;C/4)?f!Ddg+I6+-B7uVQBG2Z]o&4J1q(+maD?7g1D0ULb15^IC!T:p6.!epGk+N&fGkAiVAL</;u#J0TDP*$&:
%>`H?kOFATYA]0Y&#T0hd5ci,"ZWN\Aed/!Hpa&CMC^)_=]>oM?0cSl/0a,u9$-"P"+T>W%1'L#cV,MSW6`cLMT\9X_]G!SeMkNOC
%ZVb^&r&Jihj?^egV-uJu&.7eGnc5ed%Eq#))Jo^jlp:L2b_:L?1REp(?-IT%Lq>o5_>XjW6WU'%s7'9]X!1_uH.`d90nmCf+IgQ.
%"J(_nqd@OuU83"f(KpB?4C,6*0/+JY`Xe3?'eK\cFPr$q54c'BR-3sHs(,43UPt('&BK65"HdO-c3`F]^.[p`HU"/s!XYYm7;#B(
%,LupQ@"^Kg?r9B;a<C!cD+i>F6c&,HbaZsuHp>+fl^8pLf0h;\fh12[@BNZj.u;j'9&r^`X>MlXC$&dO!KRJ^pS0f[j_Xqe<"^Y7
%YQ2Mn:tJ7Dl^mAiB#S:I6kZ>8\oS>C'*G.,Be3i@T/Hgg\cX9;WL^ULR*pr"Th0tOd:H9Zln`e5Q3;pUN&4'>Lf>)Mp"1-A3==-s
%ebs)-Q,nu#!d5*)IL(beDe@p9ZY3lD3f5FTT-lMY&Cj^eT83s;DL-IAQR`>60DdRm@j+RTarp\AcJd^Q2tLSYjQDUh!3(B7ITk.S
%UfJ..28kjcPidZ]5J+VG0J<N#abg'7e7(pi_JBe.S!cOD##Lgl%Tf-NM?,B+__TfK*u=$lpAKgB.&;+"m8/`iE`![?mEff+&i1TA
%o5OmV=&7?21L<&HL?>QP;gV&XU">93!'(u<(Vgk*=sfN:`kr\>6K'Cp')QP.OR;K!NC[ac:h-fR&Jr59N7SY.9E=)Ui'K$P#7VTE
%#j;W-^g:MZd!W<S>pN3DJ6#2(ap$FjY-%Zn<JYdIB[m`XQN/@D7B//\=kCs-6HC#T@C,kpq,!3b@o3R9GgY0=kW#3dl.%GF,bZFs
%;IcsUj:t&k9@#]=ZtEB`!2Rj3JP%V9lgN509Ff!2OB/XaLdi*ZU4QZV4h(R0>V(aMb]aM"bm`lu&Y$KC)U3K;;.sSm7]0HK[-k.m
%+<_Skh/?F33*RSJ/C!U&_+K$C`2_b.,JLujX.o`B"NrO@8\1@FGZo"M]+h"2i+''%=J.'>YBD>0^1;rI;6Vl:IKUDgaT<<Ri'$F5
%!XQjOGlre!dhIdpkB/hDH"+_F;qH%2_?*9gV*@D*Ze&.4YU`47.2K<XSt*$\MQG:R2p9MVB/^HR!;V-_MRf^(N&+:?9O:`4T%kmB
%>>-on?.&pDQF1hZG976mbA10uP8,ZY[-qkU+bf1]`?Jaa&AWVB@Zu-+W6rAelWHCdH,d:W[u2-%@r$b8OZJ7e:"m9U7D:p$ECXg_
%(l#SaS%qu('I^L5Xk=WX`.>b)9kE(Ta!Ie5-rFGE@iYSRc->c;MVGtS2PD(Vju'XW7q-i\AbnXl[+XlD9It_@N1$t_)qGgO%&)ep
%g?+S>`#bo`S[b"HA(DegQ=l^G&lIUCUa'0DaT4OodcFs%DOcTW[T*OLS4&;CR>.KX\Xslb!qP6F2$OI9L1`ji`F<c\Xa?kZiaBR2
%C9A8K*Lk[q4?#npUMWA]2P.pbJA2J[iaaI`'-A\?#_ZbG6t,FljQRN!0Mi2t(o!V)mAHF]j@$OU2_%jS5]Ab2pRiZrNc/XNhA>6D
%61^gD,WFEY^aknh7HbH@9C>+g7Ou?F]"9[%&=ZNa,2tqB<AqW<P3>Dml_.F^Z0Hmd4'Tj#9K^<B+5&gg@2?PK]N[R=R`]`&*Tms8
%mu4j'Srm@<VH=s(nChkbZu8JFL=X9dfm*:XlBF%-g'q3(:gmh>%`QWti/F;e/J:qa5\I8iVTd<n96?El?nlAPq<tJ*dQdm)`KbgN
%k,k?XMWT>lXi'EM,)a]a.YSmn&eZc:.^1=tE>-nrOKrX!#Q2G0\$C)5#p;cE"k4D(bYt$o82g*8(g0a34%=d0RNp46]G';`qq91m
%KhYFMNCAP>&-IK'6&c&?3V;B8MC!tk&aeafC;X]p\?GPQ8J\4Hi/k7`HSX:3YflE3W!3FP+UE334fm7HaGconKWmUm1W_%"P\Z2;
%QqYL6kQSoZ(k?.=PRN+CRt3MH9k0A0e`o0c$Kr?`5K+%WG\p_"7QNI<V/RX$VOeu'A/sQ%Xig&hFk]eo#]'MNPr\:0kr`F'%RYIf
%$fBqienWfhRYIJgho;lFpU8Hd,70mN[4qeV`K;\<pA;Oh5TpU'eHu2*'cQcp]ipXQ&fuZ2(@QTaC/rkI'`K:-LJNOV(a,sA--Un"
%_O:Mm,sb5d'[D>q$4q->:aU]@3sV6+h-FgQ4'CIV$@JkRBAt.O\:]M*gk<-b^m0L<b&2X`E>ioMpqiEYV!)?GBJQ4iG-jR1"o5YL
%`YZon<9B'c"t:t;QRM;HenA1X&G,L,-fEp6-l?T6=,I.#-8F2ak)n#`YmQJfcTVkT*oLL_qDna\(=PAW0I9=WAB2\d6P;t$_A+D,
%L%5gEh8uC#eB3;M*'3Q\iOI]%19!tM9ZYLR9IOH1!<bZ2NbCC;m8@a9$Y`O-T&pfN`'_=u#g]O61":aiYcQkIiY<T,7e]XSY8>C-
%5l`ip(sjsJ)lNcVoeAaM7(jaP7A=Sg!S0M4E8oXD9hbr1`M#5a!5Zh+G_35O84)SHJG'Yj/CWkIafs@k^%be43o.qfHW"q:c759d
%!PNcYMUWiUqL"lJYH/a_n7H=(]ssRA\*dQhbD&G'6PnlS>o#%gd]9cj"h&rK+ps2!,g306UR0i8cKA:.aZ8[;FCng-[m^ZqB-R"V
%bBF,6S^QH+af,QlY)Sh,%)aLr6]p$gfUG\Xk4'P?!/l:<D)t/Wkj_?C?>*!L*G0#c?e-fbWB9#]<n\9:8rPM&9B_>?F#Qh0\54d$
%j'gOe>TXji!s\n)66M(4o)XB?gbXVB<ZMt07mGIGO6V2)^3@Y&R]?QpNB%&9/Kfl24uKBcOo38kS&WAh9oK9-U=M2[_GAHR(fqUa
%YdR<;F'+5ZHp#o--okEqT<hOrY_orEH':)pg'o&-PMcG(VGB,g1#!TO71UXfUo\'XPfm#Y;6Q$Q.2>hL3Pl]H1[Op&;ZZD,PVR=;
%<3%<4-q9e\3$sQtpD>Dq82IY93A`KY=p;!'M,9qKqe4t4!<O^^0=JMN$O/`!'mJa,I3iPkq`3p4A,uPth4OW1qfcCqoBX#\4am1f
%eZ0eKr:97L0@BR'p<:!8JRLi\#(j&bO1]K&AGo(\guoZrWKReq-dn;'rA4S`!B=ONNjoRTB2t^ZaBbqCYpokp\Ld,>]7cq08eDZY
%as]KXar2D4Qcju;RKPL)R3'Xm]GiJo!Mo0\kK=NJfTU0*iRm,&BP*A&K^KZJpXiI]COq4"QWDE*P/D323kW"3m\.W>)+c5I-6^V0
%p<5l?=,;\5U82pk<*Np)dXi3)(tf1u:Q)f]!i,8c1g,q]`@1B9!74*^KRI)+,acMI.8MW`5Y00XqjrFo0&qDmd(3l`Um,gd#k6C7
%45&4sR2/Pu[I)EM0Uq.^X*P[-$]#JGUbs1B^WYP!p2k6\'DG9BqK,0D.Dl8Dcsb;9=OK+aKQsbS;jQoY2P]QZ)Ejkr2([Q38@Ic>
%]8'A+3RC$J*H`:kW!u2Z$nYopV!lLWUT%i-WXms$2aS&2%9#&t9G'LB1YdtmKpuTl$\h_hCQ:<8oWJ7L+/b6GL6N/bb4Lf3<E<\,
%!K\q4Spm2>m):*sr@knk;\@t'1um1u3i(^.4G)3&6H$aF#TcLDbt/i`"bc3o%4p_7o\o/D_d7UE?RAt`k5`@2p-%b];JH1q4[$sk
%:^'Nn0%EVfTuP->Q6'S2;\>O)Vcj5ir.3"XBSFF7-SeM3@N!`)p'<rY6WcL>"$j4)K):Q)LWhJ4icGJ2/NrH1(>HgGTc='(nau&P
%duMmn=I,Jhj=D(fkIo[eQu=[Z&/jY'#m!:"fU\]Vg6&ZCFnHq&P=[BVO?52p!>Z&F=lW=?#V!oINkjS%GR+Wo5V^D8?0(N5@99?F
%'F2Etgf4RO&@6,;>VB0:)P4;t0KfHJk$:u@ePh!3%kNSI$ED;m;lUBU2I#5T?lY_#=622FXMW7uWp[t"M73sO*\mui".2MtJJaRZ
%pXjaD/J^^P<_e6`.0/JR"IUe,H^E:`haK=RRMGFk"u4$e,X=)#\>CmL9p5aK.>hU`S,dWHa!PgM.lP9KiZCV0#S[n7ednTEKDES4
%2g?Cr<0ZfZkTcl+Mgbo%fZ4>A2<5Ul@p3e-I_T/Q_m,8>m*Qd,aHYUQmoa9-Z&e['>DHY80.*m'cSCIt+!)JRrITm9(eT;I0.nSQ
%@OhRP)?s6nZZH82]hhZ!gEhH9qZ\6QcfY;cH=NYF>0*eEb"TA7.eHELC9fW>`[LnG$ki>7m&[L%K=[rk?MDgkkV3@*/L97JMugo#
%!H2>BdTUI*"5d>QN<`QR](.8uB#S'fV<ORV>aH$>LL"=\Cahti9q1<2UM6SFeN8#jKa##uMoE,k&?nK`,fMf$2-J&N3?0=P#Vea8
%4IeV/2nLul$;m>Y6rUtC/69YUaU&'j^^1=jQL;1dOr6AaF`^QqeofLRZq57bP^uC3OoaL4\&sb6=C/*`b.t0$(F>*CUmW//'HUZ$
%4ZnkbUf:-$q@rNW+\#cK--BTM6in!LYD4So8kq+PTu$asRpmhs.?t-p;q-lLRN/]/O1*YE/^?j#O3[u+*jL@53#^a==d<9s")\Oh
%HaCV/'oAU#HBu@G=S#M\C#X"F]bl;#dj3b;6*9+HZ2X"d!gXR?F.9/(gPF=Af"JmV-34*Ce-&,Q9?gnS)<1[rZ6uX3W-)gAG?QN7
%X_R&D_,$W5$U&>0>mFijN36C&BUP\P))CN$E%7"&&:U-I8<ePRl:a56=[Tb"]Q4f-9I+K8O]Q&l,s1!n;W&HiS4q55Uln)96Zi0H
%!7jq`JYRL=,XS<UM((^:WZfrNAXi=,/1=c9bFhSj[[;ct4W?ZldcptB8&7d'bZHo.e46Mu-H39&iups<-fn<+MQ7KQ*=G5tBLI[-
%^<(('AVWaBoJA+?goMG)\rra907oN)U@JP&"@,:s_%6)@fFqk")$Q*If^B(W43#+@,n8naN.Su^eX3e,FZ>TdEroE_^m`9L@A@rJ
%gdt)BX88ii5u>1dq*T]4&PGTj3,190U+p:UbQ\X=I3LDha;Xen=/M8."VHmu$3Lidem/uGi#JimT-*g=5lq/e5,;"[.2NaeNV6B!
%Hi&I^SS9/]aQ!b,<j\d$r!5`_i8qP*)E1$l?lM]Tao9[%1IOOj7`u^KNUm>o,.NQ&i+?pjFf30F`o1>WUH@8NmlI!(,ARc&V#hoE
%Bsrs0U+e-9=ZQ%o2M+SHCP]D"eu0bc_`""/kLeVoKTnR9>4*Hi$/H+m_;,g@o?N[@$(qbh2_@@MQ0qC:@M\2!@CqV@]Ohe(S@42Z
%bSVt9T/DX)Y26T#'R3ed><hnlA,Qn\fofBs&dVDe#g4JUil`X?HtOf)!D%p/V,kM='IJ$kku@.=B=+6RM&h8>U)ZhWWllfN0-19<
%7\,*i'2E$`Bl(;$j7/!Fk+_j@erR[_ZP^D??X4!XjF.T?(Ig,g+g._Fh(dG>2G?5n'CQ:ogPV?a,:8C]^6j8f(4`.]!BTq'KuS=B
%QK"ms4iu`MnY)W$=XINZb,)@Ql7f.DQKkPI8'@l6)Nsdb;f`J&K%\c!Ra%]N8@I84AmR8K!.Z4I$8G!4&c/3%)[K>EQL!&'+I34(
%'RZ0\Bd9uu1[jo@8V^:2PDkWsBr[3.&^b8Z,8t_DiZb,")UZr9*34;q-i'a]DLj!;)"I=e0[l*`d<Ze@_U?DZ/s`Y<FoJgh%fIWs
%6i,'$c8,S34@$^Q0*m[-JKWrgOO>OCDlfEt\McdU&GYo4r&,6!q9#$rHCYd=,ZD8!Fbic?[1GJ-/QRh?6;L7M2-4Ls_?<:,aQ^(/
%rD"mk*'8?K.B52:aH-HIcA%\/!f_`3f[)'ak7&_>^g;E;\@WXR,>TiU>eBG!_Lh'jeK6>PXTE<L]$,p]i5KJ]]4/tbJ;Wh)9g(nl
%Om?:bq\B(3\MO0G#Z$lkN75:>"f`BLEhK&HS9!.eKM`I7'/UXU.1?Q$8S/]91Z2.hWhsTdB:b7o$]]<cXAPEi-<(n-rRP4)EPD_\
%QKRoGckl&8OZb"5fZ&In<m4T*@Thi:S1?lCHtC9b]1!Rp84HB*g`ceL>@]"NO1(@AC^Vj'D)eEVX/1YTb?e.\!]agM>h<DUSb!]%
%%Eb$pPX]*1RND;,H_83P]8a]>AgS/F<-("-_47nG16J@*Cf_dM3Ybgd5W.qGXF*[755\,]WN#JC:9.&^CWuj/F2L'%ft'&qIfdpr
%=rL<]Sp8A^T;IQ*N%8f1fep+YV0Fh0%m(2'gQ^p<(4eh)49Q$pdZ%WZ9^H)nJt/>J=Q;rf2,68B/8KmfQnoR\7dnS*9_>`VO+cAH
%6pN[.3,CqcUa\hd:B4p'hCMVP"D!5nd&s`tHt_r7#^)"i9l<G,X-l3O[WLF>=_MZ[L:n<R\^c[PE;?;,^rR_"ELq!k5r4I76il7I
%U*9S+D:ggngC#DK0HO%:E(;gL5sK-S!Ak8^$/>^4HLtR!\X_HM&@%7(Zns'$`?I,k4>gWKq%M$"!>9PY).HRW@+NMH-7/7ES;F62
%4E)5b:7nspOUKCeRi7HNB'[f_1b+Pg<$$YOKKKY,FG=/@?ia2p`U'jDbTo!:1WQi#k*Y6'0]HPY<CbY(&6RsVYJtD+o"pfSgL(q]
%$'7bo4BudfGroi&]-7=[U]C.o*Y*nUgg%E0g(A#kBfR"NRNR:KMutP<cRR)`>40p*A@:!!5]^FW.)g#@VkSkS!V5R/fTl:QjG(`M
%OYB#^lRJ4I?487qVhl*6IZm0?'uen"T?UhV2@Hfc,YeNp>@G[Ug![BH!])5<BL@a'fec+Y[<&Fa_FPa/kXlcZR[.]p$RQ>H9O%=<
%*oJE%gVX&HJ6(^;](7nBH#H69).nla_,oJq[$e=TL?s6RPd&@;Uk(p.CG2_DUL4Z\0a1o;\*qL-I:@Ocj)9QP4f%3=)'fK$C:PH8
%D@l^O#e8aE>S\!@R`-Wf"!s0*OVQm!5fq__\ZBRjb0%M+k^[F$mQC5"1kBM9hD;`n<#Y'`F'Dm"%7$c3@2%9L-4d/!Xd6bUKW59M
%O7j(G*OuM_@X;K#>@o]["p]T#/M3]cVL!9meQm;c=F7I(C\>]8C8tH8:%f'gl=JQp)#;s`fBS#Sb;$U:[uVjLkjMW5SECb8K^uT_
%ccP7;]&ZNYn"DDL-0\Z2Z)(U&eVA/o+m$nF+u[&Y)%lutqJ)-i.h#@GWrn\FL`k7)Bi`^'M!C?TBTgoe=6&"bA#6Q$E!ho:>,a*k
%W,$3Zh1efGUf@(GN8E#SD:jTthuW`&[VKX!&&aKnV5u>P$:f(e(N(G487ZaGM@#GH3'\Y&)<C03CT$h'8XUq$f(Qgk8J,:1<23G'
%p6]Tl)'(k\4(rkZ.\tBc-2h^GI0S3q$r+_,Zu-'UAYq[CF)GU*>I26r$,`D9=1=?\>:]!tP8e9:l%:hAs-hgDh/HCZAkW,)dNh'2
%I]huXkSMf\9]\*CO="UXQW8Vn)51[/^ic>E/k^8X:77's<&$J)0tDAOP("QJL7aLbm<m%FFQLY2QOL'6l@t+a/NL/YVZp9ZIcG=:
%.iH+&;CladA=f#h0I<LW0iei3B,:MSBp+%]1qlCj3t^@=pg-OTS&*Is*6A2;du62BA/(=RC?#`EeZ`=\K&j8&r5c8_l`S\]f:miV
%.m%c'>0@K<aC'Ut>NX_^e^F(kC1LrVno/4%C'Z+17W,[(??hT`(ff-nUIB@c\R7iq?q>FWR1pNiO^,og7-<o&F)=N[!XD?.@75!6
%.2.BUXXJcTplHrgm=l+]'k=Fd2IpookN5*K#)^#j+_*k\-%f#@A:Q`LPD_n`$qF+h.F(&s9[B$=BolIf2)Yb]T+8b"F!/AA-jI9B
%C-.10C7PACbI29lE$dj4o%r]p5A"2j'2E&[H263[rRbnrN;aY_FE;LFo;C+qmfWY"ABi:9o.`.sd5BO3O%3b4l9]h[//[BJa4NNU
%CTEX?!tTos[0u0fZCO(InouJCCn0u35Ik<pC$KZ_Wm5e#OtK6oFpuP%Nm<@EG]lfF3n5tI1d"oR3l\:'4a@\]"(d4cNUn-rQl%X"
%H&fE\P#^tf)pO)BNo2q[3ba8dj>f+`>e0DF'+]kDD`l'._^,J4Wf%2bZ'k4#+4f!$Fe3*UrkmZtLZ[li#!]F60AGC)=cRW6l_[dc
%`Si;,8D8d[=J^'B))28I_"ZbH4&kBKBT>)hLbLcVA(iq2QCZ<2[.?V*]SrlF=cPe*O`Z<hBoCu)VZ,?43*oakjV5bt9f^&[RK`jU
%o,C&QalW07#[*f%hV!m.,HY4\N<'Pt0Li%$0bY&aQLJ42rs7@B&K<B&rj<HQ`Z.M!=cK\V_M:6p)M:o<2ATb4\1P,6SC+i`]"G/3
%RXl?IcPSbU\?+-s2aoH-aGcSmfpp2%[F)LE1E#43YB-R#7&C+.B]h,<^;lDu6sruYE?R()[R$!r(jF/*3e]9imMJ)'#%L[WpYc7p
%!*.]'ct+kEG4@n+>ckHVfo*[-8'I]i(Fq.I\T/Kf,B7_kibB2i:0ih9TZt#$(Iq7j>g-.TE8F2l>c[E&>^20bWD09B7M*4um]=A]
%\D#?6XMo:c<cQRIgiW`ZBCW)M[tC=XGK(Obb7/#;C-rO91WEmCEAZc)-=Lo#bn)OU`MD?MB$_8O/)tZY@[r[>,sE%a_f=*&/X<@R
%=6eSg?9*gG<[Zp$<(t_s':j,#H=Nj%7QqhIXtr^*CA,iL5uNZaG6Y:2UY*%;]202oEYS]#(l=aL5eDLYr-.*I"s%j>m)1J[En/6f
%nXEP:B5Z^DBlKssk+kFg]J:/@cSI:qSXLUA@Uel@Zt@t#ELIV>>\JtVKa/^#dh4U?UMs7CfWKJp(K+]Z4hV%G0f0:p.7Qmf5;slD
%hMfC_)tNnE+YaUS.%k`Ii`6pZ]W_u8`^sca`;#=Ymqfqh.Y+L'aG=8uOjMXgL]K4u0ZU_[_-tfW21MeN8;U4J.haXFQ\^&L&M^gg
%9>0m-'7:t,b%Z[4"WNtc(pq+Uh%p]50OLD"Lo[AdSUhWZTq'qO!oh';ATI8NP9a*sMUN*rG?X+N5+It&l8eZZep*rg%qcNl?\sPr
%D2rGF_hD7$*43V;f[kL^*C_Y7CHWMMZ9bIl\#-[3%O1[jV&VrS,]=T1!(lAo3oMbH&0t\t&e<+K`CDl(@4[*.V9C=f]g9>?)b+O1
%)k1X\Nl*S0fC5K4q^^2NkjQOD9Z)*D-_B:LlL2SFN5Z1DX3NI/5\JK('=DSYdT<qT%"fuG$V+#%,<qnB^re@DPg\eg0T;OY0nNdM
%KgM873#fHuZLT3[RZt7H&-t0DGuG)(h8f1\/WB$Sb+"o((fc'&D.6rRIGkoaU!j?%N=?_50K<:qZ(FUA;1XVlU:gk=LDlDonb^NY
%lp<'67MQX6%6e2>EYgdq`R=W%Cr5*TJ3i4+_?\n2jWiH/bQ(-nRkSe1U^M0#iIeqTEl05_q+?$mZO-Z%GqO?L:+(FndT@rh[i.TP
%CbI.o@@1Kum0%`@BE!TX)"a#"EAB"P))kNT5p]25B=VF```dhe+;+m6cpZ[=M1hQ[(g+<[$$5G-3B*)i!B+kl#Fn@&/iGQKKh,;P
%c-k_d5)e.?BnR)2.J(\+N/0?#<_ahIPg@a7EsP,P*@"o?KX'NY']U*a0W5ml8`f&$#XaktjU]X2(C&n1AneajIhNWKhc"`$fZ>dg
%<8%WK?mNLP`5tiT9nPoJl<m_3?0dj!S]*1kAe!a-J0tra\aTg8ctS,`C7-j]CG=WQq+XWRGeg+/Cn*9ufEEZnV[UT&\Lkmj0c7dL
%m?eTL;lghmq1=/&aR.+c$rd3eJW24j/E<N`Y$d>&>NPT3GH;!_EMd,W4Sg2?!8NGU$SFQXYkAYBF<P+HU^&`B@/kWu#nEYK"Cn@g
%K5"p<;R^i;2M;[(2NG.#7BgZc13ub"VeTdT5nOP'KMn#)(kP\k9QMljURAF+)B]>"LiJXe5qp:B7.L_:ZG\dgE+8KN)`R]15]!Zt
%rH)f+]c2PFR$*l\%6lOm,W%=PJX,5;Q-Bi@=IsP+&5;Ba@bDHmi_-^"M%^#Uold-V6P)qr;T0P?0`JnQCCgX?+3\t8(kS"i\BN2/
%bU5g6-Q%I2Ve!H_RnYG0.kl("?tR>:7[tWh?\lpK(PZ>YX>E.R%)I0k8"F3I"R?V,3pt3'b]Fj-P0OV4;Hf=J4%1jt)dnWs64o/L
%TF*(aJoOGP[W@12p;p/"Kcufh/OhOe+da2jAD;rD6)<3/f<,Ou$L[2K+IE5u*TI:=O=2X/Kcui-\kK:g6SO+d)J4/I?q(qiqfucZ
%B#7=+Pq`CtI'i6OZ+=j2,r`CJ"G=la!S>I)%&uqjTK>:j[PH<kp!33FX*H_.nH6,Nf^-E;B3A8YP63$H`%UK4^^PR(D2E67j&$)\
%\oInVAb3d<JQGah`F&m><[-'5?=6/GFe^sl"eJ0IhguR[!k>@6;W*skO$2M+L-US7N=o>L-fp'p(kqB]Dek$AN6_N5&;7j;*jdY>
%#_Dg,q<4:ZR%KJHdKtK@>Dhq5Kb&E2dAG:l,8/"lK<YI;GO62!@#0Vo0e-T'E+o009YdGoQ0EE7!_rk(U_HM<)On5.#0SBu4t>CM
%R0f7\NSN75"O)'sFjMQ:"l:$erIkTG;>d-b@Zh(c!lX]#$CCmi&DgC%RKI:bW.6`s1Ik7BC\h\g.hsaURqOaY!bVBCX-.n;:t4Z;
%[Tp=m\Z#`T&'b=eXj=Oj>ek_AX<p&N!E4lK]l='/LQ@P+EreYDm)=Yd(fI7C-5S?>#hCsO0Ep7Jm`Yi.3%"_m7L%'g@A"1%$lCIJ
%!/V(&YX1JD$oVKO_rBfp^aWL!jMD*0.2*ZG"rp01AHP\<9H*<@"q2qt%VGm@!0KT\"/^V'"J+4rU!Uo'Ch1>mID\\&#0^ArTuJ^4
%^lYk1fEm*B\R*Gf6=:.&#(Is&<[mSb7L74u=I<fU^^uU0s$@"8bqFSUE'dqa(Wji,J[qg4#P=Dq=R1XUX)!C(fXlqI]/'Kjk=tI6
%Kb9^9Ddru!,B0[&ctnZVr657kV?Eb1L^'a[<YTi1*#1K]GWipE/sO-Y)qUKQ=:+_R>$<XP7c49"?Pn?."LbDC:B@QLF+IAQ1BO=t
%i(1>1^lTnoNB/:<,dr:F^<qAb3R:D+SG%+@7L@;a\6"Jb!i$T_nBia40V23[18b9;P-$0CUWnE31i=1^$.iYZSML?-7'66*7UWk;
%-&T2d!X#uO`;R[]N%r=$ie5+Hfs[YW6=?)h&]s$c^tbn`PJous9EQ?k<#7mZjJhns"BNXA"+G(]T:>srfgF`gRgrPG-ZZEl6gG?l
%DJ[*L"BN+^!E0?Kc09c+3UthK#7LW7XU?4)1\c"o*ADtQ'luQH(%cY1"30Gah0(hec4=L`UsXm=_eA!ep^W-E<9lLa0[lhs#L+oD
%dqnVJ"q3Y-Gtn^Yn'e:9^`@1QQrbVB#S3]sS_Ag?0ZjJ+#kGX6!-@m$H$N-dgoZ%Rg>F@.`.\9&gKq_A!"@ki6Nb\k4^f"5/08I'
%?S^lKl8!6$gj64)qX669Dodn7GM9q#UqWM4A^/Ykq0+Y);+ICU$nP0OlbCcY^EGDe?b(Xf30!TT*_IDq-N/)0A*<c\L[%""r1/W1
%-[',"`CWPSbD=J$W/L9Gc9oYBL$j0;Sk.0#b8d'B^W?*VEX"9;T#lH'rE<fPrAkar;uIoq/_]/MoEuQ!Q4s5V2j1Mmo/i1\pVQJ_
%%(>:D^VdLaEK4DG`,i[kr,skBSDk@VDmIYp/\^2U6_#$CS[loMI^&tfZE):>gTs3ScLei8PoT/)3/=#d7d^Yi-)P3KjLu``.jM!@
%O^(=)>a^#V8]Imul8?W%ngEVn7C&<5)PcsGk#YkkICVj#.rpp)\#YGJPePs%))$r_]U'Oa^>.7dZh\daeEW=CQZ[3`QH&%@NFp_?
%I%u`9O`.]sU\"6j9@t4=YDpL;KHCJ:JA`8(.\.u7VsfdhVXO`pNR!MB>3^#dJM.>MaNT"jmj/nY.dT![KqFoS9%eQh5q4MR^!ip3
%S\,a]J(A]ZG;&09;9F,qmTg5GQQY^Me&ndUXHM:eT4rX>Aur\=d-8]b3"5ON-fr4u]8V9\.=:$rE<\L90,Z"'mO#@kHQcDYZj+DR
%5[dK(GTBT3-3)3A9.Hs85ts4"J.s53egPmuJq2Q2AM4fZWcY0*Kb7L?YBLc\oG>)F3*IG"E40*0d%RSK;Ap=i1kOOh1]aWYO6^o$
%C/?>/Z#8`jC_u(=?*@BG-0TXuTU'Z1?4'g2IAZ>,?,i?m\mBDT5Tr-pmj$lR+mbMeP-:3<3cHHPpj+AX1t28H20)c=&G._!7iq[d
%@kXT/5fu&r00(lA]e];aW[$OjfS`7t^[HihiDM^F0B-a%1A4&eWuG`PJO@F`$?4`WU4us5L3a.E.Lh1Ip1hsW[ik$Kockp]c\/uj
%>90#/;a=;`jLd;B1+^:1qO+WJlq*u=ja]0=K5qCI$3l+?9\FcY1=i'Km-^+OjND5*.,'p!K\-BMj-766SB3brAZr@jPUg;uiJp;W
%(hKl`['^O2^%diaPV/36W)J7/lAWET[3?'g<WOl.=lmNP$TOF!L"#%90amC,FM3W,<S]!Be+GJRdWP"pV0"\5lW:"MV4_N/j/E`K
%db9>VQQ768l?'_P?Ck6,?3UJA&\#%<d^-$V6Xf($"'FW;4H]:\_IM>PZXaEE=`?<jWg=GG\R(\M;+X41?R+hV;p"[%Vfu8Ag4cC?
%_P6^mK_,d*Z?;>e@<:HqdL1$M1/;-u4-eaR)1"g).+*aAG;S>40Rhk5[!('RGnI\4+oRh!(RoP4jZ5D??aa+;EV"@3k?Y$3626,#
%PV_oSN>"?+0+"@B]@-7j*uQ?FPa*%j@'hpC0DF<Ej3#KuX^K]FJ$Fo'<Y>BJp#5&l^g@q(\^P[Q6-.5aopgYq(OTMm$nl_8Ya2WP
%(=RHZB!UWqOGpYPZ/gUs(N/H`6;&5oFU!IOEt.mRqu&k"$ht+P[@N)>HRRtg1q]KA"jlDK_M_Spg?V5FgR:$@%UK-Ti+l[JGTh_f
%i"WhSn2+_%V.0jgO&>-.1Ak01)r_"5XX_cnF;!o>0(cb(X=&LJ0nQn=n+=4?XMHrE@G_6H#Hm.K]5>Qba'90P'h!Z71\WMTQqC,e
%gMHP&k$?b61#fpg+9V(mGb,N9,/6,r:_=ZT7<-/5&dOK0X?H]]ZZ)!s:10U(.'Wq)f7e6hR>9jf]?@X%ElMB-Q:\`5-JSb7Q3Eo#
%\'(M?[=W94#])p)c>:*"eIJb<A[-<Sg;S!F:,)&j,60g]R<C`6mmOc9Foo:oKkD3uN:^V>Ap5-;U9j2=M]Z:sG*.g36/jV8.suOT
%XtjbRE@';7PT8'TrCWkKbr&%8)+01=HQh)([d",Q3ls"?Iq*CBa):Hb.F&pF].`3sKn,CPcEYQ5"b\oh*4mnLHt[3%%+[N7Cc@A[
%9,Fc^a"Ha9megK5]1e#i<H=,U8+taKLOEWlh.7Q$>Uah.l",Eu1[H=6lZF0=Mm3%*A),lOS43!.A)2h_JO&O6NEm@`0oL)rf4>Pl
%RcU?r>u$IHKXi"e4&PD!5_d8!&l!;"mCfC-392"1q5#mP/e*(m$Ck4b:)!6U:9;WHU")5BG$IKF=\`_E]"Bm7S-Q5M/Rq\P4Z]oN
%/M>D0[94;&a'I'W;SnuR0=8;QK,$[AX31agH=O=nnbYYRb9/S)%uaOjl^DGq>$^:==B9F=eRdO,q[3m(h]7SUF^AA-bZXa]:F2C4
%[;lUX>m1.0JRtpor-M9Rhp&1ES&5&D<o)ik7l[P%9,=100<DaLEip@^/d9`^`i;ZpLRO&-X"I+7gq0oX6GU`QB@V]di;*h^/q$^%
%%a(eE#fb;cP[5G8@qoUjZg,tO`Og1p>mtb<.QFK3juZ5LZKdUX"&'<PWiHI$e:Ua;R/ne,$`bnJ;jrm3WhKV*inU?@RSZg\[TR_Z
%[m2@a=`l/Ab+aeB),I:O(HTqG!7JhfDQLG1%87Zu*(mo2oIX?NFTK`P<7+9[RJWJC;]!LqL-mS`]&5JVp,ne[arln%Om4.`_NAj^
%eV07Bs!k!#R$_PI32nO96ju@e89N#Y#Og27FWmE?kG5['!"aT&eKm-e)%qm-=36WdSN<`&cXXf;R8c+&Zg=2](F?n>9:Ss_pPoJ#
%oSHP63Ad&W(o].V];jOL;I-NlOaH'2W=,D+brBhZq138i:0e2<PIYYt6:rF]kL='!^'*KGA^<q,"k]?V84b9?LiM_>'9br13H[].
%iRH[]j4$Nl%!"=1DBaTlcRYnG1:]6jU01M5a=28lpR+n1KheS98=9\'KG!Lh^q:6D1*MSPFskdNXYk.^:8l@+RVd>S&VH<#[HM^-
%,GPIP`X-dU(t7BS^4X>;l8NB[`I0/d#0AOf=#coj5$\e\275P([9];TcO"_3*1@[-?*Z@0=`H\oB8Vi\31hhdQ=[MN>DuN=+H0)4
%^H5>NcDM$N%AO<'/u2/R31hf,[aQi(F=B2VUO&@i=jsk"W6;P$!F!dI$d9Va"g<lrptjiJoZ:Q7:5#<Fc&tnin2&LuS-a=pB#r,9
%YB(]?\0dZ(:_s4q>D-9"FWi*`F"llWJhIe%\s*bjGG3MtO*)AY.Yem\Ik9K"8mOt)'g#@ZdO\s1egPZ4,rURKEdj<bXIa'"h%0dg
%0%VR>9q>4L05QqY;I,*$F;_&1"H4B)W@jYOkAqfsV3kW48Tg;XD&CO#19>(fKND&W@K@"7]BZu9G1@X"W_;IZKcHUSFVu?78[joK
%Z:L4)4(HIq']?<i8Tj:jUb,icLRs\dL>]qI];<MbKM>.)S&P/E*uX3*JI<U(UahMIM,%-Qnl)dW_U,3Yk%)%/*VXltV2HH1l]I0!
%[k!D"Quo6H!*kA&76&A4CQ,bgGp"U$7(R?TZ$XrR7i*4T5G'`^[gWmTK<\`CFAXTGg'FJ#`C;B#q4\;/LlJiBY6;E:Q\20Npi@$R
%6]J?Ldt/JTLm8?r/qfFY]#pV&=Ptod3u<SR-lKTmk5pI"l4U#?`UAKpK/)QK2_(OTbdjMlQFYtu\U`B9D\70u#Vhm<'>GJb19d[A
%2A\(<![V7)DI<oYGY;\t>[W<-*3SS8/CjbqR9M_]A3]\I_V3(M2N08T]Cm6kfQ'8>=H@_pQ<T4J(P4.R_"U;n?)n0\!4>d-VHcXm
%L396G_As*Vk/f1\gQceHP?X>^ABC!m*%dRTD9O+;cJ:5#*4aUus-t:"EOI`V+Vuj5HH9`N>XU_GU#XP)_[%BD*k*(`m)"bj+^n8<
%Nf0*e-;69LHPhsaR2WOP7a%3>S*aPG`44&nUD#@7TJDJa)_irF*#Q%PM[P/XUamlH_QM+l)(4i+@NVMd*NXk*'&k*,T9\f0I(7(=
%Q(/=#kCCe8_M/GK%eF[0L5U0rSD(u:$Rcl#1sT(1GXedsc@h+"^tc)H64p.aAG<rnMsqdlQqi:WI(Ia214e)Cmbks5gMI`3Vnhu:
%C1k?L`hRJr^u\l=AHi*N'ZV-jD.,kW]!C3oiu`@5>L9]#;eOmpXT[VGVS4?88$9[UgMGn!-baF%]Y*aj6<KJeQDe4)Fn?ZT\#nl.
%!Z0GBC,H/iH4.';g[/,f&&hr3)"L@G974Z+_0?=t'MKbs]Z"Xd54l^9$fS@:d+s:*F"2!^Cq#,/QZOOcFg;qK\h,I=cVAV@T,CFJ
%B"GrC3>D0TU>(9.W'iAY+VaJdPUk!1lCV/dVaVmXlg!IT\#?JS2=HsnQB_uk"i[ULOKDp#7I%7@/&,rh>)DP:[eL;$(2(+qn"[$9
%\SXe_k%L7=(=Z*j^%pUK_j,<C_JDj`HkV+a(5NXb*1b^t,<%,;mH1fn@$`o4XY#i7R$,a0MpTqHA@S,YG-U0nD,/j.ZIDT_$[&<k
%lGRAjPZT=ND3HQP7VI]G;:CfU(8D1jM6kk:%Z9n8Ze8gHj<L;=Cr&+4Y_I5P,"eh;;_1=e!p"@EA..$cgI/K+!U+)cYJVAd9>7+)
%PsGTYO'o4M0Plj'!kMX[%>QN%)Pq<Y>HBAe'A+MpRedJC/RmRPDYdOq>OE;9m'U:E<%T"OOk1@+FI]s$g\U<e[B,##J3#L<!XmFH
%nCGGW+]G)`etOMV8@P\.i;0WC>)T34T`u?u.\.ZUJ^9jo$E4jg3,9,*Zou,<luK<]=DcDZ>)PASdXW9P/HiWmJ2&31ZAq/_!=kqe
%bhW`V>/1r)*-9D/kH&^H>%H'YEm/F@>'TcAGWK7bWl9O-EP>V^2q2uHX+c.W@:<u[c)<LjX;8Rk]Md9<9>Wbh/Q.l?pcD>)kue!f
%54d:4VM$QCS-CneC_Q!("egf"b;N#\9Tbg@&H4UqK@Y3t#7)CMKq]>L]ME1=?+.:q&_)EV;uaGnBb<VNiooa9W!?f$bShXeLFh&2
%Rs%Q_2:ea@SWhSQB?/M<ab?)t;*7r*0'lMFY"hXU^Fu[q/p("F@EYm]c&Sqjl%P<:i6e8Y1^[mD:p)V&`pY],XUC\\Q8H1R"s*(b
%8r<uq/KhE2M_QtjE6BE5lt!KaR`ja676>>CA#H%AL<sr"=Uaqca-DGr9WlBB9?>gDb''\V"`DWm=+c2B@D&>.8Ob`8]5/6dL+Lf=
%K6A0,O&OD#gPX)jBPeRI$i_b&Uoc]V/<d9[=iD+QPI'pK53kU.c947eD%l![ZdWOHQ$IO.9<(66/(7t4Nt]k!GLd>uk+/>&c(LU2
%@kRftc8pkM*LL[[db2#eRUa;U$%5<ac<6IEj=B7A311=iEl(t<5:m^+^00?0qFW\.SMJ[IAsYSA:,^:)Zo2j4ArT\JQtC>2X)FS4
%']6,mnNo$i#UHt%1Z+LaAN7eJFE+1FSY"=fL=p9T*p8a[fm_nH"eJZgCR&4L-@L<Y)EXs=_-P])]+_lh'\ON_V]*#q@FDL=:s0@'
%'0V^o8N>/A-C,[m0%LI7o/Lp,XqKP2[`aT8b)/Fl=>-JUh'1(Z.GG@d0XX7/&=aVL[nmBB]<U8sPNg.lm<%HR-.&OG"e.'cCReFd
%(.bijYUc&V?!^9C<3cYgGMel__=YG^fM5m"a-;Gc)n#G)N/5JT;CshW-'<$KC^:MRjO[QC#2.sg`YS\ZA2Jk-GQ(]j<7VD!Zm;S,
%L:Y0JTKK4kr?)K2CK;!IE6$P2>FSls@k4'lVkV0-L-Vf]NB+Ec3:T<TMbOlXc7S_P)(2>A]es:@5.RBZ#M.PbO#<68FqGPlPq1#0
%!5bScY/mC[m)aGB>2#(U(S1p8pCm`C)K<$^;L6UK9\(^fFkOQuX9?bJX/fs[9sR)HQlAbDVGY,nf0&8BplQGD@R]^)@UW(7D@d#h
%`I`cQ2'jk>P_MJJ3ErjkgZd2iM.JH[_ptHaC4,\g9U.#CpThm"s3'8e[mb:ZC]FA1>hAQf\j6o5Yi\5],(ftI9#N08`\c%-9@JmV
%9bREsDr(.kHWLq;'LpR-Un=0@^h23&CJS`LiO<Vr6T:-o8\d&)7iJ9CQNJ9Z&)=`e:d[&qA4f"OC3BoEJ\h*qUd)n_Jm?0!6WZZ$
%A5LQW4:B-"k`":n6VgQGU]BeuA=0(/G70b#o#K`D&sfn:1VmcANCF5F<M9IiCi4u(1Rp8+0TOXr!qhAnJF$+gn&Xe:/B67J+:?'P
%b>a+i&MVYVQ/'X;p)PoF4X$98:M?N8:s.l=)6\IcDaUI+b%#*7W*&1sUA$l39(qTt3Lp4'N\qUd%7)Cnb*9XGnp=c<Qn1rW`I#\-
%8s,u_6V.u\oMEnNZQq:\EfshSQU`feML@/"],ZC3\rjQ)aJIHma-2B2'ceVlJbQ@gPjK(\DZc<P2#sBp8.=>_W@*M.ATpFcNoUkj
%\AMoI0LVXtFnh!`Fu=E@cRV5`A2fEH7giTVkAI"-M^>NS@0hj=+j;Y8SWPs\!hfrL_,c(!fA[W$OVsOHY1G$h&qGbriM.V_dndo1
%4"e+Tn0eI<EG!#+Cm.\.O!R*7Uu%P9%$N)7bl3W3\sfi?i'isMHq$MM(^hIRH]0W"doe^E;iY=MYWP2raM"NdoGgT$.O?uh51S:f
%'T:9ZM6r^X5m$K%-MX6Zi`K_j,*)3l`Z6?m.24O24FuVJPP"&[0b89o"1&i_=;5i7E!4R=Lm*)+"S*K%aZ>I0F"eh#Z\?DnnmY&0
%mXSr[*.4HiG.MZk=BLq[*)Ycj!^\1Z"V.J!cq+8)`)p/#J1tBEd'icRmP,:Y!a0K=e4Z%Pa6r&b80oTQ]-\8J1m`tF=&Yk-d0!/R
%q-?,Wn@NI#Oe[rU/qM,jTeL'%KaK<6\)&st6<=Uk0m'eI$\ET!]TfED[%!jX]$a'ZqFI-E8^[Zf,:,aAYrk(=^tM'E">0cLTq%t#
%7@8C]%RofCn9T.\)=;IN(i,4i.:s>sJt,XGM^4lDfhGrph0kTFLe8Jpe6_DhU]aG(bYjf(R]6DT@:j[UI)>u-`KI6ZR:^'IGS;;G
%it>j)rd6*oYldN8g+Y"ZK.*TQB1OX:I[@OZ?:,W*UlN_Ona.Z`BMT\3=:COH82CD><`D\3O"nuQ/JKH#`.[;Om,gFX/;6dMK-Ll5
%;,E*Xj:XI)$W7t$V`s_+0PLZPaJ&6TG,pi<Pp$EM"C,S]qi>lM&XUg[&13o3ehnA[BA):Eh$ej"Kao)2&4725!Z<<;VB@H5WJ1]^
%dmuNbKFTN9Uku.CNuq3Vk]"U,CEOoU8%qciCAq&C+e4bcr<">d!D+>I!uOer;MA^$MLYgI8$4%2!d0+X(P-.PJgI`?"TlBoZiVZ%
%2^i9?%n^)&7+,m?d>YCXfeljDWm``"%o:WI&[Suc9#]$Y`<f!Rfp83LeQk6%7[fIqAP2-[3$UGV;,$rk8f1_?,R>\TPYb?Q"h/+s
%%41=jSB,!XhBetpm*)%j^5*_s'h:nrquXATnHp#)\)hT&"6GK0/=?W"KWu7L6d9n8pbYLISV4r-1MNAW\]s%p"V8.'ZGDWAn`2BX
%iuIqG15)<0#oRT#WSQcper7Q1/mIh@A\KQ_d"G@d1+GfA"<-A[NGRqp[Y7rm@BB),mS'>6<sp=25l7Wb9cOFN'7E_FP;aIOnUO1l
%I0jj9dNl(mDinY56!F&Jq:G*<qACSiX@8RhMc\V(`>Bl_eb$hh`"HDa;NAF]@jE?bYYD89)?q+DX3aGgUgd_fK.#>p;m*C1g3iK\
%9=Fi8_chWKA]'*_Po4!nA]_pPWWi3PdK[SI*I0u9Um_uGOef4'_duE,T,hA]JIF#L`8cllccBi8G_%DKP2JK$Mq=+PG0iBQL05X5
%B,Gm>1cnqjRF*l,=&p]+NHbisWh\8A;I["Xkjg!c;Ml/-/hMOTlr?nr>p!c%`mdJ$?@k@KMIg+mgl^*JZ/BYnk+6dR\l^9.`4M1<
%3ml0ceE$*sL1s#1Skkci2*DQ9WJFqcc4oJiEJP&drGW@U>F)h[X7h@][3(g)/W2!9@W3'WbI0!"F''Pk#'iY-agb,u@MCer.$Kc-
%'a7k8D9G+iW\Y$_.`r]P*@8(LI]\4>Z1ApC05BPJXGIBu02VKSNKW?c\R&f#2h$4T\.fR>6cF2B"E=jLJ34f*qbem%3C,;u@1b+K
%SteTX$pOb`_IFRF#*!)>n@0oSQbI.IUhfO,Glk5YRNtL)RuI!:&<SWZ:kK\6,#mnP6R+!_G[>'FL#GnVK&.f)Lbj%D=@CPPP+8%U
%RP)gO:jotJb"1,V\h,2oGS8M23p6)dC^H9Cg>s_9:A!HP75'ucUgr?>%UW$E+LOU-]ohgTML%1UHj/PVTnL]Fk"8PjL4Z'FZ]L6`
%gukZi%UCbs+DYYO_@hCnAb+t[!(RY"IQ_753LUe9+"b]F!Y#$k05"7sWW#ZU1l'#q6qW%Nd"C`oUpC?m'bF7k>tbb7Q3<>mMYS.r
%mM\N93pn@.,,%$Y;FS)^/*8@eapi/.5Zm@ZgOik'9XI4Yg%[[N0Lg`])OSIRap.I$OpY3g<9;!A*?NNXd7Z7r8fm4#2@D362-e3)
%3h-Q!$="Pb3:uCOQ./ltl&ngu5c,A@i!MW;flA;P_H]U5$8JAf5]Q.1L#1:`NYE3W?'T4<b7J\_oQ8uGY0"-RJ5B:qK,iR+A5e"f
%S6m(/eO3pQ;+qZ'OLt!LOX.eJkc2EB4b\HS\0BVYA:Ip%*M-+J#:^iO&[\b%L_?I-U5nF>;1bt"Q/9obLV?uD\@aVf6g'*Jbpn`Q
%fSK+;a;0sC5n@+s+ehd\:8jf02\r=D.W)sQidaD$isF+-(h.UeFJ[UM]Z!PNG23UdHBiL5=Sg+?Mkia!J&[HZnlj99`:;-VK3iah
%!P(W_*NX8WcpL=aW2Q7jQlf5TM7j/,]NA3/c2SK6T.IE:CMmR;4k/.AI9P$eDdo`U$RP:99Hu'9g0uJ(.3ZY;cp>;ia5t^46%4"H
%&8*&71B9p4$rG3F"sXu+e+d1pXEfQak$d_ohX8L]9Nd._\0q=Y`U%la\up:FE='0"To@Z@8r0.uq+7_Q7;4%F&Zel$LB69mT0O6M
%9LV5I6PKn0o+=em&,ak@jO3Q)Y5I_8f`pGqobb[Na9eM4-$0e;lRDL'T"$hV*K\pILugN>bljUhAj+5NCm;f+4M"eVU%%>6PU0Z\
%0Wq#r(9Rf[!>Pnha%W2o.s)=K8?9X[4<GP*^bF\k6Y+@5,;G1(PgQ/'71%rsf[.ui[IBS`cMO=%)5tUrB(EP.D]iq^BJ?hkHDSX[
%U#SM,/uaqnl-L?dB,W!;1rP,J(uTE`n`"AN.q@'"!l7gNq%5W`4>ATa6ZW\m#FWpZ;DEX)K2VE=,9jXQJ.SaUZ$$>km/Y,"ZUQZK
%kpR-d20/-#_$U?&5]B"\h>BkPTjFBP@<aGq4AiuR9Kps#[D9;6H1\Vc>6_64eZ#sSD1U`,qVkW:bON960[K"tmC\=M%1sU':uJ.c
%;sED%@l?qg,P@g2o\kTuFD.98"_5W"lr0.YdQs!3j;1^l+,[([Q)K6=g-\h_^,d/Gp0f]NNWjM!P*eScdA\Z=.?mf]G&rJ6X(11\
%#R,E_bSe@91;Pg^FO8`r*gBIAJ]>/F^=q_;E.s\$;L!LCgG4=U.,j:u-ROG?+C=r2M[_ltplBY6fU6>UKf,*.D@9MN1Sk%5AJf,7
%9PX%<+jCZ[E@a!t+.f>8;h=P'B@^a1._Yo1/\itBSm3b*foCqbbhMH.@SrkC1=nrAZ)D65h3<l8C3ka[`(SrsN)GI_q#j3-9FF-1
%J]59iW7J5.R#K+k>j9pM`,$MEeY<gIph9e>mD@SpO[;q[]#l`[.\<Q23L[RQ.`7#af#E8^)uIk,blHgne?4<mIn1ltUDRFceKe2>
%EU:l6`5;%C\VB+_@WM%e\s2=q8+Ce`6Lm79;2f!:nHq(3RG%D84?$98Nk@e)"uBV364TMG9_pE$1BE+QP`?C[Q8CW/,cRsGpdRqW
%93/JqrJZTrC*mp2S#">(.A:Z.kANV\'RTpu/dMI&jJ]-<)]jEsIAt9j1os&%$?C[ZH@NHJ6]t2=MB2K[;!41FEX5<YjN%\E4;?MG
%La6BFp/'+A*`;7.Wee1rqJ&(O1NWGUYP_U%Q=J>79fcdK^_%2*'&AlKKeQUCMo:d75EA=<FNri`+%jfcF1+S^s+Y;M&$ki0`)q_0
%Q:Tp)nDQ\-jKY9F%G'j,4c'KW9kIDP<<>r4_[n%.-(uQ++r_.;`JJt%B"$X2i^c\Oo&5G!0@*<"cO@aI'fN>H`>F=BM9?YY/ObDM
%,WR5YT64,19#T(A)[=5%O+^%]5#KBFGpS_5`jMfi'IS>TCCoOH:m*kr)Ad,<6_-'`NQ7&&Jp/?6i4-dDLagj'//dEZLQX&`;`VOr
%ohtH!75:##TO!5ME>].?Pk0Q@+>uSsqLnJhPV"kSEsmWOKgHIh(Dot2k`Webp5-l61X3bN;G/=p0-(O504mZf'SNh0Vkp<ojKFK\
%5#+7"D\[:+F6!bNB6k7o#^J,M%$dRgX!Ij-.6i^MJL8V2R'/'hAJ_@M'd/cjKDgCW.S;U(_O:"O!]E&NG\3!+p5Fb^<\#8\'b%V%
%JQN*=GZ`idWdZ\*&VFVgH;GM,kUsrb#l!heqF,WBlY/r7K`TmRh`/)jFRJXo@`SR?nl6k[g%ePf>!>Rnc5G7?!dd8[#.C$X&G$WM
%7WTmp6j[:/0Hl7.#VQ1HM]rIoeCE@)"L2sB)huPW/H!dIFVJf,@uWHCo*ZR04"LkaP=j@=JN<rMM!ZlG*11[kr?J7C:I?kpMM6_O
%hIo#q"D8?\E/mOTM7?A[L$sn%S?_Ug*7?DQEeq+L(<H(9#8Z('W>Gm&"!O]Xe17fPjQMjA=Of$]q8j3fk@m?c8s@of84dLEN;7/g
%`S?G!$+q&n'3q4T%;E0L7ZR,>?5b;p"^^n%PoJ:-oQ6gD"$`$^OXX.qb82l^YF(&:Ob%9TqpLc1'BE=N?=)u35+tr0!(Q/Cc%2JE
%g"VbT(\YftOOs(\NC@5a5A^^LoTm@U(C/1%m1RjK0,MMV(7V2"BZ$WRXql(/?(j)L"A5%bJqalB&Ls%YqW`[`.5BMDTuN,",#`][
%KUJIr:69e!`%(,;5VYN4.[cc>Ob]HW5Y5LjJg#e06g2*q*"pd+X=r'lKgsmNP!n2oTkSU'TQLO#7@'qgV_WPFJOgbO.k6hPn1DL@
%jk9jaL_-qVT$'OLZ1P_3ImH`$%?tfh?X?f3M;Vus79@GPgX%juX:;Pu6>tsU,+,+dSF]-HRT>1&!Y.)S-VngeV*\AkImAkS?867Y
%4(0+?/q[mKIgK/O;nD=&U6MOu/dhO9Q""`'1"8p.9o$U+:ZuhP''9Qg3i[dk2:@04JZl(2B(C,qGX;oiRmn>g@6BHHO-M8S@]cSA
%5aE[uBZrVZc3?VQJr'mCS&I5G6&3`C"=4J.O&Df?\KkMBR]9>+p451?Z,ASg"HM9s^"gKf23qn]qhU&O@q1"`/E.E]'iQ;NV7B6?
%osdms0dK(pKshY'1gF<[M(U986-_!XYm(aQEea==02H=3?"(I1BiY@DCmcgd"9j6n`0EYmWnY;%P2%G,!l+o<DfQ52C(EgJ!r!kh
%YmVE^<q$sBSr#TnrA22b6G5Zk!2?[A>@/dReSURsB9HA>ahI+;Z-a.FObqN(IOF1dkk="4ca[4HI,hQn>5U`5MG\^Adr\6_5=C@F
%,W%),9#TeL3^LT1MnD+-O>7SDoKmFV/Ds^j!@MN_ZO*U?UMKCRBh(TTguZIq%:>6;\gEg^g*m?Di,O9ccJp072jMXLIuj]S'gI5a
%2jrZ.b18Ag57gt[5'ecr;3=%\F=Ir8^7Sa^n`dar/f&EVL$G8DELsbVdRt_hm6_o=:_br:)k^@<Ta5eZ#I,hA/QlNLHU=1#l6JT`
%q/$RJK>h:\Nmnf()Go$ca!+lUSOrgm4mIpf(L1XE82N7$"F*.dU)0$`!l0h/&p.%boFpcWc")1KS&pdSo&M(a&_%AKkZ1M>q\&Bd
%ULd%/L,"+3<Y6:L+;C+VZ%4=6kSV:7P'@*M2\<8'US$]g:'!s2Vk?d"O$lHZ]-8d^1^"qOOQTb<Le]%R1iK=TWL9*@8dJKU$,AZB
%Xme1?\BB\Q2ou;f(+6D'Z%Q^!38#uDhfI9\OD["+S6mb^+27$Mk\86t/*'2Jib9qo&**3o.qtp$0?09V6uPaC&eW^RV'>C"!/Wan
%ob[-8U]JT+>%&D9%69LKn$HXcTuIJ61NK<JS-[(Tk36:WVs?k_BekSd$)SCA.+>)sM)7P5a>)nW+kP=GKQXf5&Y#@+Zu;D"c;DVg
%=7t1P>pl=0Pj:J)@XIgEmPU;STr+(^46SG&&lC"l.r0d(g@ZLQ#H>?V,Hi7To6cQO+s'BkBJSmfJg8rD&Tc&FF2#aWPXHFhk%hhF
%$&>1sR9*4&\n%a.P(G?]h\cHr^2+P.5O)u++UdZ)D^4=je`kF40$k"koQ#*Y(++IM0!L\"7f[$@kg^:QBA',l-BR%jGU%0N1@A/!
%Ajcu2FbPTD1"-<A:eZ*/=OjC<6hKQLB.&Il5c2NYq,9/Z.$;b2p='Hd]8:/H3YZWk%0CApT#$O-"@hl8(1i`kB$3/7#oE;.:VCV5
%+pS>(J,h9VKuWDijObN-Wuc,SGUO(:3(%]ZL!!0K%jM"!ZI$Z[;&lU*V:]9dnYF<gT"XE&+NXsfinHS9E&$<$6LRQC]iQYHded+:
%)<>0mmpGBtNl)4.ZT*]g>ESoCSteIXN4XlJj1(iA*GoSdM)''9is@.)[:7'n0m+ig$S-CYLSm[GX$Gjq,p*;i'Stc`?AE;G@N7Kl
%":=aTP;eB::qZ*>QXB8\k":iLk75**20ToO88Wo!ChQ;8>>)'P^LSh!k;?>58bYpD!&X]`j`g&ee?@5q/XA8%du4L!V"B;[.n+&G
%U`V]-ju@TRlBGB>08LfD;]2Y$K3L@,9rt*C8n)qrGHJ6hUP:0WYgW@<F:g%^7ih09QGD\1fYO]"XN/Ld[C]Q-`=jL'`C$$\k<(H9
%4l6U=.&B^R)TX(op(+k?0k?;(Y1'Br-+UC!&pGK$";Q-@g.,8-Fq=!pqG<?@m#k)d0@/<.[MU6K99j!0!FTUSMMDd.L+^-$#2$eh
%Q-g)%adO-YU)rA"`Xs%6\R,C@<>f&([8fJm'-$[Z<VB"Edl7qb@+/5&,k<io01X)+:8hKa._C;h*_N&Mf#ncH&i(7N)XRNI-,X?b
%$tcRf2+);S.ru&A$mi/:FcfEIF-6e^8-kgNUJc(k;u;7T'gXQ#Hs5tPEQq:XmUMDh='`N1^^eGTo^7G-4J1T%bqi8"a-XYYY2T;u
%#\qL:51SMh."q:gE?YEYW=er83Gc#I$IgCfi"RfOhI';`d_t9.RT>s3;H$S:LDn?&Tpq`c@3-@%M;P:S5OEa$`b9YqR]:67e^hYO
%'lX`Ek=*@Ib->O]S/`*B`=[sd;Cf0W*#GVCmh>""#]GYl8o,iK#$03J(C0Z0kK9/^0qJ%6H80!nfVj4(btW3=;Fg,TY'OQ^K\8q)
%_O!M4=6#rYB"$!GV&D<1Mg%;`/;Z5(dFHq`##ZAs?X,#k9:4meqJk%!MalH#HSq)hW`ZW3[T@`PB*_YuM2?r"O+L3?=lKI%AJ2QL
%PtY/u@TSOFi[!N6bV%5+"AFh:>\QQRjZ>e"P_T%7/4tkH!)"?aCTK8A`J5L_Ng*"B!D^nj7r"J,0IR83?<"F4ka#%\bJ6n2N?q2A
%RXjNJ;B[LH7X7mu>pmu&d#B@;'bk*I)H^G31RDd,qB^K5O!IENV<uRWlr-`t,`&-+j1%-,UkmR*<si.3M6U_Xo/)l>bBsOg:?(Tn
%"P$mtU%"$T4c6ei,&2YNU=djgVGTpLDa@bo4&ANQ+?!+k%hus^UnbMa\"Wj5)F?XQIE-FsT][iOKGDDR)@B/!p[G4,7bKNK=#d@=
%ig3l$.gr7Y'iG?=JLO7!8#A[K=nM>;e:UUIElHfWk'`%TSq^S7;O'au3Hfl(9qWfO]ok@@5q+mAW3d&$3?i9<&NmoTI;5W8.!.3n
%A+a%kN[K-tVi`BVmA6OC#F^0I/kUpJ5t9#HPFK\h7>[5\VaC#dF;`BMGXO$92@/T4ZsX@ZgdrKBktA`D@jVh.H-[aM0o7Z^1Bq7j
%LIi#sGfJ/s!f=%""E>;+=H>peGi$We"VQ!p&ur2bWS$#\n-(8"@[_"6O'a.D])ut(McLsh(VMTR1u29ma@_*f,n2M8R(u[6$^+WA
%=F-eqp/DV:R(ssYNSpAn"`Ec.T1<b7b=^ha>L>Cm]S&t@TNHf5D0q5M`G$`D(6?!Xkld,@Ye(pi2"17623A-,R2?tkipdhI5nJ#Z
%Q[m88hHkb\-0s>Y;lm/c,DuT/!ia9)aG"UR8se[+=e$X,/0.*+2G2C?'J\.5dh#.8_[;Mb?O%1,6A[ZW^(R]LeS.+AIKQm<7pEA>
%+-t,a?m6cIDI%5eFhf5rFdB?C1Xc%kjJOjL-\4=I87\Trj]j7.LlRZtlkr=&S/Vhr0[Vu1d#F2F'e^$aqC(9.&;Zn62H9UE;Y;uF
%.0][&G[O;pN5Q`(_ebAuoT#`?"8`0`gu-0:lM2Q^U#u#*#TCU5nr#,QWQEd-le::/l5Y?8#'?Ym-7fcGKch2UI*GKCi_Ti_fSd_6
%_&)Q2RQJHS_2In8`V0\ET=CC<EpBRha-QQ?(WJKo:HdfKk^[1sUjsf&jNr"g*7B8!rbW?$m!<3#?1n5kPER*PgTa95q^XFO*lm3d
%s#>kcB9p/lg?>NUj]]k>7!^]p"TS^afjA\K`$kfEO@&Dh&ogj&Y)Vju?89*Um]*&cODsR/hmq*AP>:0Mj,*Ss:;/\jgJ(pl'2YX4
%@@@&5F!Hps$,(!0r5QaGP$FF=UkN9hoSCu!01:T.`(NK7XI%Z#87U'++6:H$=Wt]RMrVX_5D_)>7&Wq=%!7=SA[\=0B\pV5!1Ya=
%]=k,N:,o#tK*$1#H\h>O3AON=^g.CH,n`W)L*jbc;Rs]qrBj?VKKEsQD$g0;hnGm+KMMc25s.lQ-"%'R6H%R?(WMVP_EL7X*(`Pc
%X.f>_Yu%uO>_aMj?AZm7P\Q"m._up#4%_SCStRA/6Pg`!XHe1mZ"TZ$BVdY^,R(Z>I"@#cZONK/farl`8JHS[kqk(mRfqbtBrL_n
%:Q=C`BM=8K$PP9Y3*R8)03LE$TkS`a.uC00ri1g$b[>`YH%#ug`Bh!:\V[718HD-@Y(X+cOZJ=A2aAE:((bL"n;\,kK3WC[U&C\#
%6(,!1W_\/Mi^.mE)!kL/@1.mfM:=FW=e7ZY)BK<A75$Od4"(SJ;<<Z>h/u+EaZ:F4n6C#BOcCX3_R<%$/fm=W%SFg9$!cT'i=M1,
%OF[].eP7^YB*<RlVAB<Y&$Jg4\0/G@h+2/nd'Ka@,[r=S&5f7m&iNlpLbN45/VSSuBF^e*'*t7a*[`Ap$[\R\V<t+BUB'Hqj&I51
%!A?93Qp_cLb^\YVf+dEYV6aY6]CFAdN6"*oLI0Yp3I,&,:q^ZfZNJZ,2Gs<M*Psc_Ad1cg5@Oq>I3g(D`KoeHqZL/-#V]`-7eLb0
%I&LD0Rt1YI4`^nDod&CZTH`"WN-QkmZVUO`<R\iT&kSJ$L3NNX:"psDfo`4M-5:LF@_ZIM<!'fgVh>mq&nM6HDPdpI[H`<E39Z:[
%Q3LPhbWXsZTf+W/NQ%;2&p&5XcYsRSi<'[*JNQ:$U]R=bNg2!0P/9b1<>uF.1RSi#m(FdE5RD*nGPc."OL?pg&`4dO7#f4i.(%NV
%Q/HCJ]kdt1FUh#7,=d@.Lo#WK%s?'HSig/0DTR![[:tAo#*6b'NkY78!i+TPG+blDU@U`Z$h@7N)QSL"f+"OL'[&Ik@h&:[jILfC
%KC43BWLg[00ET`?ZBS&4a?VE:!6]@#+darj=X$#',&#0]0Sn6?LgaP>Hn7"ViR64bM_-Xl`=h3C#TSsF3a"eW9GECg7P@3u0ks9#
%c1qoag.E]OTrUgoGV=m9_AP[%eRU3;23s.8\KsRpXeFO?o2/aLK>?!Z@hsrc8>e?\-[8od'lpT1%4/A26kiSr@51.KrBOB)aDiNP
%<*.+B>[fY:2Ctb86:`*PWal5Zl@T4.)jeB+)(oqY<*U%g)QQ)e/"nftG`m3qGg-AkBX:c4Sf/9u.P=_pP\;U,E_FiJ(s=\-Qc9@J
%JK$QQ0>)>9G%$n#.NLN]gsZd:"Y5)Z"J31R1R0sM,Qtgf;3*P!!VUQ7CgsO^=qOS)C]r7n=s,.^=&Vt;f5pM;7[!IqgF1g3HR0;?
%8^e<#:0^jnCi#*oW]qH^Z!u>:]d?Q^!:a]n$#;Bk9Ii@8c\V[AW<B^-PbT)8-9JNO%cI,Imq^RS6/@e[feD!ZgPId]2@.N=Y%3d$
%(mljW/pOBfA2BQTJ3sUq?B0#:P@I2@;A&J]HGoK(h;M7?R><_[?j9sRhS]P+#d4BgPdl!ebF"2I*3b+d)G931c2IGrbQo^pfILFX
%Kbmpkl+Z?t^kd##<^Vnl762i\'A]kVIEs]7,fB[T2(YEP+\Hdi2</qu+@/Lafu6AJ)5>q'a,08(A.d]t<>i^nbt>;r#9:DBpaubC
%#W&0;qAeOF*=1Fg2\\cY9B\ebFbpkt/sE1.!XOmi'.#Z("3_S(9dhn")+h/fS#)"t;\NkA36'npiWB5c=Wl#>&ds\pjKTVk"]pJl
%Rb"BnQK1U,OH]a-(6?Wn&hlels"Gcuf1JD,;N$*5CSe<35T0r(AJe]E;b)ipecIABL"+Kj$l(edU$;1O\Q%c6.*9F@,W+VcSf5[5
%bdjJ#e;>g9nq>b%h\U_G*j?8?,,;h\dnCJ=j>)jj6ELTF-Si@5YY^JX`Ymd#Wi(M%JaTXZBk65u*2QFX,"m`kfFtTtBELqb8t1[i
%.e8J(."l'f$%q7+:;M;((:2!8qr#Ih^G7d1;@ZA/XXEe!p36[IB<eX;=-;'TiI\uLU)MIc;!fcP$-Mp3.uNXql72]4%up81gl=WL
%?E><<!YTR>>mFXmR4rSnAaDda(+U95A8-t5;ik&bAI\Vf&!NujfGJ)dm4P"L$<t@M]fPeb7o!Vg8.@I>8O]rB1f%(XJQ*>]r1p^g
%U-s9>iWY#d$d:RT*2SLRQ-^:4+>UF3-XTK)BhV!)*K+;c#Y",m,<QhSa9XAaGW]%jG>^:ul9ehd&P,p+i2-&L8f??u!YJR674-Y;
%`MES.NB!3e8U?[V;ms]80k?2$&#4a8QYCH4Dpi%P5_)-s:(bJif\%NNO%f^rVFt(5Gir1iE2am()*u?b/4R*(7OlPj#3=lR@:2Eo
%<4jJI)IYedO]@J!hO[<kAM9l:J7:QjZ\3EqAEC,%\)q:ZrOd#_bi=8L329GiJdh@MY\9=:>G=i778Lk+G#lPgF[S/;6<.Ld4)'PS
%.'XD&D+/8*Zme7bV%CrqLIf&gno-NW6VsroB4aZlOH(1V@KL=iU!Nl#;T(ka1BZ]+KI)c3EmgW15=L1f=iVT-J68Pke^om4d3:9i
%?#^0rM-#S]absHpb%8YFRcrEU]'>&/r[gfaB-tKABI,#1/+R_*WsDRrL72"'m%sqf0uZ3WMNkq3:KY,XA8G*k;Q?2IaNZ@aP(Ua9
%)+*EWPju[QOt4bCoQ59N(6a=8.gZb8-K5FVGB)Z@G?u]6B6aK7X-d'g;6d3URKgQ;^<B\E1;\d"ZH,'Qn`\(*J?R'.!9dl)2m4T(
%!_Rid/]?Y!WL#Z/?Sq5-cr&dkXA_5\%pq@nfO^/"7FMOq'kjY,2,KQh%n@qOV/J!Y9fVA"j.Mn"MD>AV$9:$\4$,<g:o@7NUC_P2
%dA]tl1!okuc,,3d%ci*X8OOM-8K]ZBG<h"8NZ_AWJLLTTj<_/1EuY1JNi@[rpJNa.>5C7I4HpUT%"G;C:l0VGlWf:uTb7pGO&[)A
%e\t0-L9JNY%iiJM<U;a<:Gc,il?T>RJ7[rT8P`lbk=f$O[TC$E"mT5l-D'Cs$9ShU"0:OS!u+<^7gXALN)\^CgRPm"i6*"b_Ti7+
%E@A0=Ba+/TU77'4?p):7kr^daF:iU)04,lBX+K0S*%g<CE=maER4Zf/N&?LK5gBsNcDB,HcKTN2qaV4\Tghs`_E%2VGoDTkoPhMI
%G*_pcbgiU&FS]e5/ma^YbsQVD/@3S-i=#T(D%8^q,[s`Y3=_7X^1.ZFV6/I4EiqE4n\eg+_e,,MYI>_**-mTmF`HGJ%$Ih.9B6b/
%GhCOQ9J7"&\bSb43@E1Dd?4iu-UlBM<L.Xe-6CP)bR'$,=dV4!9r3bge2DpG`'CFQF$X7CC4df'3"XA/M.7U--H9N=ZbmALEL((*
%C/2i*`#PZbk0l-qo2O.4)M38"b)s"=0W-.W>XZsJpZ<#Do^YtF<gVe,8Yegc__)12,9gQ%dH,?tXKs[m4A@)F[KW!R)UJ.'FFoB]
%Ae5P2AVgiA`$0bW8dk/1em+o0/%?QF@U^d;b?^"aY47ljFq^&faFMH:,0mJc$*P00g"Lu"E@Q0k@l-kn3'YeC>/HRM$Bf!bK.TS3
%(9(rNj\17m7:1mU0#`[c#)hTaEAbTV<YV4%0qfn23Jq;Q)Gk<3'?!9Wpo,'eI^[0H:DM/nZ/m=-PbFBf==)Il@1Fm0As01:J@]V]
%Ufh/PRMc(:,-W&`1sHqF3KtkqkLD,d*:FPu.q9Y!NGRUK(K+:Z)CtX6\7;GAg-83*EZC`dA29hK,a<ggK.0<TZP$2X89q#1].B^>
%9L[aCM"7bMS]hnW:u+h\:_(PQ+)^l7Tm2ukl/\OQ!=bM\9GIMAd,ZUZca*7PfS/PDDSY<[GHBbddrA;u<_as=JV9&M$71al3S,t,
%_cTE1#tYW=P\@q`3!2Z/4(5XG\nZLBn]1eG$>4>=JReUMe[#6!US3FHj=p-id7+m@*gh1)_]hT:*6,BAMEJYCP/q@-Nb+O(WL70]
%":l23j>\G4l8-K0#7R+825M.189P-(QS@K,P_W/!6LJig'8]O*JrU1u\H5jGefbk9+hPf<8!jhuU]s*p"APi-E>$>9#Z,G:!g&U)
%j+o%S>aE_>!?1l\(oh_a6m'ICM>U]_+33tdlSV4QAq"i_ON32^.2'c*K.Jt:EKcs'N#d]L7kDqX*=l&CQWNB1%#!-5QC-^JRWBGe
%^c:1#<6V3g&Dt\EE#eXu?Z*k+9)NQnJ8($5JT)$TYjoN=',]:[g<71JTZ6ST,&*Q%UOenu`^<6`faVUW1pJk`c?O"8R2O:pBYnHl
%Aj"T0M'^;(UL'aTC3Z6s`J11IEE!M0E"OgbQf>J1KQ3YG)!,Z9j'a(QcOsP(KebTP09-+e<tm<J[>D%P-+Z']017HD>TBo><-fLn
%3+u)#jAf`K_h'Ei];!8s:d&n0=WEWqk/.g6S5(\s=DSl9&ZAUG@`<c%(RM)[n.d?,`<5-g@$'B^_9A7%ikFr<0gKa>Z^'0<jbYe0
%XnkTL3,oJF33HL6KH/,%BNa>$.]TH\8_g5G<P7iNGPF!S9#M?b`kJX\jW[/6_u\9C.n/7"!N:_^%UtNhf#eEk854*$d,@"8'*s>a
%Y$l.sU_X,c3)=d-:(WI[N2,m[*Ao(-n_kD*S(#7q[?+O93*-'p43A%W"L4>h_k$TY3#kh`HNY:JI1f,N/N,_!U0i`sOLWY&9Zn_o
%GXD@Q=Nd,kNW@1AA9b-*SMDo^<TBkuL@b&$j21>%S@D(tHVY[=/M*FBI':<m8+KNrM&0:QWYVt?n480"F&KM"."T6PWSrN.Wp2;1
%DlP)=3%pBF$ruV/X/S3u)<#j,!>02W%3aN5_6F1UDMD_Z%uq3WO;)EFKB&oLr)/7ZmSNfF#"Rn8\;(m?M8=fPn0.:A4?02t;g"Gs
%i""_6^7XH%k@b#-+ue\;KD,p)MJ^\k0utdU*=`K!>Y,p$%dk4qGR4k?"$>lrL(0_P^^Y(6%?BO!nS:YAi/f%:"&Lb__hSH]HN>9*
%JbRhJlBRYD%M:0]&qda9G"XB"9^$6=i$(4<+&bo=7mJNEPW9R#hof%"91Pi^Sa4I$E)3_KQ4!&,'")/Ai)n4A*NI0`LQbB,\MRh_
%LS(6V8gFlu<:?Oo&=ej783KYcfj1?L/.W^(oO'-,^i;:t'Tid.!cTKBeB^CMN^M?YPuurU-6pcd6>R)5lP!tcK-\S%NP/L5"E$jA
%#943nN5.=gE.0/n3'mWn7)k:/#e7).=dB)K)UpU1&E"sJk847[]I'..aT:=5J9o`+;4qS*(G%rRp/<,->PL/5oI,>-f\_7".l-=,
%"H;jBA:WN%2pluI"THCA`T1$1C#g\gdi`4=6&GH/QR_Vh9\!Fe0YbAa`,f'%$^3mbMp-+]b7mH,o:%pn$tqKADgFN$1n][&`n[D*
%_'6Wk:Vb;r9+:`4WfW+VDjIs<Cq#@G0=AT6Qbg7AHj'5(_+#>1iQ=]s^aS]A^F'ASFpe$B=F=s;n/K*4@cB5[DfMZFNtT3acsZ(>
%+b%m;Pkn$?r$F[cG5`-ES&N6n<oQ(8.?;98pe@(oRK?.'Dn=VTIU\GsoWY$`b94Q&`DoNV!TJm-!ii+,ns`sq:)I*o2`um!-!<Q`
%du@]OcAMOC8RuFHKd+8d5Qt.m6@RC3S%;^Sr'h!,&si>F1b,>m(U?ZEP%Vr^^Yq=%##0aJVC+4nga2#?h;kNW299^57\L`%Ol%_J
%QnKVt`PF1LM;Kl"RElM\;8S^C1@cC/&gk(RI`!C9<9shb9m8(l$Q"r_bh6g0'nb#8()&d+,/9i8#Sek+UB@0TUU&MP^XH#lGV/A'
%M&7O-BS#oKL*l=mJ`!ODkI>HcL<S0\m5n$9#:o/1l9+@!%I>#cU$l/&p5QR1UXggY4*?g=C/Eeu,YL[k"arc,.etibo*t^>$3+&M
%2]['(;/,3XDrcS<CnV437Y+rHQ19k"!l]]QLi6r0-)t/Uhpa^8'>kBqR8BL;bS&m(c1W,3VMIsjd:?[On;Zqq.#;YM^iue%^m=H6
%,joDc+aoLkk(UL>_nAq2CCE2UhRJUpT*=W,`:Juh8M/WMV&tDlBFDpGA8np\m4J3ok0D2uh?)d023TVui"97Wb0:(A!r`=(r=[j(
%`>UP8Ci>U^`K+GSZbTDRF1+#c)5q-!hL%_Q(m6ggGT,)[UfM)S6b,qK6Hf(78;Dl7S*1ZAJTL[Pi8+kfTs(nUHQt43i+WD`c*&C4
%W("5*/)YrbB&VUjlqWPTJU92M_bp8*%ejRSNTG`om`c@oQOMZ=-'Eqf#kt3_XghI^h4%!46B+#@0+uVj,)rkOn_W8N9+J\q]igIG
%."h96?6u$#96bBt5EZ^Zn_Ug7Y/,I[,VY>J*:Jkr&Pa&/blT@[%GmR#P(p&opSOOCZ*R'sQ8C5Z^a+RY.'L/APlT](>1'1c&ADGE
%RPhX,E-P2'FG;!u>DbG-Q13%f8Xusq^/6$K3_G'DB#UHrKctieiB`mhEhN-dS;<dN^*Sjl'F2HBigP7[#7TU]B:VGY#s%"7%dB-#
%5S;oG=dM^SLi8U#Ca_'Q=\KnL_t]PE!)H`)JY(a5$;k>]9-Ac?:_)Ru>>i]u5fC-Sn1Q$#.75j6\3YN&]8:a-6%"T.j=&uV$5*Y4
%<l?q^,MW;/j'1"ZOlB1gj4hi-f-oZ`[4Otqpnicm0fYEqWEDk_VDF0LMMu"^2lBtu^gA4uEJP1`(W6#YY`V>r'(J[QSu\j$F2U$1
%bEBq6&`4FFA9f$/[i:d+b=09,6cnO4A-h'd+"?VP9),:Yn%$7H_RF;D)%>J.8ohZ?Qfj+?R0)][@q$E/h]'!pg("SKgEfD/&Zh3f
%K7Gb@\l[m<Z^@oAb4imh`5CF3^/6(\pa*^7MT'(0q;*Y6l_FTrV1]Vn,2aEdA=bQopP+Bd"pfkUL,mY3'Q^oG%AJg6148OI;@cMi
%mDd:]XDg2U48+Y^=A'm&Y1g+n,D=aNhD[rOUXW052YS4+#gu8[hXD=W6o1.$#ag4/hW.<%N_DF8W>5YP5q=\',>G1UOl!@D"u?AH
%7`KUh5UE'^ES+ueQSRfO.$!f8H/!o`br[RYR!59o^1DBgT-XMT7?i!9WXdldo7\]*8`$nK"S0i2L#X1Dl;h[ShB6nOY#h?B>HYMf
%GXKSICQr7PUHii=((oE5c="/]P"L\"OTB\SNfO&N^H4>6f*oA4J/lZ`WVCAH@"]J&Uj&$TXP,mRBIq$RYe+CH0UG4K2p,$@i$2tC
%"bG7!V'&flFpZnD43"k5eF$GF@TdA'$5bg.@Wk6kYZPKrFKCEt1!&e8bi/]0gJ[DIYo@(5R]-b#)^&2i1q,_aQMOKO565":YZ@TC
%B*A?s/CD$R=7";VlA"#ZmKNmG/WH'JP!)\ej:%t+-@!YZVO['V:V(+22j9)r5u-[)jPXVfh2t!rQ4Vl"WuqXhj#]%(8FbL1h,f.e
%/6jGS,m3=j$jYIi\I5mgakW"5d2F]_Cs5t8_JPWo&saIN9*olE.Q<Y[[trs;9No[RP<4WNn_R;>Q,.Bph!dZ>'sqh/gdI2M6-eL[
%6):-93:=_0\Wh'gM'7Bg)E5MpBHAuaDG\BA`O1N]:8p,FEtUE,gbcVlLtho8ic+(WMW"ama5j74-sP[]5Ht@M:(<E00Xu*BQ%d"-
%\6V/dCUV-N_2Vnar"t,/h1Wj0[FTesXd#rYkCSF=((jpY_2XVFYnMl.brVBk"U6pZ=P5bEK0'NuEA.B1S;0'Z9)S(XM8Zf(r&3Gi
%hq6krM*jfB/N]#dJX"9B)u_a@#`5;",m0uZ1:ihIg[%lDLa[bBK-O@6[lA'5lAo*1D_nMoBn`M9+W5<O;ZQQY'%<#/VS4F.S!ljq
%`C^,J(=NH)!4YH@l$GF0Ru0[,$W9B3;\_cW-A15G-gNQ&_$s?jLJ*K>NGfp_R"iDIT8O/0>@r1*gMB.Xbe1bAF,>1g1L[;W<K'Bs
%\:eG4W.8b:JK"dPd9m78%'u5K*^p,h=t6[tL;8dW.%Di@i.`p6^2PA&G:rY/"ujT'nKniO"q_r^(t!@.GG/+VgroprH\5aGUI6*V
%8doUC1[$&p(u-b.kXltZD"V`Zk-@opE+90S^PFYTku]@-_TLe+5>)9+M8>1=4lXs"JfCt1K#$!RoMi.ZPl]ZZN&-k(GZoXqbpC?u
%[kV98^+&T]WArmPDYVsc*!tFe<tUaO)D#(u*b2HeMPa#rDoUFM_r'TD4`N7"n_;QJ1*"Kq\'afs1Ks^"RM]"MJ\I,B,,&KsHom2H
%i,%*$N&'D9(X_!Y"=,C6-#^[)PcOrhhMt<,A;Ro=8%Nd\lum1h^(#3H2H-SGh8[Pb<Q$dQ/[<0K%<<C%6OF)FicZ:[*esg+j&i(u
%'t4W;)g+@Kg,<sUETK*cD>JYlS"R"Q8/7Y+ei"(R<6H0/G3!H4,mA.LW>8,@H-Y)TdORh4gh[ns_r58WgQ?E;#8JE:OU7I71$Nd]
%<1X6q8(!F6&_KL3fS0n?]bq8f)s0I^/HaW0q2Sp"M6@@5,-f]'Y720J2/\/O*LJ82&mQBI?EnG($/qgr"A+6s-IF"pNiL)6)U:ob
%$Q-*+;o![-cIE-pREeVTX>Zf<jaa%(m4d%)#-*Z8'a$-_9Pp$br*l&In?iT<K?XKX]WhTH=[["7%q30Q6duSJNBo1%-_\:$Si2XN
%UgYYd`u[8M:E/^Tgs&JOD7"o@1GnJQaj\:OVa6i@JC'3.m4d+ZB3<l]g"[!.)fOdf3\r_>A'\RWN?N"GUP]HYWF;OC9hH7>aShi-
%:l70f:66D%d=t_'ihg:AG%qM5L7t/m-:ssV[*qR*fgUKN>bi\0=97,iUlRJ4Ck6;hJgC)>QIK4JcVE!j@G0<^0Mfm>fsJ!Q?t%F8
%`Wfnofl0Y19;Md::1BDD6b1mL!MC?IG%q`[7;=_s4>MR6CBQ?T#32T*!u*ot9@Rbn$Q<>WpfqiteQkutc9M[j-#,>q;c48;24IPt
%*?jFG@?]T5T\5#<.Pr(jK$#jqCtI2;^bR`NN_X;W6aLJ-V['>TAd]/:4lQf_#9YnP6e+H.Bm&R0B;!pb$CnZ\n/Fa$;b]PYAnIs?
%&1]:e)r(IK"rUl.j:#*%g:;\Ilp3I4).#3.,beL_fsm&CZ4\aYJ]'k"b"`E7g(:JWEEQ[^lNi9d.78b_4^^:,Ho@eeJcW&Gb3%Z7
%XrE+[c%@&8$OeJR$<7PEc"YeZWX:mo6.pWG8Z3KhqGUr7*kaC.QnnW(=<K=oZ&*8d1utOTa^u*B7%GbSRn\q]AYtu6>>jHkj%:K8
%(euud.J#K#:,\oP5f.Z$S88m4MJ0oL7L:*"/L[*_4+!t1b,/G,8Ng6-J\7)35J^m:!dh)'al^34F_rhcY"_>p0\HkbiK@HaA@",>
%HlKr06](/CK$!/$a<6uc-C[o4V_JLlS4?fjGINrUPXnbC$'WUI[HoB#a`\O:k_lpU]EZq$7V\/AffWcnf@t8ME@tkaMnrq^U"Ks:
%@'Zbn+TTJhZ?aHQbTMeb-D2tf+4c%8h_U;N#*VbH?)%#E`L`d-Pq^m5H_LF51"e,I'oG^;+g2S^G7g#J"0-Ns@^=t#,0@J+-6%*g
%X-GBl6s`>p$_Z`A<?6L&J68dcG=ms5U<FHSA1ND.`Y01]2GTl"N(T=N.^Y&k1mDe^VBV3@8iH;RU1c&SZ@sQh`&T-5reiNXQ'0B)
%"q6_Eg#<Y`,rm8Un7&3#-mb@L8uu0XP"iX&Tr+`0kBHU+A16+nNX?'+8BDW;cnrinfkc3Gkp7VpqCs.N'Hu-XeRo47Rqad*2hbeK
%KZ^/),TF]h?W9QSlcBB/82bDSC(?@GP0MI<TPk6je5)@WVi^8XTEN@h'ItFJNtBQq@:)qL--cZ_82^sJ+qNCbSfZ/c,<IP,,-l'b
%+_:1<."2:kaL5Tf9ZX)"S>6?Va<i]n:(;r>9hVA*Q'+4XZ8bkS;:Yc813qXf68n4nk#WKY,gQ2=.8&A(e_4X9frW)dEs[p[T%8af
%'=(VTP2q:4lG/RXJ8CBK*REfAE7H^4Jqa;:F#"YXK46m:5fFB=a@8b^X7(WOCVrE5Y;.5i3[^(0$m;#cZHEOsRg%dV;']\Y(MHB!
%Lhtf'l"juDfha1iKPLmV9raSXi#mmo%W[\BQW-:0<^96)=!D2(qnt;d0t8i$6k[DP'!eKknQkSh+reM^]3@Z]9A!=#Oj+M"=dBoX
%]H_i\$mV7q(l:UU9iEpFWQ`G\)!kt^&66@lhT/$hBtt!aPCLJ&8%.&8ZFL"5;34/Nq;L8,>Gbr+=N6l)A>;QJ]*p!TFm-86U1CTt
%?"PM<!^)F:S<?TB8BKXbN;fT--Nh[(,o_;&>\P`8S$jII^a2T2e`;At(eQ\2SEWIVi7F&NR/X6^al_!o/X3-PA].tTD*\JjSX1i*
%$e^Yq8u."(09-+kiR#Comt<^JNlMU$hq>,74>se*:SbaZNZDgd\hY6e;FI[!@n3Pj[V5"q=VkX)G,"7lbI?'Lrg\q<Qm#Q5@jb7L
%'e^5`Z)(nW)HB^j@O$8\/mHK:k'.1qK>`M"$T6rj,.><$>9Gj%cFDLEb-\&Y_Bg6]$58,(96Q:c=@WRM9l!ep+(8T))Du&.fI1.%
%21rbXn:3"IF!;VBj#@,I$6'jZim]Qm@qlM%71_?Y22Lf\*,L8'Z5@E8,SDb-Yi5.ANO47Ee+#FhEX"F`<G<>$m>"1!<;s:D;EYus
%29fB@P0N7C0T_3X9]=S/Ig?dP:">r@i0+fM)MQ*S)Y1:Sg_C:n)Q#6&C!,4H6ii]dbhRk[it)Ts%OM>5#jJu-]abHcdkIu)3DAHQ
%Gn&(6>-CT;CY4[rXrH:Vr+.'8!mhN/;YRp]mQ,@sV,D$Z\;n^V"1uRDWVe9OY!_lmZ`*3:UhhoalVKOG1?f_1&<0,2Uhb51d."!(
%CDb'$q0Tj=nsnj`SAI!A<rS@m>fWGSig0r&3')B*k6uDZ<WniP>N7Ic_C=HGTudn)VUDRi6BJ6di7@B0PZXM$gDUN]2"lPq>C+bO
%U;WrJ%,MTGB:$Eb&j$oZ/D$=s%;KLL0fB[B7i?%^R7&``Bl07=#&,),>bk'#B'pYq9nCl@:q-"sI16`?j/`@#mPHb9Ya&qq1be7B
%cdBCkAPI=W%m306#YeJb6a@2]")\EUNDcB*C?8P2B>`bj@]])VAg&U3X94GHYnUu0FcoX%NM881VfI%*):gL7csCQ#f&-^OhALpQ
%YJ*>7J@0<:4Y"2b5q0Z3<I?ZdEf-O8l.$RDADl!eD"^=U&Yaedh%I;f6VnfX\Ee\:8,mZ5Y.!in'"8e,FV9>+!D1#']9Z9o4kR];
%\m<N8V&D&*XG3E.e7t0C0bR`+$!?R`'#7n#eL4gW"Mn)b-EV$><h0O!N4@)?eU_0k%BDPN8h32g3NAMS1e]>V95GZ.!B-`g$uf!V
%dlF?f7+e+FjIqlA:LhZu`Df3?jXB%JVc9S$c+5b?W=Cat]Ob'_&fl<%;4VR'WOhF&U>"/"gCUC8FgfMl:3[?!;J^..8gkNlg?K;+
%RFQOq:Y7q=\>a_3'2G+^@F2fhNGAFuRTc64E\_cRZ;E$;g+sV1b?X='!_[Pb[<bqY.Q)&R'"_:s;UaQ568`bA<]I0,;Ib*a$HgG@
%e-M%,Q&@pL2$UO]@q=#,8X)#.:8@M__D3f[cU\Ct7EqKS?&C4k)R4dSKV;;B_P)e'drMB!H)E@_,)0:7ed[<oUs?g$+k/W@0o3:A
%Tb^FjfZt_jd*lT>]dTdTdlZ)7-.Z@[cEF)h,:65""<'2=%fB4>s7RfBXNe"1QQ$9SOD)X3"/.W736Rs)4l[em6r66"i@>e1ni4-&
%F@%__C=5cW/[03qJ;6\ll+k_8KS""'e"N[O`?KXi2!tm3Sq[]A5-0K$%ATot\ei33@Ani)e^q\BQL^+=V30Kc=;`]63cU/4>7/LF
%%H8?gS[tP[-o7bub$Yg6S5)f0(.4SrHWM`YdXCEGen]6R#YPg7TiT&QBGrG<VNXD(DB%06"Y1OD1_:an8P>lDfMVIbPemluG!X$6
%[KRu$ZmiDIkubE@$]g$p1(Vh[a>EgP77j;OM5r%-5tpIV((&Hee,lMha%h8W0-)!*9*m6\B5=1o.:"tEeX17<dO7YNKNsUM9jW+_
%QB$r#PlXIsTitGhA8-"s%$MT^4YaJf$s+@RaAS3R<]UOe$o_:&(AJ'71c=F`&ZBe\W*.9-:,H7H5t[V/od-7f^mJRj=.V7]9PO<%
%S2B"mq'AZjC!.n\0PM^bBp2J]FJ:S#N06ZKQE)uH'20gbE",AW"eKJqF-&4OYuqs)2#(5GG#=3?lDr-2U.D3$CmkoR#jdT-*$WWU
%7.1CJ)GE!QcjW2YmKF5tU&\nV>:2GJO%p,Zf&3<%4dfH!1h.niP:jYG'cLu;d<MQGb/)K)0CHnmDD^Jt_ZpW/3]3TrL)O@-:X4no
%N.on,UD#MG=['2q)9Ta.\FBoi>'\L<[RG0:"!%WXaHgemOWcZQ;HVGJ?8o*%3nGaq&QU`)=H7"#LAD%f]1S;_`)/p4b_r--(ro=C
%\ZdM'0m?_n2!f%Pju(B=O!7T,>=`jHip7'ug(onad<V](U*CsT=YMQ?a0&m-F$MQ[*ftcN#9!_g)&+F:RQpribA_,k\qC3ZChOfV
%"='p[BH3m3pBVTS#;XnlE\92oD2'.W=Vn$O6^\9%WqV='6A+>5L,fl-2PBUB&K6[3`-`IG1s^@alc0QUJn=oA#S*<oRiCKHBK6_r
%3=M@Sk1Dc4K#S*Y<Oam#3!oeBTIB"hrCkB[BY_4']5tP#CRjKO*u0Wu^:DTJ\esYkkg%l[mq)N)=Rk;+lYPgV=:h4brR5Xs/UPl2
%p9&IX>/&YEaduE*bQ%S1klLhH3qC>a<tF`.g=`V-pO>-hcZnoJDcWJmm;=fWF1Fl?r98BAp@%s'-i;q/p4C!/`o3TDB;;acdq]r*
%Zanh*DtTRi/\Tl_Q-LNP,Q9RqFO9(jB/;RHEhP:HQ2YU,&%0u+ZaI,$32'ZVYqOY52_YtbN-'.?C2FE'/$qe3%BD5>N=X:Y_.*/C
%Z^&5d@e]>t>IMe-p9N-coII;P<-q`LXO:N)[Ck.Z^IPmBT.2\Ve*rg1Yk!7:IB_INn"/@"elIL5T[Jg7D`hcMio%&MES,/P2Oe?/
%$b>QHY@2?5PQl9Al\!bro;!\9d%!;c]kFgC<S!4/m9qj^]leM9HHlFt]?1Uq.LrL>hUuc1*:?&G*&RYre47L#6X(YqSabuXD)D+6
%qn;.4_eeI8=Y5]aYIN5Te,oBO(7`),2IDu^BG=eOoR7WL(UZ;:G>S%,fkV#-]aB1O<up[>U")/;^6SCIe/D@Tf"6^Nc/sXbj']@(
%=f"QP)Dq*^ZII\pkk855C=D9+]`mNTZX;YQEc\j9HZG>i_<+FOEg*9Rj=&VCp*^_NNcNmf7OJ&AT6=H;a^K(-R/=@^;dfljiF/m@
%MJ.$rS"/ReB=Z,eDK;'?b/7"oZ-IBTRPQ:'\N0*[S9(\f@e<GWMp4JUmIf;T<qieSl,mfr4T9c`m:B89kPek)\bTl2>t6@aEf/D&
%eZOo*iCQ,]5<S$9;[Rcr3:-BDNR$P*XW),f\\`=?Wj8^E%<5[WdY96PqUQ4EokMrcjB&PQp3+223+Y",nQ^R`[Z0B"DaP4n2rA5V
%h<j%pC\Qn2951$oe?5Mbe9]"NEtupcrPRK8A$`_[fr3Jp;YA.pn;j$c5A4pu4$766N2)-6K$93D+1<-%V/E1qBQU8]lH;hTeip!X
%"7Q2:d-W[9e\M*G0g0L"KoT*j'92j&fQAZ$A&Q^2fqH,X1HnlR`oj&=(i.r.BCM^cL?lkRH]<0=W_ZT3(e^Rc_O1PPWTY1Eb<TX\
%i4gl(N/s66e5h),K%aOr=gC!)8Q)AoI[)hd_eVVnm<S.G,u1EK_.^=:UqS=d_&Zi$)SO^0GJ?/:@YYu)Sad[]aiNq.hpGao,i-pW
%XjK3"KK.X)a7Bji*_l+5piNSqHTOrLag%(RW_^![fcT,E/LFdf'/,tfS)[ft0;&86`5Z%aTuTW.H!=tuNO\7s@HIGc\(b6U24L3g
%Qm48q+-Scn+V)*8fP2F-R;/VYYW@!/eS\>@169sGo4#8!<G9;&fOV&Ta#@<h^72dgm2bP:gYJD-bP)8`6RL"/a=h$>@I^p"+`gWb
%I3sm(^EZfe"CKT80YK!h]uF]6%j=R*HVNuap4Bu.Jao!peu6pf$Q\'<;+2BEQ\DMmX7[=Lp/gIOIid?/Z@d(#2P)W.'V+6Z;dA.Y
%L*mBi/tpF\)LXi.$aFhl<#AYGZb'1Nb^!6iTetbS"l%JRDPPZp[b%#9k%6KAd?g1.X*k?jbYI>>hj9Z<H+-pooafc9c/sJ]1K\K6
%N9-A3hoK\:_1k#e-QT*sri(>9UKdTblj!(%.e9R<379>:aR;t@FDBjB7h#JQpq>7g,m4=RT!h1KpA.gh01LA5<!all9AW/B?,?<[
%q?i4mkjBnS(#<u?>O?Sk=0VDf3]&s5pFk6GWZYTCf!(T?@:^iDa?KMNhuCot*N;9)7Q/tM2*P%(YAB=<1jTn''<+!n-?Znj$8\Z4
%*+=W#p`G_]X&+(T14"X\g-D[B.N29c2lrm`>FfB$6>48KUV44lXl?$\W&h"LopS"l<Z$*d>HL3WcV!6C<ZPTTC:i*RYHfO\g<fPh
%$7GLaQ#h7qa<um8VmTlGdCSk]hV\Hcg#eHS-d"t"co*P?-VBZDN/ROAie]E_qUnIcCXhPDL%[pf]L\VB<>]:Wk_es"j:!$]iAWAn
%c^=U(<"LY%`##8uTGi5cPRFaADI+SqPU_Z\pnCH0;>uR2B&\_(@V;5f*)J8b01r&UETHkmMr]doV(q!S;3/=B8u96=p"==^I8MmU
%OtTFm`f/*Bs-?]SEV-60e<f?#229eNisj>8jP_u\M=H3sN))rkf=)UZ)dFe?iPNb7AMR]NIq&r83::-R1k$+dcd75S(G>OS3@QbJ
%FmV<W=u9C6.XZii\i*^C-L9AfXD@QV=ij':]3+&r':h0eeL%?NIsY1b#\t5K=IZC,P?%!7]rDf!6LT\;h]B1$;W/;e;j6QM)#u&5
%kkrmXSkPmdT3sF6-I\nMB)Wb&O@#i\<cD!%GC<f>;mB/C=KT`3^pVbNc1Y>Qn`fu`@NJ$V/GGV1h%R^%`spnRl>/>e>FgrkDjK1i
%%[rBnE[?rCU$f.Rk#Oc]Muf=.XQ<nXV)`Gg9rKo+UKJCh9%-!)QfdYs9W0ecVpa)MgR_>b_sH8U/c5S&g!A?$DeFQuI@ma*iLN6Z
%6[Tb/dHG'$o_TF7]#4'aXd!LHCn1:$2<Va<`]p74`IH_+1@cUZ'kbahYKr]orI\uP41[U;4DCA_L[3VI(P3s^]!5KD.d2`_Wm$[?
%+\n4ND)fWHW72$$L^1?qD)fWi<bauUg2/gKY=`YNLT'4r[0F8?bs@U8A.3\&as-l,mu?Mb<5r[6r(cb#$aE9`UESWeI60@45a+aR
%M>_X-s"1ZpFR6b0!"Y+D=J"/p-hcGSrHD`NS_/FQDq(0,Ij\Aj`lA!N\I'*[cad=Y`gYP-7oTLGiqegpc$*XgS_/>9/S\>uZs2;>
%L]-@5\!'BqSLS.9M^sN>fKM1ImI"=o2mM2mfc=T<ju*7uXO+hZ(C]],<-;bSY=PrPeK11/:gke;ltpCp;UoBEX,m&02sNK,:@ARt
%.91956pkQD)\W\60\?72P.J-N`]I%]:"3\e2;(AlG2pH>alJt4H`,J3G&Cqj@e4cOGI;V*\,U8egWdS%??>FU\(Bi6B\/j>c\A\2
%-Pb.!NR+a*_nepT'MH?je/[$fN%-Z^g!5&IW';f^*O;,G\OAs*'1a'0ohASTK>nQ>HcC*YB8b/+eu29,%jS3(kT;W?1E!Ilh'*)Y
%jRH&Te7m+PTnr[<P*)>:qR6.t50+3MkA"CRa[GYS;7oR:0,)=J7.E$0]M'"m'?/._3u-6rU3KNe%.u7e`QJOZ5UVGUo-dq"-XU*u
%5G+'8+Kas\B<3s](DJ]GEC+BcV.?!mN/"kuNAk[J$6Wa+@1uYp0S)rWKJ2Bh2DM:f<VN^:rS@!*VXbReX?Ka%Zqf,[:H$6*?I2/i
%F.A>Z7UpM0OI/L^F$/W*CZIFql5Rmum#;Y[e&<LbSYKO>oVDkBBir:F^Hl41=F%ZqgXtfj2+^\edA$1^:o>X;q'.*sN.![4Kg_&-
%-`s'ghlOSJ2mfTlTgH1f<Z:Ai1%MAHGC-sZ*+1\sRTgMnjDg[\ce-8;iYgZiHM:ki#"G_-/o%]YaU.@OS^:X!\U=)Vh/-3a*3p<7
%[H"e`Q0/"pg8a4:VtGeQIK(ZicZ<u+U!'H,]gEK[X#6W/fK2L#2qMP5@*9?[NtG+Y(h7Zb)1+M9EWPeL<SB.S@uTbGGMM?Y7#s(M
%@uOU;9_9/84iWlQ1&`,)AXq*ONCk7&(]A`ih.pg:)XXHY<Y`)[\aI]1@;eAp->e3ADk8,kpTG*2K?]V0CS_+\lFgl=.n(JFC(IG%
%.O[b='XXcZ\Gn+LAq*kHU134m29M>j5jI$9oUGT%c&[Y)c=W=dgl_H.4Sg],Z9J@!<E`O[%N;o$S=qD_`<7u=m+sY:%"3nC:"VR<
%_rdpDM/;ptqc1'R<Z>@<.O:o1FK:q8\s3G[n"]M7%lWWu.=PSCp,3E8fnM8R9#1i4Uri^cLuE-7NX93iW]a^Nf0iJ>jj\db*53m[
%BB&DlO1W;2@TVfu&U3uLdY-"lp<!Q$pEq[(r^3-N_-(7#\="!_ZmHj-Fb+Z)'qC9':_iHs/%YLab,:H0guL"Fr+0bdR[]i0-E"Dr
%Bl6n26BfmR^O)EM+Eh&_e(b+K&"B*P`ofHc!J3%\kICr%RN1K;a19<3DK;9EEjAB!EtutbiPdk'<GKh?3&a1E\N0Bc*9aC[@e>_'
%YIiVmSR/)6[XQWMEu-EB5m:,3!b</I3NcfkrKsC3)gea+KTA.P8rOop@Yg#U3/cCt!FuU/);WR@3D!5"CST_<gq-jUU@(<WZShN"
%X-.5"5PWa2U8?Fe_]!_61U<(d4K@&*ELB;j1%<2'(0roek1>0&7UF2>Fi$hJK-@C4I=`N,0%Sa"iUc/F)TnmoL\\T`S.^ig0rtEM
%f5@E=pU2CQT0$m).5p\Z"iG(^jU>AZRuL$L>cIG$>#iD&Ujq%ODJV532QL)2Ee+*Yc)@.uG&6lKlA9[;\AI"n/'P]HkLTW@-0(Dq
%3NS7#.aWp=mHh<>lL%!p@5WmGcOcI+hb/?#DG`lJ;U)e#j*SKG(P*sF[?%.@GL>NCM.A<gP/4\LnrA]O:dN/\%6qlNl,u_Sf"MK\
%Uj:^AIiiboc#Y`r^LSN&9n]80-koBdU2U#TlT0gA=t$t$.f>4eTR8As@3PhKPhf^$2&/$`]dg@"DhsUR8fLM,X-D>rO*2I;nkCO?
%+W0HB_;7b+8o8O&f7lbu2;$`'<^Q\EeIG_fTf`+_j$e#UDRTgcNRiqVaN<R(_@,(rDiRiO0\IF9UCEF3E?#H:A$A7"hbYYHj7r)&
%j/>88,T@_'U$)<S*TPTjht8S@E^X.tL<mi].Xn(J6t`f5`mTBd&TbZ\34#BoP4(?8gJn5cN5Z_'ef=YO\=[TZfra@s<@4-53"AU?
%aDY5mZE*l#\>5,WafaIeXe%H&7XLQ5=OPSc7=9L_Lq$m=Ts86@bZt?B``r\(DWE5ahbVEPPib+*Qf;G/3W$i613)9#lb6uDNId)M
%*:i:60*s<YTS$Qu2gY(L0U.M^hi.J0F/u+c*D:[hfMNBX$--luNP.T*d2)(-gWeUR<c<fjO&>6%6"?Z^muE*Fd]6AEn[$'8Wi@.6
%[>2D`gct.A4s.sZj<>&=q7,S:0)@8K0H"K?*bOiZ?d':@l5[Yc%RPbSoGX;"G*P`.,<4g=SEf.iJHd@&of/T%3>QYBFOG+Sl&"]c
%\DEq&gHrM83T5AQGb)?HINKBLn+6hI9S.A3@E!BGhs5+3A4S6Z;=sj%\$MCVKoD]c/RN>^ZoZ1@r9sZW*q4*)r,&QaR/Qn";rhIB
%['8*:B\!rGL]-&_C8981C%c;fH<]&aT(U-mr,o!dDRXe"s3mu$]&!))>$*j'bh)9l)hXV]C\.B0fkZp]i&`dXKK$b0kO3MXmQk:T
%%pXW_rh'2]mGBge^Ff'^lQCZNZha=)e,?>bh_=;,(YYMXrPn^>le0X0RLK@ePM(ibB@Bnmaef!@Z^#1BRU+WaZoU(DEaQj&)KA^A
%gc5;=og*)/mu5F*)u\?"l'bq&YBft5*e.lglY5H"7i'COES\J&k%6Ok6sKSi<7EfAgp>jbqVV<5[7AnG+0r2eC9CK>Xo7t=WGVSe
%qr;bq1&LDTmZ3c6bN@YtiEg[GAIlgDWngoqoEN@ECT6(A3c#7#C=;>_UU=`^a4&e()s",NQJM+C#OB0+D(StdS%[*Ioi`mBXo7D-
%a&*t/i(meHHLn*T\@&lo:],K&FeX)f"+6qdHr0S$#IQ5*c^?Y+0q1\@fpD["]g&!WB3SU'prqXp90)UXmj(1uF69#AnP^5gKWuKT
%`q*'kUe1:;`!rIEFcnS#h5'bA0uU89qBoH_2`k7DkSs%%?SRrUXikX&C,</2metts4N,Fa+&1J'UFTOrX0AgJYjpqN[h8T0bFR$`
%iP+kss-8<.]*q3uq[CM`[D%-c+n7]2].aQI.,i;a"^rUm@6TcQ/c3A@PJGLnLpIO6G)*]T?')=5ES>NKjn_8]D<k--Yk,7%f4;F`
%/D$*IqC@kIa,A^uPL8R,30!hQ!b`:&:<Z^"bsYG?A[.<rTbbVtaeCq$[(ge3Iep&8o&lpO+-Z-XAC6u"g64u&I#I\_l2/Ssqd3?>
%]Q%+NpC;?g4PlMT2C=@MAC:>o8N@-A'WP@rFqYBNpp'"$<6VsT:(C/,InMRHfa0!Gnoue?,9\H7qIo9SfDUtHqWC8W0j1e09D2F<
%fhaX)WCPEA&ggpY>NC1?1hWZ3:j[ZT@85p7-d20n\c2HeHMc7Um^'__rTg)!-Hl'm\XkA(?QijiAmrt#lQd(/VbEs_,:?6bThYY2
%h@l%;`_e]uXs_Ec="i0\)rC2:`r3;e[6Ifs-d20n\c+)-@2]@BAoiSIV14upVP,Y02Vcu5g(8nhM/okJZ>*09mB9X"(Ya_ig=%At
%$mW&]%qjRD:6/<!M;o/9a4Q;K?R;Nsb)Wt[NH(J2$dPOU8*?D3FebFK,Li/b:Bj<Mdf!3>p:pAs677ZT^u31<&p^c&3GDYIq4C*D
%#UsX$fja#3VgKEWid@1Cb*n=@qdC>R`[B(C+@g'/KFkA?>gtt5Rs=N@jcdVS`3D$=G[Ba(Z\FqpSrXa'3nY)J@ji,CrlLeNTD't\
%2b@K9:U"Ygft</?D/Ap&e42Zk?="J?nh#H3q'!aM(m\mu8!&2^I6[?Qq`'V2X7NuB9LPTL]k1UjifJB,fDMehlC/.f=VIjYFT4n#
%*ku+q7XgMpl[?ea,I:MXZN"$D7Q)AW*I[L/LrO6rGi<1$*'5?r+A'N>!-K*m<G4;N-kkRL4G:'fT0+%OE>oAeb$Z(JYdkqQDZ'g2
%SsFPHh<^*qYdLfQd`7F4TlCplT[Vq^fn"k#B2>Hche4$@hc1k]Zg(9VKo`beX7r>GBK*\D%=R_^j2:JiUMn\?OjUSCg2XG9'V,]?
%=a_$Q5L5gYD#QQ;kNk&&I8e@_q1[*h]=H]Za9H5URDdR0k)/8$ekCPTidH'jX%':CIOs=AGr'g/CtQGbno&7<64(4V[`o$50=Uc_
%mD^OLp$+!hRF(J;)p-BEM9d7`cP'Y2=+bI_@s/MA6_Vd5glrKFr0tiqht-V]@K0U3\B`K_Hi2FVYN:[t[\9,I[XWQmqc>)qcuXG&
%NmfhDq*XAU(g_)&7_-=u;i^irg/&0@m+SW]B]&K].-l^dU(Q"kqrM"kdV^0##D>+^2udb:^]'MdO=u!ZpV7cU1YE(3B0pgS06!;o
%PjGk`q^!r>LX+i9*&D!.lCWRVpI9M[f?*.FT@5-W+*gF7=kg!Zm2kr>j)fDA%bA>b>Nch]0OH@I,b(9-X_-.lY2dUhbb[<B7/jm0
%K?G&Ia2P\]L%&V\I'\C_am32fE=mZ?F76leX8-p%lmMg2#QG$/*02kc@KPO-Jeui`BbZU/ERh^3;-ZA*"`\C>s)r.+i2*[@q)(,(
%UNeum*VVc`ic<g&V'4Vc4gEP6Bm.L=AK]5F;>*5%SdBi2hd+HTbK:cZmD6EoEjjiY5A96'R>L/V*dQC4haIKeCl;TJYKS4uC&r=2
%pGuL^=Q8#``O/1IR8$Rn`nEoTpR_?NH$2=c&)!k.GElOnc"DF7nfRl*IqtOoIAPWK]3t*mT<!FC#00rVo]q4;cgNj$#MK,1hJoo9
%D)#t=D;P(JP>ALY09(OG]@V&Vr5/1%^ESp5bANGhIjGWSFl\VLTCt4TD;=FV'iCl!8l'bb[W]3nH+9IQ7E^ZVp/s&`^M+$/[de-A
%cD&+GS$TZVgj7E(*k\e+euX1Kq0U?)-PLU.b*JauDr'Op4lms=mH+)?U5CV=T:P6=huDBnol$JE.F'F'%qfq_mG%9V^Q/8jl?#+#
%e"!ajmI'+CF0!`%10)*N_#=*6DR;H/faFFC9foDFNLBJ%i$hl/TqTHjhf;Qko8doA%JoYmC7h5S6l2,#7[9PdqER%?U2]GElH97o
%NlHT>4#[]IKC8^E/:ZQ"Lu.DU+>I>\c/rI-Ons"?S+X+O_#E*WF0VT_J,?D](uJi-P5!_5c&8oe-XJXu\Og8+jV+,sgJg\9ZTI#C
%*JsGNG1(Zn&'f"K?`boKS'PuDef9Otc+-S'&"UmHbr[_r]Y)1]1b4I]H.PX6m^=oMcLWVONC^ZdUW5F#4WE3C->DDJqQ/<&3BQO7
%?foOi7Rj?7C+5!W(82Ea%B1Q+lpfttp7$]S<[M^4K9o10n]OUEWCE`4Qn-ZuO`fG]ES[)6c"(;3iBcj&UU,$ofP/pf\d*uqAcs0G
%I=>^=qa"_-/&/41R/KL(mq>l(TK>,:enDP:(lupXgcB,nCK[<!S)&6@Dp6'jD;fH\XZ^Up#L-T@F7\U$fdbJ1g0Q-gP'7EA[@LXU
%[c`=TXa[b8(c6"I;#)#JPZ$nUG0i3^p1jQWra@n_m)TtV<#Hf!i'AURn'+Y]@p</?p!:l-!tc7e]tm1IdG([4/aSoQL0ida-W[6m
%g"Y2"E+[ps?IOqG1Fr4$jrt."5<QKV>C;2^lPAC:bf]`C\<3EY[]14A99%5hNW+7gHPX25Xk2nuH[dqh0:IA$CA5/?K>pB]h&;YT
%`O`KABQlBRmH;`H_fe95`Ng]Y3CKX:-F3R4(Ys`'+7k>6gpD[^e"GC9L(7R1:b/J>E`]7,Ml\i6]68"3K[lYQZZ17M39E)<_6_%q
%5rQC%\E(0ue#I,g5Ma!HpHc:/r14;pm/?dAS"G_//5C':2Is/M3lq.,a3_T-IbW!4hZ%VI.:1E^43mfXg`0jqSULN-BCiW^/7*C*
%HF3Q^ZZcClF8tG=l^c&3lYM8lY'0ih3oKs&A$C;lV1*IjD*PSfqI[/ufeq^2^G#="J"?:WI88A3h/7/5>BoZlYoU@*m.CmXZt2JC
%(5hi+EqfPSPh,-:Qs6BY:`OYtmhXO+%hJ0GqDHtlC<t*_4/4=4oeC5tZdu%>fXtinR&E&p0tr-$Cg]`_Si$I`[Z@t=<4HqC1MG=E
%l4%g\=Z;dnk)5(1pD-ft+1Bp90YY]D82cX:^K,aF5rR3,*-U39ok_NK_Q'oqh.iP[jWTbO55^bf^Tn]bhJ>Dm%'nK6d`k5gVK8@E
%NYgDcmHb"G]p7\Wh;[=!?jbo@p2;mJ(<n)monC@@hhdq8PANUPf9PI$h>(]5>A\8c%eg>]b.F^NV9Z,Q47X94>@D>Uqo5:2^n<Z!
%rg5c"@<G`$e`D'jFnqd"1E?hgV;^a1<:*+<@cFUGA5Gd^d@7=MM-<$Q7$[%$41ZW,rNY/3]s[NSHnEi3lZ:02.t0.NI.ddqf/qrL
%8Yq<:9^d5c.ZRN+e'46T>-#Qs75LoD)Z0?>^6tUfDLUeebT@s+@Q)#_^=X7pnE<?RI:U&3Xk)BF*Gf6qh)hB<03]ZJrFVB6)GdQ*
%8O*hN^Q9e&eh\N!H!4^\.B*#@>f)8FeD46kCj0ZK<TgFoD8lP7'+]9[pZD2h]tJl=H[B'/\u31`X)DBI6hS?G1L#pMalUuCc/c:a
%c&J3r>$K8>c.-\YcS^WeWd%0a_^8a'0VaYTG(7l1hiaK#)qj(.rk>>6oa3(I;sGE?m:X%+]2SY[%^sZqX&q:NR`CD`D#;h1Vg\BB
%P!7L=jfWfDO(K,b.^V/uZ!'_]R)a@iXk)4P-K9D7gMDk2ET/"8lC_q$U+cmLYM(M>5o_q`="Xs.fkd<mleGNXj&9g*Q\bjY'*];V
%mi3R_QNlErYBFrgdRQC\AmImZS:/#EotKX8<oa#JN7DUBfl-8"N]Z2@]>eZc^?F'nZ=\<meS\Eef][7\#5aC41DduMIsfr1G&Mgo
%(BI=3ZJ"VUh*-@Xij<m%WnjC-kV%$MjkeR9[g2Zc7eu\"CsD?`#LAD;TC\iCZ.6?-*ci+po"dEZViO*FA?<8CF(2P+-K-lMh9N+s
%k8>l=D]Z8E5Fo)F8Ys[,s4"<D<>r6u,sBKZXiri-h)MA&3OId[%H+\Flp+6/FWj5^^3(AWB`PK./D,Z5ED#&'`"*DmAf_EP`(>;q
%[`1[^40fWmZ4W^/BsZDS33*N7X]?cDS5laoE997R\N%WH1j],L3j:/2'XjA9[0OZoSQ351cVtI/$?&h9G5`g'.Mq"'\9YI;)9d$,
%cWL.AdQqf`gGsE@6bWKXL7OP-EP9oKR[^>]NYObSo,B7eQD\kOJ%jCe@6EN5[;\B]^>k/,KSnI6dlHH+D&;q^fEND3c=Iaf]8]LW
%Dk?[1:ocU,]#"YYnp;@'^E_:gj4=4E&*D%R1VV^ceU"p(g-7MYU$Bo><DTQlgLEP&Ea7Ma'h+=.7b)\J[+-G&!VK<bI.BFoB(o^)
%Zk\?RqPSI#CMY"l438STn-fUK40/$)lklh4IG!48D6QPWeK<EEF8VN4DPP[cL6ki=SU"i"gb28sZi0%t(2GGpQ6J8IU,d/K4m>AC
%T1O)mRI<*i196)7<N`5^i<>/mG]Wo6WFAq8ZTHf&oAD30k&D'nXGrlpL,c>Eg">Mh7eSJ`AF8)W5(G;R.uHjdU=L[8F`hK%^ROVu
%AoG;,>g;r]T?YpQ=P#TI2i[C3^X-l%2fUIqD(GGHa=+A9QpA)LB1n3q8&%T'4Z$5'JT`Gg&?hhQjbp1^cOqhV\K</b<HssR`jba6
%PBfp2O*ai7$q:14>-@Lr;Y?^1Z+Jst8sS)e$HRp)+\\];WoLT4Nj#q#I/j0:k0>I;"uCm=lt01lf'"u,fc6uj3hVf+=n(VCfDaK@
%G&$s[C`(jgY2RX.b08K3_jmkeqY6gn$F5Fh;sJbtAY1p,rnWq,8iQb!4ffZ7RoulJWFZGhrkd9KS*hD<YLSd$C5%^hUR"'qhOp',
%_qLcA)f7KK/SY\5[<=p?qZN[4j5?Tdg(^#Ys)<#q0>,_9k2A55R64WEQ]8Mmm&dnSq$XV,[DU92_Kb3=kRG`@I,sY>S%[Ch)>gDt
%Or(g_I^)[DX*_V/+1uK/]P9>(3b=F1[3^p/<Rafn\X8X30:o#C1UWQKjN=?!L"BYS:'3#Ce%cjin`"X^]\L;-Z9I6,fdZ6>Cq[n:
%s63Mcp7J?-/&/sm1F-p<q%uc[M=:>9QOV\J7>8B-Z?+E&IP*Zf,W)o1]:J@:j,950Te$\l?S9s.]U5(T@DV4;emqk&ij74\k*QbD
%O-O"sB*UVG0^5`H=:suCij$um&4:rj$K];LT58^J;0G2$(>1D@X4uAZ%=^$icMH`X?m.-_T:FHqA*fI.[.S7YltN#d*OF2IbW\qU
%YGL)9IJ#XpJ'D'b:?^F0X5r;U"\R@"NNPF[SZb-G<M7KZ=P2t_2]@;rNDIgU;<.?6'4E=S5<`t-[OS[A'4*knda6IpcKlbjSuJUZ
%YPLZ+Q)@6`,*n^U_j.@*HX#5V.i;>)L8Xfm*.PCZraUA]g711LNpiW^*7+!NBcS&/k#sSQ*H*I,lA]jsLZe%X1a+jOZXJNY1<*);
%qAg;%?8oWBOAo=q10Gu/HMLF`Z,RK\H?tl+c!7#`^RkiLS8YQ0'GPZ-6%SRFb'C"K,GmbSnJA_Tk6Y4[l5k$#I)&]BIQEuW![$>d
%NC!0Tmc".7VpT6\&iSh\?PFIt/''<1aNlO0U8X;@I4n$YNbkQ[WA;]oi<Hm%gDN,o(om--8h3_X#+d"!B(mtS%\CD]*LZ0T=s]1B
%bR-"LJf_5/oA<]CkJSD*G'<4X^+TlVP!*bb4O,#B[B^H;]0D\?llL=j#:DOiYB9JQLbLKm+Y:(Gm2+??<`YB&3IA[[R0f5Gp%lA>
%FR@K8qt_s1roc#mI.f8-ID9d4G@toDHZf1AJ,<rnhL"Y>B7bobn(rA6GEB9$YJ0t*4T"5Zp\rBh-O68.J$.D,rio_3?b8'nYKoD$
%b&3]%:[UCCSGt6h9\m>8qg$0*I^mnFY:g[NG<>3YLW_nps-cP$/Db5-O>iW]7>:7!X*5YhAj9P2_I)d1Z+9E2^Y\+VMgf^D-iEg7
%._kb$o+lf2jKAs5ci-6(_sA(Trkh(.p0g&[l09;eqBC:1K.HO$2mQenU"7`b#FG1VqUnY'T&T<f9<J2OS+r8P)D9?#TBg,SbdmZ;
%rM=,p,CY&t?g$kUn`.Ymr6WOaQ%k4RmRE8P8o)lAh4ejQYAeu*qq[ghdBCs6m_+SrcIDe7Q4Feor?jg8o+u>jXY%3\fY;h6hVpCG
%qqe[JmVQ4?p"T'2Q%t]m+!:?oo;hD.qUt8h"4n?dlau$EMSJF.?i'/Uo>`BUq<-'[#FBa\UZbQj-[INAbHKd9qV:)Th>JG!Rm+qH
%a+)ahke`\@g4e/PI[.de?SD)XY;8=qDghRI$ZUGmr[;RIQ,gXPja/RXH0Q0Vkh5k"0.YB?(QLLh(4TZj.Il:ZSTc/,rpoCHL$)Z)
%bq._`3?@UKB'4A%rdK:ka1XS/B"Do`4]m(NrNWkVC[9!rO2&%;$R7.9m5'\[gpun\[V#4s0'me+%e'F:J)sfI4l1Roe@P8@f(FBj
%:Y`Q(J(fjbhg9DDC#iV^h#.*Gk2)lRp$4gPHEhpqcD+SOlSn6TQ<H@S^d5p9Dh";'2Vk"bHbXIU?bCaOl%csAO12:tnc!Ipb9QJ^
%H@)LgnCbJakJlJtj'S[mZi9lAI;pn<q7#INXd(Eim2"H#g\tYD]Y"is2uDA/6>pqa]tTiI_aKphq,-kP-f'LL_trfo`I$J8K*A_C
%GQ$sXQ&UK.DLQ>GHg\#N]XYQLj3`n;*rX=!r4,">eX`a:hq["j:Mi8m:p2Oe%^Nq*>H6;)H8NF,:2,Jh^%Q?DIeDrpO7d:tdVBih
%d^rWsS\;AunD!U6fl#esNaC&>YM\_Sh+@+63=PKT9RU[<h6$PGNTI)29A]?$qW0]+`A;_0KpW$FDE/6mZTkjIX'`QLhQ:.3I!`SV
%rTC0!qMeRk^T,Vn^%\3a^G0r?IWME0Vs`oTrEORDEO5(/%kcE2_j=4`SGD,@4h<BHHTcQ0pZflV<PP-^%j';?]r_6?^V.17DQ;T^
%GobLdr:/1@qG4<_m*tKIh!=XP>M#2,9>=39YMYi6?)ldhqfoULnFFEMqT?-sl2'GN_hIrN`oZsfVa"J%>$mbU<pDnf/@=^./#tu7
%V=Wh\rRKk^WVW+PNI1>*hr!,+A)=qF):sB<\c&u9a,BFVIH/lLp%m7/K1kn)XWO1bGIri#I;d,N=PpmdbK"r'g&-L!a3E3Xl[p/5
%_l<K)j)Ac0?u^=(AoW-/C3K?rbGjf#5<2Y`rQB[a3NJ.o;nflTT06d9r,CuL<:]\(m*tE,S[VN^?>9<kFgq+ga/PokkNc(@It&G3
%Xh7kP:Ha"#nCc<tXjphEH2HdMeB>\/(K8(.fo=i@[&9eXYLhZ-D<tnrhS-\_9sn;>2qX`dGW0cLQE9"!K.AUMl)F@4V<OE+VqpU<
%Xc:r]F6h5kC"NA2R1<m-ldNt)UHe^p+1J_Wmlpd@lh'bs8'e%SXulBUT=j$m1VNMUk@"/*LHBS+^J&"J1ArggR$qoo21!`rSb;sG
%&)Q=Wfjgm@c^/gQq_JUAQ_pAQ[!h2]NMW1=f7/:SHc`hspqrr4rc8$:qY'm.90YU(W*`_3G->.skV(.c>.snr]_)+ks3@Imo=#cG
%H@,86g82fkl/++1Y<LgV[.d)jnC#/2_>NEkmDD$=@kQ*?H2?Umotr:u0=t"!S]fDgiVMXXT$I7YH-t;O^\hL6kM==^O7->e]H5DV
%^&6('i6CB@gNt"qDgc:fQTr._A*rj'p?)?JIB*t(>hRm.H"MM;s'R10Vf'i9>'#1_\_C;TboS\4+F<^*B(aDTBBI1WNB8r2rqp/6
%VW"n6R@RsbgIu8Up&*%mgst"XB)8^oY08bA^:=lhH8g?8p<U5*?<M[2%Bccp>Mm#tp@cP!Y.SYs*aJO>E-LutG4`uN/,N+ChHq/e
%h>IY\iKYMRe7[sRdl4U1)Vpjqo-#!qhRe:7c0T2R7aAa3XO#,)IG<DEh0O24A@B287'hNba&?'C/2fGjhH[Y+Fu=a>jN";crSF0]
%qV^CSs6A>9hU^49O-X*ZrM*SHI'rY-$U!S:a*&)%]=e(3qR--ehkmSGn!61EqrqOnGO;)RWHmmoR;V'=0AYdZf/D?B\(C=Wms_l,
%ke@)aqUMW.n#h"/p\jd>&#V=g0E:!I?[mB3\UFGLlC6Z'``3!/oae+Fr:RnUo/M*@NS4'TM`8<G.o1*]0\?9j`kDBMer==3rTP99
%]NauGD#WDN]<T,UpNg_Wo3uWUmdcFjkMf]e$Zc\O5JE_9gtqJE]aEZnF+:iN]fNV]s*T%YE9C;8rqbVmX7O`_7XP.&mK"@bs7k.2
%lhOUXI^h5lGl7-kI/?d=I<4\9s23*lkKc))-<nsXc)&=5^YaE^CZ++Jp#Vt+De?mA]_QR7pC1bYG2W\HIlY4*r"M'W4-'S]e'>"b
%jk%etc[P)"Z3S".=(\(8O)a!R=)YZof!"MQ.h-.AIG'TCGJd_O\t+UlYIr%#>77$HkK7r9a6pXLpNYrs?bA>Ljr\hPc1T`dpgj5Y
%Is$%Mj%$r95Q%AIO-fiL]_KQtQX78hIsA8_"B2Lr3S@noRtIR'_4;\-RGcIGf;F3Zf.IMajtE(t6/TH,&$PG-)hdJAGUe*FZue<U
%H1T_>E-#p;#s[:V(.ZuZ/cHG1mN2t7qhmDbUDM8.ha\XQflm!BrFI=ip,7`do]k"Ulu3JaJ,CXBoqSu4DtU]nir0]OS(2/TP91i0
%4@gMH/I'>#5MgjXZl\-'OA8$Plhu>$hR(P5g;k'/mcX+i.."sNYVXt$p:t?40Er#NTpVNY,XW<.:bJF<qL3[=ql:GT.@/99<R!Ol
%7Gi:_D/PqF>>dj[$ACg?d,MffmB,K(5J22aH2FGm:G;bCniu]hT:c,SPE4VsnEhTqr9Nemam/3&Q_43FbM.65]^tPI0BQl<qN'7B
%qr+N!p@;R_HL\s=rqP!T07LKZlAPCDrSpg@h&>."H?efNl05sQI<4T9[r.hQo(9'[PNu$Eo;drOn]]*r+.bXem,MGXJ*)_p\'L\W
%q;-V6p<;>o;gA#^0>D]!fk4Xhr6o<9GjY$&T"XsIlPK]LhS"")&'pf:S:1:iZZ"XroXQpLmbW9XemJITicFk^hHKpL`1&DEnX&F:
%nAi;Vo@Th!r8iipDsomiaCh,oqg>pHnX\iMqVoDrT7?n,pV2%RRm5c@rPBYKrq;ftQFD@XGi?'B_n?jMHf=)D^Mrr(q4D[`B;]Z1
%*mUAO]4]IHq<=eYcbB8RjnE*ZNt6^=il10,2h$/EeMg9"?i9QpgX!WZpE-TRo?n;%GkTEU0?fJaJ*Fs#O$*HjS]<BIr9GH^s5qA:
%54uk]jf`TMq<a0VIfAJ*5JI':PLlFP3M"Bd^&6%G2pfdlT0@T#qTJp:e+J';)j]+$rq>>UpV-U\#Ie&dp2:b.J+rUdIt%."B4#r`
%qXnc5\af4cfdkr20Ah-LqTo/#=.fH^pO@M^STf"%qWdJB^3oX^a56aha4HpYkd1"ibM/[9/'g:Am2hbcICOXdVFOOeh)g+6rpeh3
%pHJT=p$;%.pKi@Cc3n9g^O,"$J,PiQSpKIW5>>MBIcL7oV2sMY5Q1S@2_L^$jMa&R?iTFjDnc#"i8=J-G<c-'c%!J"m2t6V[r;6E
%X]M+kjQF!irq+l>Da3gW=$OG_s7M0)^&@*afV?!F\%hdgGl@)l4n7+mpZKCPe)0&PT6Tem(N8)RopmJEr54M<?@Lo&T>1!NS(I,C
%qoJ4iq9utI]?`Y=mTWINp?&tos7Fk)2]b25n+SbIq"V6EDg_3&?f&M:n(jnUI4p$BN-k$dgX!V5hH,2Ol'qFN^[P"Bc+O)Sf3d?Y
%s.fD;hn=O.X(Pf9@/ScWhgFqUT,r@EK<N%<rVXPtrSp,>%q#8,`oeFmqQZYWHK<YJY<I:'p?oJPhYm&05C@SCde2G:m].EOs7j"k
%ok,@rn_**OIWGCTo1(u)Hh>TRT7$5*h.Js#jO;RBjCUT(lA[/Us7F=cn*E7:iSEt"cf2(spRf.pa@BTcG%Z.!`m)sO2dX)kb%#>#
%H2bYI5Q0VgI-'O@S:0k?rPrOms)`_U5@40`P?ZB3jh:D,IIrl8hRW=N.rW-"q,;cml`JLjqr5;u5/6jekC5^ghtZHLgs#RU5Iup%
%IsC@G>@3>=rq`*;hEE%LI<"f6a4J(bY7Bg?\"<EZKeL2&Hg:',KtmTXr2Vd6s5<(D^A[=MiToF>.pp'ec6$qQrU#Y14E<NrrV][(
%hg4;A^"_FmHgfg^prW3,m_!u.acGn<s2GP'kr7X,kHB:)c6n+Qpu_"rY<;FDnqZ\Jq"DB;T:`jrnXI/"^3f^Q\**3Dr7QLDn[f;a
%T"XpBe*gOHI-1J*lM#dUD#*,c0E':Ho)8@t__XOTGrkogLKFKkhZ)R.kKc>?f+2g!rpF"Zh#,4K+9(oRX1=XJcMr,IrU]thDZ0"[
%,N8:<H[e'SoY#T1+.lm=nbT"f/cX_7[\NM;XK9/.CG3j'@GTDEB\0;n^*ShrVj$WH>s$D^kO,JD45YOI9s\-YHYR%P:5SoBo!:K:
%$u\,-r[h]<'5+nR"giZc-i$P&[Jq2K-/cD]J,>_Ur:Oj;mq'h:8__CXET<<#Ol-0#rsA\eokQ%PiF`)a7_>2o&oStjT;4+;i4ja<
%S"JsF\SKOKXf2mcr?1P^HK0-!#obG75rNUb)@&WRKK91T#@Lj%YC?A<)o)?rEp^-tf04Fdr.&!';[SAa1uYTi\(]`>>N"rniN3p6
%6.&^c8kprU;lS7Cq:*Y<J_ma8G6A*Oir_S"rmgt%fOH:sRHW'3kTJf;(S3k;6iHI<F91$*Qj#^FL(J["isOQRaQ/$[Je*]M57B]g
%T`]HA@$:F7n;uk'r-B3i't>KM.=2X"O9e&')RqM=N.JA(m?=Y\]<:[=.CQdMVQBF,dS7+Rnl1MM`Wq*#r*`8VVE(eESn^r*GTcdC
%B\%GroS*jS;iOB>S%qCcY>#cVdB,[*C/!<5Y_PX9ak"7Ee#F@HleXhY)RerM+4=+mQI@N_^7/gOj,)n(N"6$tHPl@5#`ed!cSD@L
%4:lm""Npok@KZY5;iKu2S%uobY0I9Hcg>4)^R2)-@1S.IPE!C^B2UYif:@;p2,mZM4e0(EQd_=,2mk-R1Mak6Z1HbqTacs<5(mW=
%[)P7b-Pb#D*e6Bn=tq+Tc9OV[Hm2bl`p\[M<uLp(RbNI>.M58HLE6r!-gQ=djp_!,>'9/Q`j"7%lQIiUEDEF<pRtf`)T^AU&JuSq
%Eq+pi68?`)"nHbEo"kLFLIAJ;F[U03J3'g",ejXJ,l3r]7jPY\aO?%rHP#n4#X6o[\BX=)7cV(h:UZ#F]#LeI=?TK"4,n-<Gi=!Q
%7X5&W*`Et(FZYTS#d;nF'_"?X.f?Np)d]F#b=6.4S[8HDk)MeMjE$d$8\,@/EHNg<Pn_;*[E67[2`H"iQjDhHmK:'a#Lug/;B9$r
%hg=[IIuVd(rPjou<?,:/Mm)G'L;h21Su/.Y'X`;<LH(fa4s[=Mg?8K#9)gdi`:A^7OS'MJ*?GXg)Ek[R!V1;J&A`>;Fdmbpebu^u
%oV5LF])0mo.pjq/aZXt8C>\.PSEH]>bL8S/ojqJpbq[9a1!WL'Orb?tc*@Tq:piJClF2=OU\@g=C=qI9^fM6%JfE(Sm]!DHqnGA.
%q9t*`romcsF&-ALmRHijR)W7#SN`$+FAC\#*mdpN]4m4f\t\M*`U(2OaQjr>q`sN"kdiA:+2,5,!5i*/rAWrXm`XcX^\di-J+K:n
%++D:Z3Mq(a,FZa!R!_8gr#j#aVlm.eE>eC'VQ=-)Q_&#q/_(R!<,#MdS!0s3AR4?6m*JK'Z)hdldL@8-MYk1"]15(&m_&)Wh:jTt
%p-n@G5+o2;\LF$Y6XC1lF4iNnlL80Ce(gFfJNF&l8+SL$;h/&!';XUuXg9oGaRBrU$kpH^aaN*MP$b&tN`Ds*8>k>--'IBK_f-N%
%<APj('%9m/'Ds_6FH_=cDt1V^f6*R1Ct8J7X41VfR4t1$4T*k)kibf@9`<<pO?9W\hZSFo*o5fu_co5WgiqQi+'Wmf\d$J8RghS7
%VrO!hG1WK^bk'K[6dn<g]N0Cnr)J&bMh;FVn\B,$F^'60ebq":2NDqnKYcVEb1K93q!iH/;EmDU,hB*m-MVBKlQukhs)%8@E7]Z1
%Hu.@3la[2M`m<[#GpO[!F<9QjThk8(].?dn.=.DhEK3S7%stcR,5F-hZNBl@,F6>DknJt4SR5.0&<!a)?uF+C+dLkWbl=9Tf/?`(
%ml"qY:56RE2j=c\jO*0=be!W"-)X8T)0F?%[Em<de`j`:%^P_$VrJ?[+*7Ekp7ieo\_J126=\Be\_dsZjkKo)A0SsIr:-TE)E+,r
%EQm7oC4c>1nX9A:>@1Lr)Bo@Vh_>?3/<_.'TETBgUEEKoLgHQHQd!X`1)T.597tps)+@H6ZIoaS4raV44`Kf.;%O7IKo.]#,#i)7
%5(RJG/=`SWaSb3uT$8t087m4?K,/92*^=<cf-FcLk`%S+&bCTK;?`lGX>@aXWe>".&)]:N(YuA&&;%Z?[aie(5k)[9)TLil^bOrr
%^L.W/\)d@ORlQbt4*5J2-Qm\(k$Nk!J2?#VkhuTS"jYf?8QADO7lH#iJmipM/5r]/>MX0&agr;u\s^UY3@N-^5ALT)X>,s?Re)VC
%ZZn)HE7\DqMH+8]Ah(i##%f3;3=%WD$B#7@aJQ?609fL*aN9^CRD4Vj)WkU=b47>2O+G9(b(O5,$8YGJ#5hu$FC\+0[cUg'L7IT/
%C.p5u8;*%8)m\Jl]^,Ru6LZUs:\3L<X^!PNC;mf0RLS8)&3>/peqS^:=@C(+eA2CJo*C0J5:VUSSHN(b;)h2iV.gWXpd#!D"H6[#
%CAI<9-dq2j5NcH&8-i,lL^@ubefjW-R`R7X(,^aZmfS_^og72lp:r64ED]._q@[/unfAt?3GEjYjua'YT]-"^J/@!g!rI6M\Ys"#
%@Oqe9+nHFJ"ifOf`.r@+eqnudjZrL6RlhqpF;iq6.oW[IGJA(j'L9HuS`a;[1pAEZOA8^m7oB=1$f32e.=f&6Su,)$;Z.#_"ZMkO
%0Z4Y*@7:3iVJ2E2@d!H^H).F"Ega!TKTSK7r7(PWifN:eRMh4bKBGIMAcBl=;075UfcXq+._<q*9[4cLh*0$)B1[q:J0C]i%'2K4
%=-Y-dc$3sMa\le5!/,Vp9^OV\^(-bMO'=Xfq5iOTFnn$NFVfq7m`rutcF:.9R[FFmV,*Jq1!@83!WmnLR/`br#L^=)lh#d48#O;L
%hB2mE$hcDmDoPne>dd$eSdp$Kc/#CWGg$M^!+Q17E\dM]3#*g?I@eT[n3P1?]#5P>E[gbN1_L(K79><`+TVQLUKkOLnf(Os5qZm$
%0fD@@n$KMX%Q]90Pdf_8eiYrM6(Ci65s6/0e:VEVpo?N7-:,X6.u&nCbc8rFK<Y$0P6cFDAVeW.'"PE_i[7*HG'JY&UX(^SR6t8S
%1EhZ!WN'>4YqOO'&/l@j!RnRc2e!P=K3>g?@8uc]n[4)$0t4'L''M!'X\4:!94K%4@Ph*XS[Vq'+i\!kc:]3`UH]2;pk"%q0l+g,
%QCmkR<n?l<bJO<153q^n5GRpSbka^8NhB,^2b!dtd<SaG0$XhLq:i:#[9Nb(qAsZ=W#j8nM%D!u$O&6p\oJ!VF=;dP&uU*L<"0k5
%)1ZuPF9T`Pnj5_cZa6[#YUl%Ffka]Y&AU+meQ[=$"Yue+C"YJtp>R(cergI(ol-U=S<5o\b1KjE&=+XZFHt2,SkrS4,W[[bEc4W#
%l"HOT_C7Mt%S9ao8QUTXlIT*J7gN&DL<1cEa3Jn)oNT"S/2$PB]OP(F)7WVVSP/T$(j;WGMgrToXDR.2#u@h=#YkX0b4Xg):=7M#
%$^=lCUpQls?,^D*+:t`&X"&lo41ZP9H+(Q8G8pBAmh56_)aot26$I^*68.t_S$HpQHVbbc^>E;[V<2m9L:79VL2Kc8hOp;&K^Ge`
%_^-RHeEjV7j?B'qZB<7]+g8h<r[_IIc.?O5O;=R[V+X9\75El"@?D$+fk^kedi$X7>Zk=OZ833!n3&@s'H9.aau.>AKrX_c;33KT
%Us#(F0PLLLc*smbYL'l8@UQ7'o#>SX7<?#PiX(rskEfu54`LBEcQ6nQAUi?S=l/>$n.'XlDoo=;/_t&BV1c+P]U61I5ScTJQkL/"
%>^_E2:T9:b*#JZYr1]#6eHs>Bhq)<@b(!)%jr#&M9`.#:`"Z=JDH=$*V+Ids:mD)4K>lpZ`;EOI"T0S%P:IcpL:RMRO0Vm-Z)F'E
%b_kHkf2"_=^)P]6djk/fY]^848?4i,Q,B]H'1dqa=EcI1KZYR`;fMgD056d_.=Drje:!Y_LrJWi\H,1j?q\K(2mDX!UoL\;(5G=m
%R(T%"l,?^gRpiuHA&fm3@uSHE!bU74l=S$1`^nDHV:`iLdiu#4d_oDtbB8d<"&6O`+e)96p\+]fj/i#&R-AecTFj+PdMCIMcaqc>
%jZ['BdQ[-5J:]><DXR5Q#'r;I=#&cqA^nC9<UX==pi-hgl:((aBPTg^\5_adOg8YOPaNOLAedknL$4Jc@Zm]*FL)_k'G!%ugL]o5
%H%'*.eUc8Np[D)idAT<AR+:5[H?rH/\@7!]^*HI=\uY9bQMX:--=Z](hU%1>++3V5hi-^(rYb`]>lH7?99EQLZ6!;ArN<iDKG*rC
%2a"VZP>jGTrXPk04$J,2GhM`S.X[1^2jZYTZ\su:qK>a.3:F"*](5<)Kh$E5;=mC$08^h2j[H^ir4H7)^HG+G4h_=Hkjq6da*E)1
%njpMKkWRAc>=9Z.\C/+^s*!m?*afP&N"9#.3lVQ/&Lp<HJN$'=TOQUH#W(88VbO?Ki!mFTi$1D&aO7]Z)b,fWH&#&/4o[3>g$fP/
%go9X70/;Ao5;D(@4iJh\p(]*(Pde.:h=h_(p&0:Qad2+Wi<+MKORR8HA!B+$Igg@YoH<mSACHUp_2!<!Q*@$2aXDJ22d'XcNq+P^
%5aQ;3Q5)R"\"!gIlWm!-U\r:`GasO,C`_hN/eZn412DlipmJt;;4_A64O2Oe@ZU.>/"\>A1MGJ23-VV&QYGf'UZ?XU;K,k>B*9.o
%l%)=O,CRoeHCPdT9-3,K7`c*81uRDAd7VP9hIpbIjc<I;.$(_jGD&a1"o#^YK_<i3H)A'jQ&WPiS8<GK9:4bRO'4P(_Fq#Z42t'u
%oGutkhV`3sma\^TbA.Q3jgPH(nlu9%qlYKfGcrp9jhD#4iP@u0)a<U?P1RCZji^])<o.YH&+sQcj"$2!_FOF/;09^V]uA3JHZ[HK
%%JWI92aTrooQ"`3kn/A^/U35P)^UR9Fedl7hJUDX_r&^%E?CQqhL":,bO_k*;8-u9_kXm%.aXsghjm:Ko71b9i.7YPdi7/[k5#:p
%i=YNdelnPLEJD*nh=QYMFdj>_,B+UYX(9+8cL;m+)d`(E&T2p<)('hni!k`-i!l;=i!lm#epWe?>`5aIkD4IKc?G;3)r>YO)uanq
%BB;El\F5h;07)4R2_7AnNIQA+j6\d3s6'<tlPh"qp\UFIVr,/`aQWpVF3H[%Rs8*7kOik7K4[\GH'MV)C/M5V@9I)Q92NNXCY;Dj
%f$@I@0'^1(_WFFnN_.p*[.;#f`j2"uVR\@lJPB8)7c2TkZ0sUGh=X(k;r1AG=W=\,`k3trK^B%LE:ZZaHn/F+ml'IcCCXt*OLNRj
%3M9P$W#Z38ne,7`#O;IrEYpgrgr`Y%<p]`mSo-:gjA7+6HR,pYafL0kLXOj^$Q]LN"7l.3D_ne#`DYQ6@%t`q8mVX@%lbO=TIFm"
%AD8>n!9QsM`;UhD^^N/DVJAr[Gf:O-4?sRM>$8P'h^+4En&M@"am=-qaSH>>k6t(HH-,H4_9FiLI`b+qLe.tjX\>T&fe/Z`j=dD7
%qA[Z)Y""p3k4=&Fl.?R=/[%D9=Nh[<;`5-T"2PhEa#q^&mBCZTClR-GLIdc:"INhab9elPH"B[dWu(j4+2lQW*gM^l"Uau+][ZXP
%2PPuN!R,$aF"pT/a!BL(+HI-:O.?L[Y>Ya=HWPZsQH`[4,nHs`bk'hpa:s9a-RblK>c"ccp^jeV*s\4iDO@eNW=]c1;Bo?"`>QjG
%cWNenDlsPlrK58(j)k@Gf[ZcYW:PCNO::]]X^F]q=bWE3Y6U/5/p\65Es=7cgt`Y;^$)0shO`NCMo.l8:;eJBZ].&;8pTPG%#4-V
%k43I\6'(,;L>OD_5c?^LF.u4$oq`,NXAWX%c*EPZ*+oq-2AUTk2ZcJ)!j>V4[X!2:66EQ$BTe&Kc"m?8I>81$qMF0oXo!.$,'R)/
%.L_;odi_RQi`[>CKYS#;[U.flBrR!Oq45Q^*2beVB>Ne6c5/XHg!-jp4J(kUO%^%\-N))UhAHZr:>O.CN3*l?mKI5B2S$0nMqP>[
%'eDW\,0+Nbc8+(JTA".:&^FDgif`S+lnl!NJB:Yk[T_.EA5(2TCh>M`4(K'c=)k*OEV9uJ8_FlHTr)5Y1]YhjPU_TKi<V>V-`F0c
%e@gZar;sqcCTXXSc.N*<I1VYuGXS)&H1S2ERH!"N9:5dHXeTf4mR\cJAW<-H4Lkj\M`dNP/Y%\mWag6&Z728"_",3ROd`T.PH6?T
%=?qB]4L;>s%C,Vd\9K]i",6gL!fg<Jr@rW4GPNP#Tklf%lL`e'J>4,W8'^=-hD0o8aqFcaJ6c,TZ\bZdPmto)j"PeWG<(<j-m7])
%<YTV9K98H7$@5k_7bjXK8N8NE*Z^2a.HRnKQDkH++E)-Y:6<%?/+nbOc&:_OAFXb]+[C?[-U<;2FW0_U8$Z`o[kWOC9U\ur#E;B@
%koi*;VaQJhYAk$3[fkUuZ7NU>#kKBC;'i%/*k*l!`6)t+6aiY8grH^p$Z]Jj([1i\rYPAjq]oGs/hIYtHj?EoiY%9216<7h_:NpV
%ljXr$m>S]sXBOSWguMSC.P23lp$t4C`?F*k$qs#$>r,/#llTki+YUa;!jDan'GJLh1kiGLEm<V5#EWe5!IPsB%62sT*n`AjoT@&!
%FjWM7'6,_5o*!C>6SuJqNrbL.%l.fE%'mPDH8.Q!*65MFYb^8VMZ=rb&#\dCZjCk<S*^;"6]Vsh%u?fL&Elq)koM`!6VSal^eAj3
%>99:o=Tl4n@t`YrPb@&q9a__m7@ijeYSm$HCgGQbia*_ee-4E4<n'LI&lkVfd$?d*]c7SQ0jCNf/mZAl%>JXj)@m/;O@r0)>I\M-
%h8&i0S(@'@_Y6FH)Md*s,jW@k\VM`U+_"is=[#<[EjDFk[N$h@-udCY))bS=SIi/Q3E%Tcb,HAWT'O?A)$#:1\)V\"Z;.!>EFLeu
%LnPM\/87olJ1M3KTcU-&BPN)7#9=#XgUUVr)oa/Z+WEYMQ1BTEh2u9"JRQ58il[R<I1\o-M/eRG$:dp,-;5`D]cPnE)Sg[L3\@=`
%EPGl&[M-2\MK5=J$r4?)aj0acfXF0D0`R%3L%8sIN]odO7uUJC"%]X*)mQl511%9''h`"mY)J_F<s-Tiad[lq+$m-`nNa,tV?o@9
%ZgKE@rmDf!ro"`$brVeVdAR<0.qrf:JU&,7'8O#\53//2kS6G';#+3+O#AQ`ieV*D$tT;flq]=.EUH"<m7T[.)fnR,OOm+P%lc,Y
%@JB+^,'onHFV5$@#)OV!&;i63e1C_eEph.RP[.u0`o&,0R#qBS+Y<g-'@&]YJ<6D"((uFkpPWnl[P1a;!=#$O4U,7?LmZ_k03CQr
%g`A?u&.[)tR%*#)P$Ge"M<?W:KY77]gNQDq$79\XAW[lnN0>g*EMaV?Kq$LIntZ]RG.(33&A[]L)c6]p-gl@lSFircS?FT%:0Q!R
%6&-%\F#F/@GV?dA)!(/n!=3s1!(_AoT^?-JR$Tt3O-n<`&cVSghr(`ZMLi,##`!g3cLig?K(DY4BZ/&t:c38adPj#j>t,;4]W>KZ
%^%PZTOtmdD=;\3K3j:;(e(81o@P?I.0I=])!0TgQ.m;]J.R9,KZJ@^EJn`b7l#Bp-`/UAB#F4/ZISuG-UB+I'TW1"q6bYfJ\kBjH
%ICH@pDkNmgp&#MKe*0fP$Ob[glQm_[&AV7(SVTU'UJJPeP^nH)QF?#\+NJbMdqO>L3XmU/:8qiq@bZ"!XYKUdRna:CO:@n$4$g-A
%:XpnYhu`%$#)=I!FP@%'&]+WN\".e-c[Vb/gJ2,dhB(BoU*?k'bI/'98]Xuh;+f:skbW-oKL[/.f01YoPIg-<^p]egQ#3E%\jRBL
%A_RN!Jf:P(Vhef(;qlNmPXc&R]QI!V$6@o9[.+9'@3-3\-nFk]V.ATm@>nbF=uW%-fu?sD#33:44Ah;u^2?%6$rDM^nO38Rm5dP,
%,bVOG\2R%S/5,Jn^plL_,]`C+Yq5bQAd\_C=jMnG:88g*ju$C'b-G'9k6=&op[c-o=:&sA/.oI9qW*.N'(W"&."tJ1ON!Ei@cZrH
%fkap^@1iACf.\j!e(j>b&eOm_BBr<_jPl4]fBZbk]80]e(^c8Y\K';jbCn+qfjB)oFE7A/_&.P=0^doDbqi2on<4iK4*/VAoh+@u
%Q.nLV&Vcu8qRLXL;CgCDHDsQsO=Oog\AH`ZSQc:3f'IDA]Oi2h"qK5=prQRbLr6[d'_a;t@dLbe*c=t:puW<XkQSIPX&n'Vo84Jf
%]],kZp*S<?Nje"6`k:<(7ol#B(&-^'%*_S&1Ll9N-PZj12#68noAXNVjqYqAG;aUWHc9uF3tLU&'<aA*GJg(k;E'X.gUuO#R0QtB
%#jZsNP;o6#'aGOB_H*=S`;tojM!PjHk6)eGiY2WufkcPjhi/ZdbF$p2%d'>W6/+oQWVC[p:L&pr6ZFaoT/Zrt;kQ+h,q`R:pOg&]
%+e>lO_WhgobadZj:jdQR'Z]Yb*r4e0QTtmG4HWRtbL.$CjqJUQi'akJ\MnVUMUhf9??$6g?A8[C\'(eR\]%"kU[D]n>9$c%n4h.Z
%N_Z(MESK:.dYiCWbAM<^jt]]u()K[<"iW&'+Gc@jgu?a,o$cCREi<>!EJo/]S+C/QoPAD>n7@>iU9fR3lg;of"Zk-,^6#0p(3s*H
%Ft+iT&2RcB&]Tp13Yk@:9,qOGQr>b'FfpE6KFO).bL7\71[EU6q]5`dn`i:Wp%O-RXf\4j&=aJ&B<VQpW.:3$0W434ZM`N^$G@/j
%L.SiuAF;5XP8M'P5it7\1e#_K3&%UqWgtbN$sp&VZ/bpZ^,Pcu)<'DUcpuGudmDS!LD./Y#!&u(oXI2>/1\R/]@t8ZWVtW;./('V
%@n*s?;_3&9\(L8kP8X;<Gl+FsVH$RVa)+g"2hGct'S?(+8k2#=@-bQ!?g-nN$Lq4I"j,][YA8'T\65f-oeO$S@rEi_[AAU/<J*NO
%)=)U$5<'2:LDg!iZG&&GhZ,J-%4_WIJ9js8#/@N&qj@nB&1!StMSTg\j(noa\70eLa9<?cpCR`f/7e2o#UGJKcJHT3+nbOmi]J2]
%Y[[&o+A2uPn"XH"b0AcJFZrKM50@']OhG[`g&$L=HQRbhK[noaYb]e%qe.K?ZM0"H/I/WVKu0OmpVDS(1:3*)18$O@+/4i\+D]jg
%Zh?gu$X*A*7g*2$I/nOFFk/`[T?Q)WTG]I$g[Nr:U]%J0r.79af*u.J+VAhLl9K<^(^.h=$gR%OD"7aS(!C2\9KiGOr.DuL1Vc[J
%_huP`e_j--RXDqQs&_)Q!^]_AInHLAMEN/:g(;Nk!A5tN-k:k^WV)I:#OS=^=A6F?Jlm#'nHF06dV*V3!-3jJC@TtqZhOqblV7TH
%a10")j]j?#!-*gg=aWN04B3h0Mbj0R5-SemiMjjSl`lm\F5VJp1[JlHJbOg_j7Z2dl8>Xi++SVH>o3\iP[^R,+66?1W5RTrT5m5`
%$pMSQi'TNp&J]p/eW'oAX9Kd#?7+8m5mW%gCt7GW('[8rEc9`r^"7Sfm(FO(i4_Jg@k+o$#*Oc\GA,(QPPu*qVjMf2`+r`)4m>:,
%2DY#[)ptg#mKj*b>Ko;2j-8\8mbt(-T4[MBiNZd"mXZn!OP<n$\_Jn56;/<@NtJdYEYR.[d;`P<QAl*7,:Jh-Mb$-Vdkhm<+pM?8
%jl@77+m&g3GdFkH`'*O.jph^W7/,2H+c@3J.;1R%NBAmOFXm%AW*C1JaB]Dji)GK+KG^EB7E<&S;)I\QL0+I"3=?i^M"VDra$K)i
%=TU',bCQ3"12+PL!<<dRQ6Q`,VL8#^:Lc!n/k[W"K!1Y\!!>,kR+o.+%V"KU$L<g)X%f\/%Ta>k66(m'*h-f1VG#TrJqto(+?PUV
%LQdfnOABiq'#o".V3OIZ1LbH!Q)OJ_Yc!.d`[ShMj#He#Zeo9D/Ytj$-KO`(Ut-B@+!!l"dVbGj@5!cs`-K9m@/#i/&>;<4gpHA%
%39Y*NC)Q"NdUJj,`b:Oka,EqQ$r7=k6UQ1="!^bJKJd5d"*PBC%[(*o-:gU>e>T&aJ]g$[4eD^@11n@cm%_dWm_^C](H2=A3R^kD
%XdIaM1*-[+(PZp1cEgi>ASmmZ!\%aqK3E'.W8`UE#POF%=+Onmir]O;00Oju$,)f_0r2U`*5,!I)Yup.f-hC+poR(8iIW^Lfl2cQ
%^`k/XM#W)nKNj6<d"dNj(fc")C*](F-Dj&4KFd[^Pt!e6T20:.&P&><NC[5>a_=:'g]t7>=k'[9W$R\fB2QQ-Wg6M?U#d1N;2VJe
%N\.hc6Op`QJG$$(>81C6g(I#_[T!>tgMYMfTB8)lDGg1baP2l>jP\ZpI0\fjkZ\`_4T8BFN>rphX4^2WNks89+T#$G9)3oUDF"en
%`7<^*4;M!EEHj=C-7_)5*`iNT+-EUH*?:9DU`USA]9g`O*Lj+(4>])8V2gDY"W-J1h1?[bUT5"f1eRNA=-0lMFZ!sYi=W\pm?j8H
%PWL4,=*+-V'XnJ$%Z]>pN&:F:]3<b$dCUm`_rGr6#,HkrGdY4P@sCl9Qmc:*>K?96!"Y.O<=p;mbIa2!W/Kn?i/jmDIIUr7Y#k5d
%*$3d;nc9aNgC&QP&`'M0JG/#M[BK9KHl9=/hi^`J0?RA<fo,G*DlZE9!m0o36J[^rAX)H5MYLc4@X`[rQU^qJe1Zm[h&9hiptq7,
%kKjKB9qJ^6"0C_F;8AX5kMS=-aQ)2L?nJ`%$`nWlp7d*Ih!=i[7'K_'*tta>IT19[qV\kk#jLj"i2ok\NY!Q,(WH`U`%b-+RLJNO
%3+5P)Fa0^dVQMs><`k8#*\FI-_@DM@L.i)<(tLl41hM"$7f5a:0VaEA%P&?N7h=oV3]qjn8(-?.`6-ur0uOUD%C$L>N0I<-G[`ug
%U6s=q@Z!$WfqD9^.!83g1!1LK=ffU9@uE4`fR@osTtPL&LbRD+pLB.TCO8puL%L#XN)`i47N/&O&[B=pj(R1EZ5%N;UVAeV=EBB@
%*dOit[183[em)O:7NXj@o8*0OD<gTrA<k6p1!!Pdi$d[7]c3*TV8>F5^qbCGXQ,GpFl$abD+#]Q4XN)_d@80F-Yp91j-(RuH#SEl
%MB!5'N+2*$AZb=W39<YK*Z(fWllI4KXPJ/H['Hu]GeC<hCHl:=M"'>iAYnD%W9(.4^(J'&kTTK>RZHb'#j+WqDT+:Cg)Vtc`A)/"
%Y/;KP2=9#SZ-<(O^t'+BN#iV\r92D-W+J@F%T$`A+5*`p]ag*?ISc32Fd+]/A)a"Um[-Q.7rKF`l\o;.7ltKQW.X-$2=]55&^Qp<
%C-Ui`.Gp24<qPmkBC2jS,G.sI#KK#\UEcM*<IXi8cW]#<&^X/HiA&^V\^=H?cmm1jA"ccdQtU0XCUP;q?-iZuU._5e"(S&ITGZ8-
%d5mZDSftNS+UrN6,H^1G;:8Wa5>E+gac;1A7^7*;1sgBP[&-4FO-a0GB%tJ`MOa+^?Q;/0`=@s#f$&/ia%mr7f\mFl>3aHOC8LIi
%.-cs#n)-0?Q0#iEe>7dVU8^e>qn%lJLh\HsD-AilW]*lBXeVqJ*YVn?ElURMCUq>mXASDi-u7(OGAs'0ZKJ>7XYm$5_6MQ@h8?"i
%26l-!n^cFNi=XZkX$^C"<E/imf0t2pa'C2)LIPTg%J,PbCnShe@&)L3;:o(?i&GNe4$4-;QT?<+)l8RN`n"Vrn^nt3*KaXSK4D2[
%D]Ka]X`?B`/fWm^Nm(Nam)N]?4X)p+`K#c#mVU@2-uFKia(]=u*?M2^>jTLG(\GLVD=,M6j0]tjP'8-kS'Zds[o)R\k\]g29`-fk
%XWk7U*Zi3.dZ94D7^6I_\@(,NOk`RkTs<B&hnu5"<PF7-F/-qk&`$(=TeY@Q`e1%t;/@9)XeYX[aDR)g9Ph2DI!BbB[WctDG8[Fd
%7sM)A%Zg-\/TQ*#pMl%VG;&%'T780CI-LM]G.7JDjh6kA!ke$af6=qF#^,D3,%fV943<!3<JrD"!"&\YIK&!Y4Q`eRgO5.FT6U@l
%:G:Qbs67f>hqu$>YA6o@p;-(,)m?o!mE'.)h>BLRh7S4(WD)8$DRc*!cMqk^g7Rog;tplte"=[155;=M"1k=Z0'Sjj+A:tcIn<8q
%Lk?&e0dfi*S.fBb-&k,EE(=;&W9g7-?RrmNEWoh+:CtFO-XQWJVe_@,oA7YLhmn1$m[*DAlgC*&pOusjQ^.fkpN`"@Qkn9Ed$sOW
%^jlU,,Ka0-&E.IEnuh7'8PX3s$POHJ/4?Wd_IX/mgI[:aeVuE$WKrljJ`aTS6D"#Z+,:rSD8a.Hla)7Gj_uDdP#Bg(jUua`H053A
%_@pHX2IWfR>Z+PV@X/1AiDkVEeR[>U&YmO2F-$fK<oEH+j>GXR;j-br)hRSA6TL&Pe-18eKrTcL"qQAiZPCSN'Af2dSj.iB%$bRm
%&O``6)R(->qP!941)/:#K+_>a$\XLu^1ia<O!DA!UJ@?b$*W3EP;JH!Lda0E)@Z=i5[q-o/>B_;V*1SKT7][%=g9a,UM;mN[NZ:4
%;Q)@8#>eGk:j<phlMLZ-Hi!2$p3QS0k"u=#f!e)?K7N`K:^9]IN!517+m9K&""]0ngTqNMdo+g\a[^c+N(+l*Og'9"L)pJTOD4]s
%eA:0iHb`.bh'"Ra"s4[Q@KgB?(2O"W#8,(4,1$@'%%'94+9[+;9*/l\8G7l*l,Nc^a&>E>lkfOBQ2`LB>7:8nP5TV4br"BC:u5L%
%9fKV!Udf%!CgCT=F:B%B6sE5agN:L-YNgXs9@-4S6_ggEdQ+'l3(<&c6)Ic,D<GaG'\%fOl;9B@<0r$O)&HPW`[O21L`&XoLPM10
%eR;q_Y#RIPP4%dp]YUWRaI%e,/?`57?7R/s>XqQd.OuP0'NnF-2YnRpS'oQl^hAshU;=f",G-.>PL(GuCZY);mF%^a8fC@F)D!fS
%_s^9s;V"352K+rRG#JU.4?"LHfZV^s-otE<1VZn@j_0@kk"1h[/Ll_[MJtWa,gWrjWCd`.8ERfLC9qpd9,cA(4H9XWe@?>H.,Ll?
%,<LuA@^f+Z-0!l.rEkZ7X(<JT1gAA<$K8a#7Sl%2)B*TDl,IL<?./F\oIFn;CQ82@Ug=$=qib6+Kb`tuO;r1so$?&F]F^7RKPPmZ
%:h3,P'_7rQM%'>/i@k>TH*ifYqDb-)Rs/e/Pa*gYlTQ;>KE@",?<26S4_;A(3-PaWRDJ3WI`Z^WM'#CA2=*UUN?$#37cUW\h5O5i
%-Y"PI3SG:_4/6//aAfF<H"342rNK=(N$E5llm8O6TV)KB4[THQEP/guFL]gi#U4"E<6;:]/J<,?fj%FeA#Yl<Ke$3\Kn+"5R739j
%7`G(_`u6L=Xe?p%HWn$&o`uXn/kiic:%33A#o/TqGn_%rIl?P,U0NaFV84rFmg<6TgM)?s.@?#j\+n25^,R`*Rc-l58o6:."/O3f
%k9PeGB%s&/rOl?jfHN$R&c@<q)9hj5eN@"l_N^ae0+"8OSR9`?[K[$]pOh[@?X-6s=1!oP1.(R4`kk@jP"m+kHl7E)5ZWV/F_o1j
%ioJ@!=Wqb,,qIJ#QDp#`-jIhq39uke4E<L*N'`cGY]PKOQg_IrTJ6=Dj`&UuF'1PC_.6=>n/1e(L+$#VQSE&nH1af<.dsL7/*4`X
%;sd&:/HC#7'5&6WQ*"G=R2,$66.Bb13k`?PRhCCCMqs>2HZV_TrJtTIi@-uiSQ(gZ*qI9"_KKJCfmmE!XkR#\o`%g55dKaFh!e;7
%,\HJYGgG,%oLj!@?GosjiciOefjS28lH9+1T\-j"\cIeS3`i)HoZa56=P#5Nj`[j!8utE>`HkTbL9"Ro,)Fj!6>);2#*_hghPnKI
%l2/4"8Qh)^oDOGN:J//YK=K`l<fon/=W_8p%1tl\]%8@]Z#&]`k*3!T7%=:H'gZ6LiWY1+!!5k^0t4:!,/1RO#u5MJGL31Qr^"FR
%:GBsZe2O%Ob/(fc8^@27k)tK]',/6J\M$bfZRSUQ%T.ET:,Br':GKiS]K-c^c6nrhh`Rk3[uC<l09\3_`2XG9!]X?cZj]9@hN!Z9
%`CiW)>Y]jeCNF4*REsr*s.6.d^@cDK^Ien(&&et#%D$eOFfaY,SHk(uFe"MNF\kMW\N[(EM<?2t\I(k/$j?.+E8.'9A9(EV[+@U1
%mIKp.=_;ppl_8Q_f-c3Umh-G9q6D\HjUS\88']Wqk-^QHP]f"nN-!Z*M\;OiRMb=%S"Y,jKN!!`U#?t3AYJ_6\hiPT/QD7AnV?_8
%lKIB(0lpT;b"SLTGKKsgh<[Jn1ih+/SS_6'g]'$8l<7I-M)7HlWRL=TRcubi&hPh5XPdBhR%ud"WtUP]D@NXrU+Crf]"5G6GT,O)
%B']YsLtEh=O#7K+,jIGNosg%olC8(<Oa=Bo^(DGZ*YZ%9JjgVe=$c3Z"L,pLkAjFaK$(h1>1-5@pjduq+r<aDad&uU>N+M`?h?F"
%9A-&K0oRc"R,<,d,k(S42SsA2++JJ*k4;r-TmrU4E,kX8T>%u4U]12NbQ#4rral%JkJqZBlg%b^I/W/&s.*N2Im7p+LWn)ZN'o[,
%\ERnBjhEq_fP=kFEQrp9D(6SGE8<STch2'L]^sUc45YO9mBII6GlIX=kDR+TnC&t:gQSl9(?I21KKpr?CqmT'L?R_O@t.2!5X&&L
%o%WBYShk%T2E4@C3_lDUi4nL'C^T>OPE>'bm3.l]k?ZJ;/f98SI0rPH^kBmEfffjj%l:3@T(GGA$q9p,h>KT$?9UC'*X.5_-ZQes
%Ei1H2DTIaDbDiUNh0i.&E0KYI)rWdG*C=0-#V'j[4,2nj=,s;)*EpE6XY5"hg<dL]X%,nhXh*f'hHZ"i_iC4,59a&-$k26;>)X8N
%S#H!]d9VN>K&s@cf@@*b;@Ss1jQjq!d3YG+@G^;4WG#B\FWeaT-co6l_B$RoAB?YbQM;H"/s\:2*ZtVQ=_,/W)p>r')F2h?DI1aK
%4,Z1!_+malTfNH,*+@0)ATEU-,)AfK[+Yd&r6b6O=GuIM-U>_B*:O6N?-P+RdH5O<=4&]J$$27a,o;:sUeV[-X05Th#pS*$qkH8P
%4&d0A,Bm&9dAY16i&jBiWlZO?QTq#4"s$dc:a=alSmW"]0.2_bSS4#4ZN_YO,%iIZ$5OqT%86g*DYo%hC7mkP&ui(.4K1ELFA$J'
%qJOj*QQ0ddCT#QnSWf&o?dXt>CK9hre!*<)Yr4P*7g#GNV[su]Ah#l7@1.BC)u^82ocXd,;->!(T'B-lACj(S2)R]3N=eOi'o,ZV
%GYfW-j$qPF?4P\%>#PB/;b0q06dkCjQ7Ze;<KUD*\TC'Cb.L5CEP>j49Cu\7RrMLgmi$<'OP&Y1E)JL4ii!N+$H"L\,Y_.RGKN0W
%i_XG+M5q))mD,\JF@_?*%"i+``?ul"CVmC/Cbk-%!@/UGnYj[a]Wd\TB0Kld'UM_jT2;.J0Y&T2%ORt=-;1\A%Cr0iEK0J!d1tMK
%ZPV\/i`mIjEk!Uc`k2SR&p,kFakg6"3_e2skmBQ3]I]A4XpZ7/F-\DO6,K\P!C2_l*th-Bib+f&Pu3CIUgB)C!"1n^\@suEb*\UI
%8?IY'@2ecITt")KN1Q`KF-X$?Xh/RNC=RUFF0%W96?q<Vdt^T<O?qD7`9eIHpR\=$-q@62<\$1o9:T)[iW6XS1j;C+P_[rQfkiuN
%B43VR,2#RlfYWFMgdZ6>=Z/AO<g/.@7%717%14B/)"`gtI40B[6KqHH#m>C*>XKHO\F$2@r?d-(XKK^^9fj8`1n`1B%:_[$0V`(K
%H?2[UNYA--HUu#Q+\G(@%:0Q:)3%2*Pa.+`Jm;iBSL&##FKRGmPUM$Ke7.G&$nCWO222kbGPc&^VDVg6Y@M]W"2Tq(QF8@aXm$-1
%5BP?ATI+MB8_ShunQ7#1LdhhHHU?$&Z2ZLkK3Xs5,],k>g)X@aBoNtQ/(n0.g:17s%-:__NWK#?@mtU4D-p-rg(@XSb@[XqXFqNp
%*._?reA,m<Zp87eJHal/AsU+P'pflh)HB]T+c&"^Tp9;kY&^rdbcg"SS=Fp)c5tmc]RB,&(]SXDhO"*)hNo$Cr+Gj&a.MdiJ,=#m
%$iTS`kq82oM@&!fh1^<oi=HKIf\L0g]*>BlD=hQ`L<'BCH+`L*l9_,Q>=S/0<HQide]GPkC=l"TL<Ir%A3Z5AcTEZIk3&D*9b#p$
%BFV&qFZ"!1<5YQF<!R^+2Pf($^c#PYDK<PkZAhb#D>*=EAMF+HhEkrq?UD0$:JnD?/TLhi;.QVfX2M:hQ;g#Rh?iQZ:44U9ASh;I
%'IVQHe[&50S0$gaCY=S?]$!IXT'/!^#$F-PW<QS4%QW,GMfgakT*=:;P3jM)T;U(\&@G,D=`lTkSF;h1"M%Gi&93UfRa=V0k>&>d
%$T6V>L&=0odGrnlXr/LTP1sN%!X`\@_L[DH"@FJ9nP%+A[(8eP4^.Q-e4;+qofP_OFKU\Q"uS^66`2r>W&fOS2+qVZEEAaBSSMW/
%16Z[j]o2^?ONf)`Lp\'mgQs=8'=Q@?>V']D=P+)MKPbB9G&="2O>IKi3l8ks;thGE"IHjg$mJgnb-K<k?`IKA0?@h[$$JZkQ^+s-
%$'mG$12'L57<^e&-(>>UKK(QU3jK'tb6j2o+C;4RKKF4d"Zks`/Efjda*-;q$:qI!;'Q2U22&E#D:Q%V]opVd%:*:oMTbL`?a7h;
%#]uHGK1][8Q&&R)n7S[&$\1H/6b*t$eV+W%8aTRBXJ<%p4+2Q\@Y:U=:*6B;UGcQm;aY4E)\+L6Q-bn&bN9/.D6>pcG!Yku>u2;R
%$*iij2PU^Mr(,6EXZ\/'B51roFc4LFA:`$J[R@SY>3;IK;car96_PElg.2GT2<S/OU9ea/\N3onCV/^T5`/gg#Li(`$*?t+SN`K*
%`g#nLEXcO_or(LsUQRqt9))L5Sfm$u6WG+*>nn9c9/<Cc!Qj-:I4K3Q\M_f$6HrXtmV1@B9'0\'<\tc\i*28u9?m`eNnqo.EgpM]
%/2pZ\MNkMgd2R;N4lJI*GLk:W@rtQIZt-dS,TIJ3LF,TC4)/M@&Pp209Z6uO1brJ.H1@(Ecf7&+h)R6Jl"UiilteO3oN@@$]ee7t
%%[sT,DfeBZY]S-A*J$oU<5K@^,fp=s8n\fnA<E+Th'TV=JB;TOend@Q]hi3*P1gc<&IVXZ0u@TNSZQDK:kMoGkDKb^T?G.[P(pM=
%'cH#iVdYCncHo/SmmTgZbVqAHT)oc':W(7%F[3'g&8IKW8m]AoHLX&HQrM2uR9\NW(5H9@7@$R:l9Jb1Xb;(%mVXccS<m@1Mp@84
%@'M:`5QsN9Q?rfR$'J#C+;,6Z6cnt8Q.8#?[;"U69O:#343=pmc2;9m&B)7nBVh/t/$,kKEnPTiH4XfiB>$K_K[*a!1+MOGI5`GY
%dE#"d\/RE'C]irQ)iPtlJp5hFM';0;+ciK%SL]DW=e.dq6T/uCA(;Grg+>D$K%?K=^[l6BAF6?Dm>]qe>V9ahs"_W18d@atC0YB>
%NVul5Y5`pULB!NVf+GQdnf$))>oc[Td_=>`;"h*$$9#_U&>\Qp2U1OG0up=&nPn$XGtf:\`-n0M:gCUOQMkanoQ#jsp/1<Ap`>\G
%RZYETnf4!M7F$5hW@k878I;c>)$B3YhLV(L8Yt!hFOQF=ZN^_@1tS\R>jdUcCNc2;Uenj5?j)p7$#I;j=R.UEQYOcFEf_??KGkSg
%)7")kUF$.28RR47C^HqU@'oQ.5o6G"<9[P[]lsFqR/HWP;&us<H+C:iAd!EjMOFo?6&-F.@Pm+r,[:s*`'V`T*&Wb2X"#V.2d%7P
%lLaa%rX]Q;%Jsnj)8sc<g;pVc.LZ-D??3lV$L&si(p9f/V;>]/`3/nJ=K]M^?.o!Un@Ti#>+f2Hp0j/A<G)k%CM4s=WbX_uR(]Tr
%E#$%Pfh$S$!Tq"p,n?9UoG2p$O<EP9d)n+D<s:tYOp#2TQ)L>K+eip:!?/hW2R$%kFYt4@b[-k8B]9rBFjumSg=.7$jq+5/Z;GI]
%8lD]HGE$&.YY)lLCC%E'^damF<E[u;oEmqJN]MLF<=.9C25Mb*M$:k-MGq=/T.XVHS5Y"o%ABW@5[%"nXF!dE5PL=ocEZ&"TX3MG
%.;2kXjID-c,O/QeChjsmOZc#Z)%VC$p8F*'K+/-YR88Dp..4MO0q>-))-d`AR#2DN?8=3f%AsE9Oi*i:]WD+th'+o$iC1,;ZPMc1
%3(C1(-Tu[UD=gZ28do:s_9g=G2,\#$rG(cJ%12I*aPjqCY'#bgB/V!0R+(/[D"WlFA3NRS#E;O60oCe_LuUs?"?n^M^,'LB<#!`3
%fLZ"GC(I>I.?rQS=f5*<F3\H/VD^alY@M]WohPAnP.$SPM2XLZ`'lU>PsBplg4YWr)f"AHNL17r24_*oZOP7?nV;@j0Qsi=Um&3;
%,\dE#,IIP]G9rU!8t,I#,\b3Z]9,rUDHOJi9b9mb:m,of9fB*c'4@T4PI++(N6NGV1I[<OWO`FZZ6kfh9k\%62F8suA92I[\S\lK
%fE(5%]/U6bOs,kL,D_"I-jdMZ-Cr_DaflE,aZ>pM^=P6m0W2L^WQp)ROQ:4cA#%OL]^Eu(d^GidaR(+@<-:W$"4sklL+I(j;;7.U
%+E#e0'D56(d8HZ5;:C:pe$dsIC!Hnb/S'F[`^jm^fNlV\lI7X`g=14[g9bcCO<B]CU#\mU:h4'11]\LH/8<S,p0gt.XYKsXS.-\t
%)q^NkeJkP>R9Z;?Ags4,DG?V_D$1J>;C7X@;[eOkXGJ8dUP5O\]$iiZ)Re298<ku^,\TL`,HV8^G9rS+;pR".;pVRWe%1N&Jk47A
%Os?#R&WJZqjOZq23B-&6T2c'LWZn)CfeASoJW5@e]CEEbO37kiS,[1>pep!<k:i])I6btQF[^Sr;!ru0O=QAa0O!m,EcpJU,e%P*
%/"&l==Qq$8T.F8^A;ZPnNRihMG-;Nl\S^0$`q?X2EsHN;k*#^?W\I9jH1&!TG"$ad=-R6O\&.[R9+TQ/F[h!I0Zhk1/1fRoJU1a+
%ZkKm5DN_Cc%'nAM,j\".$+o`9(<tA9]3Ym2KjE)4fG,\Mf%d86(&*)/lqh`CEci[J+h)6t%%0RXWG'/WdS7$uL-\39Tp9@+G2mEk
%R]@*FF]\:RY%TJ)Et4[$!`)Wfh-dE6,e^DoAr7Bl\[mrnLYK4Y4\T?O4(2@X-:;Rd+A9pM,J-fi_J[#g7<;%/dfGu<Ch.;hEURp+
%o&P)IfCP`gN_T%d8Cc8o(.Dsq'kL&*RAM=R9MmIQf=WfI/GcBN<DSFMBl]p_@Me*);pT5fBJ#,m'/$7tA!Srn'1p/:C/rZ(8Cbug
%(<'uF($/'TR:[eg9JN#U>M1@G>!4%+Q;+lS=;,R`BJ#,m'/$7pA!Srl'1p/:C/qMN@LA44U+!.@U.hOLe&4YB.:Ns./)*HpX!bia
%+KuDm_Q=6KAT;:u,o(7?Op5eJWL-8Z.Pa=aq\!!FUX`>.-adTUQRFZ/CVjq"S()3GKUCI>O*Mo"KNf<tbMijQ7/>c]@^"^".-Z:4
%l3=04\B=VG*8tiaaH?lc)Dk_7=6JZ@.lXMbPaqCEG5;VE;SK?X+E#]U7bq$B>8n)'B$^9``;\;MN5;,@%g/TfilKK23U7eOGr'P)
%FXcU2[CT5A?Z<U\3nIk2n&G@EZ)5sXl3uZq%;c4l+)pck)_6B@+E13grq=95,K'D@<DaYgp&,SZ/E&R`P(B#NX-XO!eI(sob<B_e
%VH.:/[qTM#Xplpl@E%R+^nP$U1_M:\IQXgu9c2m]E(60CN'+=Ra`u/!(8r<Wp0emn<ZOQYY+^ij2R&."'u*g2YUISG<#-OR):Y1W
%diBl(B:XKO.1eo$K@$W1W4J^]W**&%Lkech&>sr2E;uW8b91Pacq7TH/X1?bQ%q6'4L40X8S-iq7Q3+18D[r$NBe&1q&!:X$rp@d
%&[b7]$ZAFfjLYqB&]D;a3eOqJ6Q:SBhm?fM<r>.WOi8fnL-hBu2IMtS+GeMPTrM\*ZDNJ[<E<6\ZL#Ie@VTHY:n*,=ibW![(=p-9
%%kLaa2A4_K\+.m'!^Re-`Mi&=Wig(\C6qnc%4qC\N>JXU+`#]V7UR0;`l<nn.i;C'0Hk<^GqO!l\bfkGV>bs*jP'Ve%(UiW(WKaQ
%i;OPt6D#7,KSK-@EGN2m"^&7nS)?Yi\j!sj8;SRX002oCiu1bcic[j5n-#&9SL8lhGFiPifos&R+%odAb?2B-md?"mD<q$>L7GA*
%H.'5K4d<Uh-[?euQ>nQ2mKU8708d!m@F,67$LJlNLZ:o6&n8=H%AXtt##]F2$$+_n8IePcf#TPNqe=kX^O?kP\ftq"^&/TmE.Z$L
%3>co[8r5=&L2HRVjhtI!#M]<(2G\5#<m\s8>iK3B$#pEJ1hm6GFLY@O9e8WK_NNk%oA/aM`9V$/bCtj^`gWUIU<l[)bbMlsf4J&)
%o:rJsPN9S,Lr^mLk/'94HYZ6FG[HBmP,Dt`7;qb40gG*JLiF$[Bq(f!Hl1uOm@cR6#c52C-[8?0Bp,\p[%!eKC/Z"5`smit/2hci
%UGGP=n2MZ`U%!h7?Yeii(i#9Sb#>@7/Qo25;QmPJ0pE.!A4tTp:SPeR&9n8+W$KQn"rbG5E!bXjgnDksCVth0mcR4Q[hD.dkTt(,
%(+8oZoE9p0W"Ca1)_OFP`!PPQ5\P/eT4FERNnprj'R$'T%*>g5b'd5M$G^.1qE@p&Ko:^[l?e>U$J,j3K\JaeKZg#6Y-n+AG$?2D
%ZJ]=1>Y=o3Bqed4&(Mr8K[Mm($!qQXMn:W7\LRrfJ]X9gGmd_PHcQkUeAEjEmRc7nLG2P:gliWE9.qRpCjB[o:UlAFNO,&VpB7d*
%C;PEkJpW*YN96hh?BQSD-]!gYIO_A,B#2`r_`^aiK0)X%GKp(1BlHYY>P_,CDePE\PU+)Q*iV/=*IP8g`,CtV\5[rPJU?B%;fKB]
%.<+lpbPOKJChkJ=:[lr<5#5<[i:]X(cAhKB]&^5_/-<6q>$;A+H=Y7aHXd9@))UOq7EKJi?E2+cWHW,)SJ/ZiU)>C/q(3FYFhs<t
%[hq82Q^3j]P5COgbB-:RDsudE'in8ed_rH@[l>],K-Sa&Vo(&E.r/FF:n%[?m3muqLWE&>f:o*93%aB\]Rf]r78K4q"e]I]22(@Q
%#1eI:A4G(%[qreJLu4g/f)91Nd"&T9\*1i;dB9*qqT<PIF__8PBFV$oc$5)J4t`YA(KTP+Jh=SOf![f:]W2&(G)rgMT"(VoM6EmN
%H`16g@+=bM10P<e;Bn&iWY%U4=&7UNT*T,&+ZF%@=$nP%.Y2beT`YZA[=7.Y?RD+Gn=*S88\(r.f!7[&\C?Y]O@e,%QEm2Y19D-%
%?_`@p]\q-86]=N`D5C6&&4r<e&p8sZ1Y.Ae]TUMcV2`M!2.JKi[j;b[a_f.'Y:(:I2,PnlUh:"9%p`%T,sa,lC\_h(6q_G+p>$Dh
%`&#7KO',[0KX@q6Kjq'^YdG7h-+E!3cKuW[4HEOEM?;5K=<>cTOF"i]@"!ZI[g2c_@h2c/pS6jP-d>bTF3lh1G9n^U&>g>E-3i`K
%mL>q$DT7?WX1P[IQGb'Sn1W!'4<0HoU/)j.X!\>T2go!`@TOmp6K(KJ$$j=ER!9rFG&J,N&Ju/_I0Q,0<dl"L$81d74j8\9GLJEp
%5>mY;;M#:*QFij&%\<.bYbG+72G,i3L-):Cn,9DH;gH5WRNHNAFO?kI,bm(>iXuC&<")4?jE/[9UEB,Y%kl)j>:t.ac8c^%]m1u.
%eKXq5jkB&*]"9W,jSmaiIdf$I%^k6O(rQ[`1h5,gWHc?Ka6d]9]DJ?oa5ND1SF#NQXg(DnQ,T.T>d%h&#:"B1-a\bYa7$,g'Q<qB
%3aREhh/sHmise=.o\nIck%@"h=_AZo;BPHN!2m+2c'jm_*,i)?e7Gm:nn;mB0$4j/@:,1=#qTkQLj._cnh)abGtpiM$d_jH#4u?4
%Q=h7eLp(hk8a^!!=[E[^b\5kFL2iC81XE`;etW#5n>iiMR5B'TKtaUjGm#(DFEkub!uF42b4CE4)ao?S;%pk7oJKd>>k^U"#W#YQ
%!i5g^7M)G<P]p.H"Q@ZUG9ZAUqCn2QNDuH77QI0</:1@)g!n+(OLELj2&/1<'mN$&K$`,:)@H@*8`GES8.Q"aBDSoO5tT<Wg,c,h
%@U6M/lUq^J]O)W>+fH7#4$FJ9#7ZYkma=[Io)&"+'1&GZ%.-LeTh2Rm6\B*=C-[sP%#:MP.T1nVnm"Z7IKeQtS%T9=pO6<k%+,>>
%Zr>#"@UgMf^,;&sETdrk'e5YET0fCcX'VOc$nCWO2%?\$]$iUloo5V][)osNI3**DGnPEg3(/K:NK'^IY)k'Dq(u#(&S_gbA,R'R
%[qp(43Le)OJEe2A7&YFj+4%dG;pRfkm1N<-Ku1\U:-MOo5,Fubng6;O/V(me_8#&^N)P<"d:q)(E/BhKAP#QDmX:c)Lj85$1m6Ti
%BTa14UV$gq<ah=QI!H,l&oPd+nDI$l=io)>c?9J)8>YZLSVo0PjLgO*NB1"h;sF]PXh6p]*Rpl;5G1=!&T9'7>Z,Nf:l;QMq=<t.
%);?#ojX?^IH,.Oh4qBj:V=cD)o($3l+nb%"_f3_u`ANUL6!aeSkaa!&NAi8DfG1S=UU&6@XOlr,\ND99e#Yeic.Z#jq_4'nh9K5I
%"Bi?iatr&iUFVD)<9Hu<eOn-JGNC]3e/Y\/Sarq^4eWnX*H!]'&=H%C+pSWb\Sn?7FQG)=13*#"_;<t?nR.Q\c%6:nX$rqsjm5@i
%^Kmj#:WkFJe6-mJ<o+gf>D%:U,d8'7<B4L4ig6PF^%r!(UACU>Fqk/po[%Kq]C+<i&-SoEAo]75$e;3T_&aW:]X+D'VGX\+&iCDe
%;4\_k,?"@lP9m5aWaeTR4k$\?XYfHlZn^#J0pYnH\[72iXl3U?FkNFbo/\a^Sj7p1g(!GFc"I\bCW(nYW9L*`d`rehM3W[1S4duf
%<2E;;8Xn,I9P_RK?HM>md`+u/9-=fYeUp>.8IA[)<%A5"X,R1W7Fo(k9FA`"2*dGFQkq/RhQpO>Dbb>$c*E6Ki4'_N/(:/4?(o:]
%0dZ3SjOS:UWtL]b+]K`-P/O'L/4.GpM%F>7%nR4r%,n-5/?J+@6q4`8DI!^%#!AG)\TPk!&ts)L+sp_g&f$7slsdB*k='3H]N>Ca
%k*=`^IS.1:9F,5QSQI&_M(rqa`hiR:4<?f=+kShjFk!Qu9'.KGd$4kpj20@<fuEHJp:.c]`1=LY"TNc#@?iEjaenLKo6hD^L-_/\
%Js$O]L5]MkjP'.1)d88L(sC)RM4MSt',(f-jMnL@/O%G8^ad^Ag0g+tTsX:4(`[MKM='u?e>JeHfj&"[Op\1N4HtJ@J\50eGe?:X
%+BV!6:$T5<8,%VX,6U,R(E<N1!m*5N!nAM7e0lh0`bm-*-b8oR%BBQ$X/%(&(SM@<8LS6%3P:t@ml0Qo"4/Vn*s1Z^dW'g<H9#DP
%m$=plD7uF#=jlb)rP5qM!lOUeNi];iQ,,RUS?(=L\=k]0$;$\+5RtiIjsiF@NSZ5XXa4h0"8Sm46p1Y<h/7deA^qc8+4d]0[5I9[
%CGg$1@U_N7*s8?#N&p[p`bg,3M`)9*Nu;?Ad3,R2Q0jf@H//4so.iA1D^Ot^aQZV7b\i!WGlp\]K$1F&%Q)//f<1*c8tSc<\R4@u
%EF6m/M;9uTn_-GuP:OI/gu&"hi`A/6)95+:MZ!"ifAGK^mXOH]BDV?bq$HO.8IPlsr.rg0g,o+E+J81+q/,b=:O_qAkp9+PGp+h3
%]Y<MZ&+`[#!ZS`"GIth"dA(2Kj?8qCNhe!VUYsk:I5FaHeBqZbb/7CW\2M6$0ga4]om-8K&R'Bi*?&M^$[])2A*]bHODtf5me/fn
%B-f`mX@dk.*&sOYD+n!kN9*pQ:36n&.5TU;KYc5`*Jh`Q#,\:]RVbG+A;:JEZ6TiiWAV&HYbBhkKU/2[kStf@E$O2Y_0UA*qA0CP
%Me$6U_+VT74NI]$=GCPlIR\tDp[HUsj1r5ggC**P3oe9")nOLr^o%ka%3rMcI3Sm*QKR)N7es2WZ1[kURPf\Zk(db8))Vjads(#V
%^UBfPF_/sXPL+%hCH5_,1QP;:bYol"\fkdSd`a:V;,9B9N'\+(GtP#\U)B[Se^/3t'+2$sWY'(naQYr82,]RC:0e[?bbX000"XfG
%g4C4cLt$')4#KNAAZrLM6<MG#b^>5JlANDC,`JcOJPe]/)A3>IYk`Xe<..2^Q#*DJ>K#)`F)H$E(?hhA"U-Jm[Ckk]MJ(1ue?3YJ
%&B$'*U:mR:<*=$sQlnrOR29R)Nk6gSn]RBB2DV@j$<f:6&4]4-R-1oj.9-8WN"kS_'N%;G7FY/p*5Q?`[=RolH&S"';1\ET;*g-:
%NQ$0CMpHW9BM@3;6)9;Fm1oJ&JrJGJ_AY-hXMr8%_)TNI0]D[M&TYr[.52+s,o`os-Eg2;d%"6>Guh:DH.Sft++(=`BW85]/Pmh@
%L).a7r+`m78JF-A64ig86b>PN:q9_CNBe'GZ53+NL!KDR.-PPI\lURQFEW`\b=ZTjQ&<p;0t_6](OK0M>V_O&fo)G6&3>))_\[Zb
%dCak$G\^i1\.F6lVbpBdF/<l2j-DkKb7P=df0Ri&R?e#Y2"#[s1".$qQ<1B&jAqUk&gZja/lBX>oJi+<A0[0YP.%&8m1(`-BoSJk
%)`926N+t&SI5h]4\,fU]5u$'fZEspTbd9iujcsX7.rF"bOgM$sGf-ZJC"??ALd6P_g4lo?41'gA2.Amge?H=CE^!,<Ak6hm>'1k8
%UhqMQS']<:2.A,?A91mfduKlm4dWqdC7:Hh7\E$mD*qI[*EpD1)DNBnC091mI;7]6I@-_-7<WEg*Rpm%-qg&Vb)A2e/?`T*=_ZW.
%S)SiiV)Hg;04GsMh!+3^9C('@hWDL0JNfD1UpXD8!q6%mHd0PEWdWOLDQAa.o->/Tl.blEA#(tjm&oDiANIGeFAo*gFAob?+@.8e
%6ePCI@$OH%_?=Q?'U!Q:VY4Fs\ZIbV9[X-NU^:msZmLafQ!CIc?[%ZNWmmJT$J,P/La6gc]:TM5Z>!%#!6n#&P&?0,5&BMmeOG?d
%g-Cr\Tp64*_Ur/9jiV[f-g@KtX_HNE(kDmRU^^n-Sq0m"XU,Z63W;Rt9o7SZ:"?]+#VemiaH@mW11Erp].:Es2Wt3<3V]:am:oTR
%Gm5iG&>8V70?^um&kpGEnNWW>g[>b/8[Xh^8nujb17:=aai'%Go6j0m&G<js$N)0*@WrE+?Xhf+O=sB--.A]E!jC^+8P^5S\E%'W
%kf"!@\q6KK.nB_HVGk$QbE0\+or'uB::26QcqPeMMY*(7BJ8V-P#uK54Z&GETh3[tBTdIKD*opW-Ku:?`fb3^9=f]8<C4\pgqI0p
%ptn/)[s/UeXi+gJUBN[DkppEpl%YX/>8'/!Bjn@[D3Ae<D91i(,jk*\6L4k]YYNII,O)aT_YJ3,KB2Ns(UG(R4`IF&*!9-'G$N80
%'sncu77hg5$&/d=h10B2PF)_jCRJF*aF(cm.N40:b'=$PBI'Kkc9#%S859tI,u"q"BgSk`VWt1IVKP[.1QA9/iDS!o1()?H]h_KE
%+ir.iH_;nB\[iVjcciM&F*5oC2/QU)Si6*q7;YA-MOGYce/bQHR]<EWRbBW!bqtlh->BsK-JI$A#?=budV`TbZl=(%fj'rP4&t+H
%mW<RbO"'BA6rVY>Og=CO<Rt,Te^i6QWGABYe?qm&MDrpd,9>:4+gdEgUi">XATN"B-?X0!PJ/s6</#0%C^Re,R_gDY.Vu,eC2@Y8
%<&PD'.[ri^MOO`Q,6XFWVSfB&[Y_Td[Z\f["oSfrL:h*Rr-prmVK;d/+[Z`S0SqY\+[[;:id*XV+[:^%G`^I[NBW#g+[=uFYl14<
%O/'<>H35uKdF0)u4Z#2/9^gBelEqEtOc)N^$1H9HK\eT9,G](WB+ttU_N5c`1MTc:KMk3rTcF"t-q28i8dEk)QLGh<^@'4)8_U57
%4NM;GU1:E!RDIT!*EINi""0(T2fco@_qp5^K'^.>:_n_X/@:.T!]H9)K2=X"#:b!XXFhJV2@S/ho4gUHNX.H2.@WY10+nE4hK%#=
%l#`Hg@+6F_RNA!V(NmfgaAC_*8EWAD;![s`/hENfD!hqNPktqHdO>6\GUJ('?l2_m^D$]&"c_XsB?Gbe0UGE6&UDHFKEk-a;MJGH
%UR%JB$CAoKEk+.5BMLq*-^Gq^=k"]5,bSHP-ToL-\l*VU@r;DEoZ!k8@_al0a>h:ab`%KH/Tsg=@7oWCEJ4McPAW^B;ifHF:n3;]
%9>VE(+go=k46N^:EVY[FecIKc1?W7?9RMC<jL(>[^>@tr-rS`(l_0,3g*(LgC/o@pId5XS:GEZ9jPa))i.Pe16?0$FYp>nAP36P1
%,Wd+/1mRl;+=WaJ0odK.fVEE8+WFXSa1Z*TXB+)2#^NO^N<_S*<V@$IrYZ5V=SR/C>m>KnTKje4+J>h1b#RM6cMqQfO`rK;*.atI
%d:`ZGou>e7;D'>hklAtTN/@6S2B8uKan%W;;G$AB<pAj^Pb?#F`D4VdWWTFjV8)'MIJ70AKS*oMQA6XJL1ks+d<I]6a`E!Z/B"YX
%M+E/Q5]R4NOESs\.[pe)n0\G9:/b?N!0):"=dK#k?!F.NOYr0JqcJITKE6sV1aA@/1j_G`mi:4?!]1<Y\\bq23"#[g>o(*r.4D!.
%co<&p%=h&mMVQo,<-Eo,)Ae/AcZl<RSsQ^HQ$!)R\B%BpVN6fKHO6O[V7\Jd<&0bt3g0P'5]3/,BfMTWmBT\g5<;S744Zt1A5"_"
%g'@/6WG/N8VQ-e9ZPcA\^dM`3(0\kbN<Np<5P.j!]jfEB=^,r"HF,8!Grt<(Vc=.%<mp(nR,f2Jf<T:]8m!hA=*]0:Ef,(AJ2G.m
%[]4cnbL@&IW-GsepPJsiGptAe#m8Ku4aljL_RN3!olHHo`T&FLVTGE=BG_a5BG?M(6l5X10PcCSgIV2A.ju0>jh@H+Ek)#/4@sIh
%kS.L=Aln?Ga:RL>g3\c+5V`,p`!qOA4B$"W3:TF"+7k.Z@1SdTbRT>J'nOj+;YFN?NUou>60n_A8p"&^>1#H$Z(BrHM+K(')/3?*
%)7sOPfij.pTWCa*:CuQ[+FCa:FP!9V_8qKhke5V3Zup'47E>Hiek;*66NC::2j%i:mflHcJ]PMc9o3t'&%2)$:aEGjmTQY#aG<Am
%+N*8Q>%g!3d>Emudkl:7G%%FUh]q\YUs9O-8.APE34-+F]d_O<D1->4]WLX>5hc(kL+TUtD;9@$HUb]<](J5Ec=0Ka+rNcK:#;5u
%Gb"F=At*$jUDSF\mZG?5C<jbVH.X]Ijhle+*KPaAaB<=:#I5$SUEX>#4W/dY7(5`U:fc4Y?mFT7qeVjYZ2:bJGA/iWS@[Dg@V-=&
%(?VU*7m^P2lX!.cNHk#/$GBjZ&UEb5(2$R@A5jj[j9t$U4];gV&[EqNJt$\UWbL6C</h4dS(VG^'r.L;ps,gO[*Xae`F"U^$r)mo
%\eu5qb,rCh8eW*:mH22G#$N(*;/rI"*Z)j9%[4LB'cG0C1(eWJ*G!okg-<jW!%#OG-8IAL#LsQjg(^[8!;Y.7Nu*-?8l0@4<b:([
%C:q'B%:/5P\dE(Y+C;`g_.AP7Z)D%#4C=7_PDd8[<j74oY#`=sP#i1neg'/PfNkUeLg1H"m9BdIQCAE98A-'1/g\,56%/pJ=onYT
%Cn.Wo\EKYY%1kp6VM99N+@7T*XUPr\>)$[S(7REq(/"q_&)E3HpmKQn8p1HMGL/_>&Z]U6\MCPIHE]lmh$EFO]3<#jf[YklnPn81
%MJ)@r8>&EX@TQJsH^>;=b$o/)"@53p]3;H_a/]OeB3-F&;8Bm</oVe,<^n&PacM4'&k_,S4Y#uie4>SY,\ea_dg+Y]GQ!<<M)U3m
%3ehCZ-_V7Ba_51]2.A,?A91>M_sV&uFu,1_bKW()q?S9R)p6%c:mFdkUP[?2@9K'OBHPg%L2(4sakBRW25-"reqe=YP0@KK9b)T7
%[CMo5djZs*;\q@;&..)f(3YJ5Gc[#S7&,L5h7!(M@F0@X>TH1+g4lo?$#Rnn7Z?GoCb@5T4&[;2O4jM;\g]KHC,clP"HfbpAQa5U
%$E(;Z,hPXr8`SZ@(It&+j-EE>e\t>u[%T$a65q;[%:aTh.[LmVS[;53VeOS6R_EWiOpkL3-_YY/6D2>3;A1pLP>?TXim[NJI9<nZ
%eRf)X+uPH+4rJ3rZmLafQ!CIc<HjUD)t_^eD<)Xa"Hf>dj[1d*MeH9%9mh&E7WNB-PWio1Jl\9_->*E`c@e)>=qepC8h*o>VE6f-
%?a2KEoW/Wq&..&e5'SogaMsZ^!i4::P-k$mmDGr8XYrO?dK["Q$#PX.-B-cG>cp[fGCm!_di**bf#T(ljD64dd2H+4dopG5Zh%Ld
%E`J_'=k0`WPp%Jb"'N]u2D/_P`p19+/h>p1l)iAd#*DZ5/Hc[_!Bo8=+R]k6-m(elJ]ML2%]%fN"<fX;nV9f1`?4qjeEaA=HCA#L
%j4XW%(4QV>9jO,GWnY^>]ci_8*d(D@'Rsdi;u!'.VLg)/l=OL]cL*_m*F;cNM&rH^/bY:jZe.X.F=V3;D,#+KNBJOY2kj$pNO?0!
%Y"[7`He=_Jd).3"#1=!lSNIHoZ$nhc6%N!>FoP[@(3djl=ko]Bg.F</=q_q+BHa_qh'?j=XlXSGP.%kfj4V9Z9elksl.,::*i`(m
%N0\uZWiSSt;Nhl;aM_6*+c3ap2X.Ur#dTgb)ph']M7IZ8P0%9h9JKPCU-ZU.pN8<kS\+gfhMqA&%d?',84aIu2(2I+odmLDC78f]
%2=9p->o+gtBO&QF)^1$e1jRP"fuUojGIMiUA92nAAi4F1Z^s)F1i6hkCc[V";Uc_e>*Q%f\sD%r<D><5W]"S#i[3C18-_"PD:3<4
%S$X,UCY;s\Zo_:D\F+H]'9?k7-:H=0"He<&:t;@@?.HF6/u`W\OjnN;[M<_T[733U;+#"C]1LbE>Kc0oUeU..QmR5u_Pq:p,hR3G
%#;q30B[rtZ>Lg:6.]I5.OArZF\eR.1[RLNHQ#2QT7^e/bo!X_),mF7j_Sjq$^FDp)q"G11a)1AN$%+a*geC.!kb&c26TH4#<Nlcn
%KG\\FZ9"?T-]8,L!I$9l@`0:YW:9[=iXXZ0L1UBhKVL)Ifggg\Q^Ubk9paYt"iNF1G8rkAL`M6_BHbJ%;Y4u33RHGEMMX6Q:=oh'
%@FgG#\eR0TBQJ&h+<Q.@N56iF#&>l6=RE:%>dCqE#]p?-E*[!66Zu^)-qStd&t#@D>=,;.(q!j=TSj1&orQQt\pn3`?;cQe4DIB?
%LH@`\Nr:gsV8)60P"/`f&_B$J\j))=mpW;'m^sM-O&?F3;If(AHgdY^0W?3=B6+AXOjMlMK>,OBNV56ro=M>-D%IP3R.d@bBSl2>
%MEG?4h1#$t)Qr!\[rnrC#5^6C&2jjD\EM<QP6!)-<$5uYJ[je8_WgXD^]X/hd/o0>!&R:\q@\Sh^dhan=Pgo8Gcs)#AK*fd%S^Jl
%->:=kZ0NB-dC%".UiS7FOUg7ZAUm@.+uI@$C5Q*7fFQ%4)B`[2(-#h\f?Dn@U!H*@Nm(Cla+L^0W;._SDR%2\>BE.R1a#"_;c\K=
%*V/`]96!`u8?%iudn65q1.`WRKoY=?;E$/)9B*Pm.#J0$8I&N-49RL<H9jikIs\*u+u?7."g#-TDdm7?>-$:n8FE*:YYp7Y8m4\1
%3;,"?)7(o(]a.6,;T$LJFHV@lfcX#/EZ]_Zq\)6f]jb5OT1;$?S%C4(\qS>@N3G23XUK`7SEoIF\?Yo^pPFr:>pFsmWQf<3[N-@m
%D2`IH%]7]8<_as0mnAZ!&HiJAgaP5X\N&XqYT8s%5.OFWFVM<8_k)\tq?A2u#A)40On1K<)cVQ8PuIS,UcF:<*CuWc8@0,2]/ao]
%*-uFhIG&^8lmG0^9$(DmXE:^@!fCPb>G=]WOqP]?8G:6V2\P\gXB,B/e9\_L78U=k2`]$)-IEITB*tGop@GH=1sccK'^DKU5X4nM
%.rTs&.)2MGP.l$@"8r3oE@rD_(`1Pa6`QjZo&Sr$WnFCN94/fVhE$YJ.f,Z9(q^7822mS2327,4ha8$`a1BcpqeTZK0YfS^Le^@u
%lW&bX:aqi!:CA,7_+c6>;(bCA5?76<c5ZGuM])dk[N@k:KA5]F(a/D]I.nee><'(s<BX.&i^'Xa\QR#F#dnap'=Jr9[rp\l=R%TD
%6'X^P4L'jg%&p:!lO8N@Q91c5H]Lc%,srt<SQdZhm%nNpXt1pD6XA9&f5e^1'Wj^<HTjg,`hKMl'oCSGlu?Cr4%;INIE/'*f!1+&
%GK)jq<_%uiFYIg!2X22t2DuKZ2MddO2V>&uCdKt`g!!n#g(\<C_6Zm<lLg*!^IjEEp,j+jau_3`<J>&ZM*FG5qToDG&n2fR#4d4s
%^_0&hlE>c9[&:;S<SG8kO=E.QESqs>LH??e$W:QWG.NG![Zo1VR^LQ<hiJl_WUcA16C4o?7*d",1QAoJnXCQI[cA1i[a,/Dd*YmD
%M_F2K[.%%lh83*A/rO3R]?%@$iMd75I^c$,^9g7]4_pk8JG5lUT"6)]WsVX608an4_j$]:UCN0&RQ*;Z6P`cn-j>q0W!%`M,;j"j
%W1hQnTSpIo8g!&pSh<.5LMCWCTbL_NBOdns@P"]nF33nTp10;mS#WrpgWEq-&k(/+Pbm30.NWB$$.5\[Bt%)m5-4ImeOE)nFTYdr
%"u\qS"30b$/shh[GnN]s4r_IYA/%k;^Dkc-Oe`Ft8U%,U`YrOm1hp.@54>%omls3bH5E+*6VZ-dZEOXPbd9iujcsX7.rB@iP-@<h
%)ibnX%*8<&149:fYRP/PGGn-S)JLsC`3?=12Iq,>PEC-o/jc#")p!%XYd%'k2dZ5iE`jQTX-_hh9T(gYFDVE1@`SVp#UN8"JJo7m
%:"7NEFuroaRH[QEY\I@Bbn+o*2iqLm(i>5=-B-cG>cpapGEOkB]JXO1INspsP-gqLVDka#`gUQB,[W`,g.ZYdYZfteZ3H\d)oc>F
%YVFP*2ca!8\M=oU8\&P2CV&b4,EO%2ZCu[6@:0\+2:7(ILEe)+VE=%[WaW"f6VPc0ZChM@N3jpjh3D6J8j.BMDOT$XDYhoI,DZJ>
%-m'$==@?Xn2#5gU'?Rd7:\q.@=KAG&-KKodN"'SSeCoo.I<f'u^rS,Pf24QjM3"A^jp@t.&u3)u.)A7Z=j.PS,ohcB.mZh`Y/NLX
%N>D-HON=8V<s:@kZug.%A0F`6-eCea!cl2s@Ak->\`?=$eOUiZ`&*01O`W'F19@`J$sCYMO%M5A='%Q?e?4Kf0oZt>AAYe'9sW=S
%6T*k[K\`Rb@5m&oU:E$fF2X7sbn3_uSVGQ&\V:SKA2-P:WeXVS>mXZnFtM^1Bs`\o->Y/;,ti)/e;,9T;Vd"C]WFVDFi(S;-fWe\
%Sk(aC,QZK;TcU37:Q1TA,d+7;/9.^+nAGH5^lq@D8iHcS)[9HXP7;<&g*Bs,>D_I)Ei,cFe(/c50Z;HkCV1>3V4+$CnuQi[H%_QZ
%-Eu]1X/Y;cC<r,$;._j-)++8<+O4Bk*:niNL*lq'+VlLjq?6D*=^7A68NRltUn!oF.V;SZ3fXbMbT/)mdqU@YQ.e$j9U(r?2W;*M
%9pE'^%]LB"KNj9jiDt]aZFDCCZ8QUEZ8/R,BipR&dqOK&md!-cO]GE.UXYka@A:tfE"fC>XeKX^G=\Q^^d;iNDI[?3M^oIDBj]oN
%P]%4+JP9TSLNQ-f]EB"@BGD8q8ZeE/-*g5-RUfXU-F-f<+f98(;dP;<aVK>+Eqjdo9:,ZQiMH.\B6<B06<k:d+1c+.lS1j&CjA/d
%TeOnqHkX0Hf[>s;m6(OrdG^uj*;10<#%F479X>;WMJn)Or%b(Z_r$hNgkNf`9jZj!1LDLN.B3HE68%gJ<S)2HKq.]\>eTlWp!P\p
%%DnT+Mrp"/PXICU)\!`o.F1=tm6I:W^e#hac,q=iM$@(b`pa9S=S'>-"sGdU>*`eV.$$!uoY)d)Z&MWrQPgBj%>GO@N&6^B,=8K%
%S`[-!IH^h$(ut^7jgS*ei%eP?j+pJt=P>s,oq]$7HNUAboOqRjB9.BOn->f/O\'PU=/k7q?t?Z8qOX_l8`.^33Gpu*[U?gAEuH<I
%T`anL48HHhQ#U9gBA+0_i*6ZSdaMV^'=+3#6'(Xb,b^E^3.^OAPj;3^h/t-:;c=.[.+N:IH#QFmD:@S.aJ=Ao5hKa0-0SZjb;S>m
%,G-7n;Z)<SdMR)dK$S13&AmYACFb"=/-=\X6Wq2FJV_?KYY"&p]N7aFP)\k=2JTB^;OmtOlW8XhQ;t`HZ9D>H0=CK'J-gece(d6C
%'NkSh$ED-$ma&L.F=7I=$@2bToj#d'r.LYM7.e_a8i@7V[1S[:FliVm$dpbmW[c@u[nIUB/CU'6[1u/;eMo+f#u,itTL+Oc=&JAt
%7c>na,rM9kV5>)e$W]k4It>NG>p=n?Lb@!G\Ub.KN^QIOQ&o0jB#Ha+JR,D^KXSiPeH01gqnsYYWH$VIctZ`io]q?.[M.G")^6BH
%SbUuYcLH!daGpl=m50;[CQ@3a3<$r:SL2sdZ]mrrAjc:a^4Jf(jhC@l[OT%XEgNJo_p;IY[a9<&/T7]pN'D'b5XLC29Ec0fn><if
%p=8/>Jfq'UUdtb$#q)o7>6ASCjt5;MdX=CoWdt8ZH19Du$4Q9YoiW7.mkpX&/VJ:MkJSMV3,nBrc//9U:R-H[L+N'QUG5]WaG6n/
%dRi53lX<tH>6j3*k)]j94M;:'N0,9jqAS!,46L`^cemHUF5Bbi4MKFRj-%lNFtS\bYIWlj,6_WFf0E5@Euo=Z7XHt*dQBJOSXu=5
%)aG4,>2.]XXOTcJEn6@S5huNU`-)6r0<s34rXKN$c:FWdHCI6:9W\J=AI>Poo^rQN_Z*0#<Ko=<%KBq:R'PnGlLOV)>-#plLGsT9
%AFLAuX>?UZW5GkK^'`QoXY"WcV1cW&Yh5tUCorD38LYm[[^2m<b$)r$-KD_2U.'%[AS1R&llfA9+V,KMk7/+4rCkBMZnq7^D7ZQ$
%;?NNfKgMG\<EJ*!XAqKpE?l*=BiY\*)I^]F,)"D$U.9o+CST![6]Mj_91oq9PTYg<8/W3s`2'HtY!Y8[cAUE]8i9jF\EQT';7s&4
%G^h'c8ob\@d^Z!&mM%5sW[K9RUUW-8V*&d+'9l7)[tM>-)lhALW^H>j6j->u"Zks`/?!5fKFH@4E%MPA=-WT'XcX)+C;f<u*C>oN
%0TGFL9-TgbX"q/MbpDPIe^t?a3be1+>8'e"9o(Bt3^`#=Um#u61<.kpp[G-;!hK!@(:9:6'lThS7L6;0*g=$ph5"o3X^uPgRZI0l
%&T?$TeU(Ble--R.o8J_DUO_JPlXHeGh)*(9]/aM-;Sg!`QY_5b4`D8";4#kL1mT\K[#Zle=mmF\BGhDW^<kPj45A1Z)kf1<5sie`
%Q7ZdHHe47i`h.'hogH(m@4aiIH=!aEm+j!BA^1nYK\@FQWaHLQ_?g$$m%UA)Dk"HK)=_4bQP:oqP*_(]`o9]%$(2V9Re48ubVVZX
%k"!F7Pj:#7+.4s\NjW(60hh*-eM-NK0&$J"Sk$lPV$TO%<8'KF;]c.B,L1&)>ccVlA6`+m8\CB?OX*.q3j%N&e."$e#&43MN$QJ`
%&Ri,3L1O=o\4D?X2@0R-SZ.gdJ/FpYIs9eu1YIau[r7r>6Z$H2'e\t:I;nGm)$:'UYS[!5?5Z)<4<mXO;F;):n@pnX4:h$q8L7qk
%F\A3AIAcZ,&L<"F?ndV.Jg!?FZ;La(HAgS&%GlV6=.b^_YPf"m6t>+o"PfFY:H96r@.\u2liD[k"5*#<`pKT0ZNpHL(:N:3s$,I(
%acRbmB,kSfgV2,b;,Pp<Eu1I5)9q*B#)'9k>d07:3pc^FJF&7=$u`+h$aqRlWX4,a_0S3Kf5&aC@,m$Q3dYiS*_%nqoo9Eg2fL8)
%*hhT+)s@47CrMP;BuNQdZj]<RN0+A`2Asr#NDsatF,DYQXFn%t?%@T=V$*7^EliVLc@(,oOsT)K[!+4UMbB(lliM_b[CE"<Bi'd<
%Zr@YMD\T80KgnVa8>$8@[=gL<grCdrp3G$hHaW'hn,DnX31N86qu*SM^O>^UrUH6C^\RTDYJ:+#d0.X20Ugpl4u9"-Jl>TM^qe$s
%kgeSuE]u$$a0()<6VQ;N=8r%N9&IB3?.Fg6aqNbZKi&*NZOd4Ym!a$7.,&[VK=Va`CL85`Q.$nT=SJt:)*7DakCRUS?2'BI<aq_+
%K.hD_6h-%XeZ;f)2BrdH6^sn,(r-:m'#="$D-s//o1`aC"1k^%!l\grO,)eFE,^MX8meQD*=7!qUq?i:fnB&Ob*CM5G&]'VNZaQS
%8#V@A%^kh_VT5>m)"X(^.f?$Qr`.`@#EH3-[skbccAmRd/nhja@!#D0_HK38-Wb7XGuE73=G`YWDlsMc`9ZMA>Z_/c$.A[3/Lu<V
%&WJ+T^7u0mX>*U\T\f2(Lb?bR1k2/jY^kn#$)9'V@".`KfATfZiUTk:KfI*#ZJlr3n-)>Y?Zf5jCSkhnNBrC(C26c:AHJtn1b\E%
%(YK9`b*NYk,m$BIgXNLDkbcIWYh5jrP6p)'!TjN#1kREUp+o[D&,'8Fep3,li,53(o0,Fj(6k.6?K?_Hn#GTcM'_0[o.!'2%n&s+
%!,aqt)Quj=/1++8'Kto.O>MFT#Fp2]TPQ'NeC$aYe0Go.<eA=a<%edK*.biZK/oZtTm_e\Lis>8mq1i[FX.Z\\`b^a9#JoPoe>Y:
%1%;[kFEo:R(UuUPWs7m^UMo#STI0VIT]r(ohH*&0d8W:M6FNl$%aYiF-4"2]6YN*%8>V,7,hLB^fIFhS8.*G"3t5`!aEc>r`W0'c
%<,+j;fJ!G]U]sG1d,:Q!KY&a\QPI"9*XIkZ5dl*l#X+;fDi,P4!_'Tq7XqA:CqZ8<b(^O$/S2;h:R`h"=t_RLd\n'>$IVf93]?b"
%+LM"U-'D7^PZnTj1t7If#I=o,!Y;:sQU`fYePuk/G=\-5P@'oIf7VGNU(anAU(r5(PGk5k%'eV^@&R9`:$GMFZlo!pMZZ7Yh[6l"
%KC3PP6Z#3Ef9oK6N`!mu7;E2%AlE^+\[-+Dgo79k^$dpO3&XC`d8AVXOq9]3_)"fIS"?C^2aj:F_U@l!KT)[*Y=#(l*?CssT;N6q
%&q[&>M+4hX\EM^N2Qr><@9gpLZlL0`m3i:G6fREEB[WQ`;;/X%o^^otodKAZ)`11Ad8AWf3=4(`8VgS<W&HerMp@l)o/^T0D,mKZ
%\WaIsUU2$f+gtO+%Rt-;QlJSBs)=gZ`H?llMf5cMTMaF'Nm`s6ais<J#bolYW&C-&o?Nn<o;&`pgnPmDFn,?Rj@m5rdn@#@"\R@5
%.mShe;i[fT<%cH10@u\>S(j<VH^/QH`ono"8K)O,PmgKrL/;f302<2<A`q@EH(D<6Dc<i2Dj,Dc,pBi$,`"9'US^qg3*3cZDFhH8
%D'ZehdZ2XPLf"IEes_Lh>8a0AfdZ=PgfZP=P;_ZBG.j^.-Lj&f6?ECP:hiTD(/q1pGc#_2PZ)LAY>]A'[,^`lD,cZ0[t[^tG"OhW
%GF$M>UeQ0)h-[.j8N`%():0)U#e?gCe5Rn6B8W&A9teeg9YF0KNmCX[;$fP>RW348ZW#T*\[-+dbU^S6Sc&N_h,iM6l0nY?@JpXA
%%"-'c^bYWtEKS'"]G!QKe?Y-Z!eIWN5JMZ+^A^k-+fP9=n*U=E^/H(a]"8X>$W.R9-b@BBCgNE=>7O-HATP\S#/UfpM6*l_f[&?_
%ccZ[RHJdik'mN@Q\nJ.*D4:i#JUR>ha&MhT/Dhcd*)R#.eejVg.,%sHZY(TL1W45:0$TtmO:]\mr:3$p]TANl%Hfl2ZRH*!7tbkn
%'\AcW:B:6/J4nI))5-rg1i&m1U!7UR;fQ[QfTs6i;nW\">F5P?)1K)HgW+HI(7,Ta9;jd'Mi2JCqtj=DXlZbM'$p)\QT3=HFGXMU
%+,<7634c2Wmp;lnA0>MU.8XRf3B0]06J%:ag09tfKNFWZFLoD3)6lgSPJ0hp_OpRnCmikF.j;u;,Kn/*DtnGX]n<HBh\SD:,'a=%
%"6gO*._4aV?,ZARjrp$p0nuX+JT=Zo:m0^K*DdoB_4QM6TKAu,8#h(&MtF"7k@/^Q6R;iq"!6C!P7mNu7NEo^)VXh@5EOm*S:VB2
%+V//H[H^C<%+&VN[M)(G2TqS\kd"@bEcH1n!e#f8V-af$^hB,TI[J)slYc,K*S5)RASe-8B[%,4cLH18p2V-XaT+bF#k_e.ESe74
%CnBE)W5PfOk.OXGNfMP2P_?O]c-jYZUfmQ^Utml8+A3[J&:LgfZjjU1[\7onp<Q<d?:dK=)FD-j=^6(:/=RGJgQ&jhd`reZQF<J<
%g4"94K'X)4,PEPQD=:)0fid$ud-<26D21Sp4$#tq4sqM",m7(\##q'd`HgXlZ?a::1g:]<BeL)XY,=ZZ(sRl`#o]n&7#T&o;K7'8
%Unug'CfM<o;_.-p\GQ24FutR+LomU@UOcQQFQ;06)f:&R.QiqN"(UeCajN(6QOSmBlL1,5'Zpt[,LBK`3?&^b^oGcU%W7Ot,)tVm
%?0^ps/q[Z;>Zr8&/->IpAQdE9F(]F;mno^&L+XN?GB\$*iST._mOs'FVs*[j4@Oa;G[8/OPnafhkpVPQU!NT"/=[h)S+HNtkXuH8
%^[/0/1S>K)XU[N9=I85U2_;NhBAmO@:,H%VF#>bE5stjnmEk2XL@j"N0,'jbr%jG92<cHH6ZAG),YMsAPpJ=bA2@u&s"I&t[9mZe
%B@[t4^?tf_n1)frK602598Mm['[KB1rSacM4OB14#K;,Yruo3!?"GS!Z%)NJ`(dhAj(/kGnkEh>hXHS+fW;\:+V1J3e>9^T9oW3,
%$S//@A3G_0->pE%(T=qUM3Oi:1]MFY]?2;GZ#?KS*&[rm`\7$LRF#I/*WLZ,1`aJmW1+[S_d/)h5Xur0"T^YYS%0@^>X2b/5iS"_
%1_43JdlrTbjba!'o'-R7d>(40\bi=*$1aMq7"ZK%Dm*%.kf=1</;B2AnXK`:Jh72=&$-&uH1@<X%D_@5f5\[f.ORPFj_(V/5`=g!
%9HFMDT6$'mc@^pu/1_A?VF@%g]2,!eDusfU?TVb`'r7bO"pZDhAQK3]qI-"rlWdIr!`Q)QLBf#PFr5^/2B#IKl-Ylb^35gbTks>K
%pNq>E%Y?5+mZPJUj(7B$'j4\a7mCjU);:jh"S(2;F@5<sW%ogHXs3V^=OO<TO*?^tkO$/!]'RcOd>Ms^Y]_hd`_&:A\62KI("\F9
%I<EfN2e`2tBXj9c&8H+7a9h0$,2?BhpQ%+*6Vqj9k+Lt]UT@C*V<YM=7G$#&MTLlkM"9>:7ssB.d*WW"A@7<;n'Gs0Z-Q%cc]OjZ
%&P^rW%R?1a6_N,,pI)4:@b4n4h29^eeTDn^HU9T'4pgT`H^^Tk2KP+YQ\%`K+<0.J(3X_+Ak\Cqm:pVI%?i8<EBHNW7<.:diItYN
%^9+nag=cLY_:Q%YiR>X@&aME/+(YNU"edV.K6@_=R8@2<1=,4_!Rd6o\ZI5`67Y#%=&Wb+5Z[KYOqq<7^0N^mrM#%cWm=b.6j.L]
%CfpI94tla[+0\#n$&tCPpDl'N?-sAo+AkCmq1SHmc(j^.gX_LheO?CneCuD6++,o#\E#r7]\rl)5o+OfhbNah:Y,;MM+2OJp0jF;
%^Q/h;/aJ^pU+J>fmX"P=s,=C:Du@taUb=iDpCS$laPU1iDHc&2D^I)^bRDRR[j8"9TftP3.j@`D!I7bR\+S[ZU#F_AUQe+,Nhl<B
%`ri,XTl3YU,$#e0'D5@<N&a1585eh1A4!*n:>s5]+NUGgI;8B=U)SUl]6E\CkZiL+FHd?+3=S@H5c.>;'&4Zb/bG&&YV21pjD,WW
%C\k7k<daOO:^u5!Opdi17MV^T3tD]AI8#LHHip^OHs/+I3J=gbSMYN/7>rS+GK&DFQ`=TN9Vm6dIcr($XM&KjM_/J]Y[A2_rMYBT
%Dqa@HDGWB?k^<[;Ui7>-qkSPVe(dX\d!'o)@;?%?XrK-A"&s'JjN\qr:CQl2SQEEc'_YfM!;"n)q]Lj>ThkVsMkH5I0BlD21.(*k
%E_#c61P38$j49&<74Ld>@[msocE>.ZRCHqs@UHi=90@hXC6H'40iZo-f5`WGrNNS!PD.(;\'BnTG8F3'LGZI\QlCJ11t!*m?7_ZT
%o:tc[p=a:f=$=n'UX#Bap4u6`B=#;Kd$fqXJV+ngfWc0L[hiaC(n]!0/i`^lrM-pDm$RdT@$.!;:n70<2VAV[i9\@'fM=m?U,t0Z
%I]?OoBIX9iY[&dfl_T9eF<S#PXlc?]ETK-/aM[G)KIgtO8A6sR0E2U?PA(tn98MmCe74SJ1/6;cSkd+51WkEUo[2QVC)UHP(%M@#
%6k&Q'c;;9+ek'G,9?90k[pGe#&9:"4BpAMnpcNE,`-UnXMslOHbD`&Jc<I\(T:sLf;]XjY?]4_3[RGJDhdGDDKQX-V`hKKX2H`+=
%_Go=afe"<#5?I?;YG,0Dh8[$<QV:qcD#<q4gSiMdM\9(Rg-f5)/E#0`p_;2Ds(l<tCC598dR;a?S]dn(L#"SRRWZ&7Zu',?"M(pM
%#KCh%3=4@si)^/BR<ZWYPL+#WSfMY&CDVs:2#d[_]40etF_Vj;NfQoc:Uk9<o\@SWa!pWS.,?<fo*g]/]QD85L[C+b2jY]]'a<lh
%2WQI\q_1p3F@Cp#4FNlGrZUF@[';D;NtRhZe##]=F3d1dM]<IQ"6b>Cj_PRa(j>2Q.6fpk0crrCFD-dFBArU&R;=sWG^I,@>E<2[
%!>W1J*5/k*9WLFbjEh'k=j:t?$NF>5+1N\\gkS=0OIY<(M9ujG%]N0G7DB*QBGdI/c.9f=8Yfrg<m.46OXNk`e>l')gIBa/AQ)S-
%*S[=DOiX>uoA#'p&1Os0M3Q%gj;c*!Uj^WbK*QJnMaS\*djK$/kecCVhu%Hj41RD?ItMqmT5e]Lh:dsFJo4<*%[uLk>E]3cIO%+,
%#eorV"=KXeOQu[WLad^QW]PFk(n+Dq:]qM$R08X>M9p-S8FFbS/ri+uDa67X*:8ZEd3(%J]-S%e#RO,5cuaZVZEb#(cI1C?+M>5J
%KnU9>5+o(;9"4/Q.`JnaVip;]!]6Fj0jIh&o<"M31Fl.NW'c5aBK6gjQb$-Lh=FMHj+l<I..5mJ(L6UP'A[$WpuZ:Q#OG>rT+6m"
%N34JeG/nfgbHTkC#4&iQA./]G:3aGc+ZUf]hVp*.4j$nNH+^IliM+W[LEi:$@X>[[2t6.e3(a`T`shkoY4%ilb*/r0Yc[;5^Z"QQ
%$8h2R+["9fFcfL7/iTerjI>OpEQDJIBUspD(ENl-@gaI$eg<l`R:NFPD`JE\"Tc2I3Qm:Y4uXq(!T<G%lb[Ol!kIW>;A>JE+N?[[
%H!+DEiB_*`\a!9?QoSU`B[ckoNe.;B::o=-Lj+WI5nO:ceh@j%7P64,["^:MVKHGh)9f5+]^8s/6<nH'dD.:c\oI0,j-d:uD59f,
%%Ld3>U"s&QfG:eT-0.&uhV/,(A3%c=$u6K_7GK(UDTpEG5JndsgH"d66!S&sdC*B8[N+))#<dLO[(;l-'FTZo8J@U!$E*OW^'M85
%:P>'IJp(%+\7_;u%Te$%WERDf'$On^1Zoq)U(X.<"$BUYRpRL9QH:lma=S"8=Z=)kn6i:P:C*n.'[X!cI[[h'7S$d=(]AO+Qim(^
%".JkpjAL=IhC$Xtafm5gOd>N#WAjuS_G7Y<7(.2lGV'-RB@dRg&5::$,]_+=C8iQjM%S6mD*@UOL])2$HJ/X]g1;\MHUh&pJ@RXt
%(?Tp!fXNKO]k*M^Vpnik.Yp*.@/($H1jPfJQ\psVeog5J`Vef4IHE8frK`IhlgOG0(Y!ND1G^8Y)kNHX_]9c\P.0ikpc".iHP=fW
%itqmYh@M'`oU<d/Hesi/72(+'eb<9TWbn0g1An#^,%]X\0J;&;+u#$"$;_ts,MBB0Lj.$G3A>=eCMtOR3$0n,/s%4p00kSeQo+h<
%`l*":e)oKQ&dsOH]rb!QC\R4+JKm*%&gAG.a]UK*.`K:W]hE:WLVpe?*.0+t8l@&$FGV!e@M[?%Yn&GO\[9g36)<HFeSr#lBH;QP
%[tYj%EYf5;d8m8RYB\hD&rFo!,J"pjUmK->Xa"8a*`!++_CjHBp8'L"prZ1#Y$$k<0S"1^H4_Vn)s>*k>B;EMV`>@#"Ura2RZWhK
%)k7c%;YG7OaJVf:2c:\q-PmN=:THcsOCFdQp@\r>!TgNs(?#k&YsJeEYgW%1jV9>?5+cn=LWiMVI<&ip<PAH6.-V*>haSK([t28-
%a2'`rTPosOT$OF0,[7,h"tjV*ioj#H0:5/p/5;u:JX`YcO$L-,NptGQ39RUh98<L!UO`*"I6u#l%Yqjj;,\&;rd`RrHZ8;&)COP%
%!Z3O-"8(e9fLjBu4W=6al[WI%-8jO+IVhuH/L0-[mP&6?/F]e"8R1BGK\NNn<4pRtc/t\gW&Ih,H@tMq-p`>!g7&X7;$H1HoNaS5
%*8SWpOiMPPV%N@<%tj$t8gA#:6%QTh+c?_H"&Jc89>&)7Lj1b7c,6+8<%-\,c^)9n/DrE2hBomb3J=-D@n]L]%MZCm]-4$FICNMG
%gU6gg4PHp(=G@h<eTD<ua,$%j=frB=$@Q>m_&)KaEPEV[-hT%("%Fhii=H[L0H=Za#!teF3M!b`-^]S+6#uA.%8l$7eWK</</Ju!
%5i?/U(J)NUHT48L@_df.)*_Og&L;l&KpiBGFFOJiL.61tPX4#+s-@/05=R42jUsnM.Q6O"bsjB_/o?[2M<,hQ4GhF^(SD$(oM+f,
%)NX&q0ZYt9bDY.TKJj>B6s_3?JDIZ$&<n?M`Nkgb`WRaSf0U'7bJtr2r4-@D61"+,_mAiQ9C:Y-q*[aT"Bs^er!,9'*r:Lg.@N2I
%,(G8!8tBc6pf%%9bc>S?').%.ri.t-lmI#c!lU>WVKG->$"=aG^#"i;Eq3^hOcVejIkeO"o8pW/K@C'MaA1PKhhjGmcLa5M?3U"5
%ib/rFTOCQ\eH#D\#"Ee]JYD)IL?3a1XJI7]_+e.lTUZim45Xfr,[3$Sdc,j`)i[:*(<VgFnsf!Ke^Bn3K[cJbe;`L/@/NgDA5=C\
%4.a%64PQ2D+pDjEM=\k$.2Y$KS]Z]rOWnHu?R0BX3C&d_Y5A%X/\#fQc.E!Z$@3eD\4953'UKB_)s@m]"cGTk["\?'ldGCKH%ZmY
%^;!f?3Ori,j>lKV6L%;?=,R5VH%Zlukg;S'J.;$F%gM6#:L@cFMNB=/+ZfftiQ/H$L.Hho_c;^*&&h&t@(`EOgqoh,1\0b.2gE=n
%$HckRh@RW$n%gP5l4*(sgWm'$af%Y5;>d907ePe[S*.\j=UC*d*g4ZA9.iV!&P\sZ>A.!-"t;=-TQ?r,h`IQ%GQ^JNV"8GXG\#;(
%MI8Lic4C3J#3<l<mcV!XOj+RUo`h!b4h>o@e=3BMh.urdhC%EZaX/bql:oR7]3Qr5q@^!!<fOU;L3R\Al;oq*2Xh*G2`P/dda1]b
%;Ua\;K1I>-a5,n=Yc-3q,:Y1P7h:JLP:/emn3BL77BSFS711,0\9q[i/FBU4aSY2UZ0\0/L3#3Cgdj+u5B/9eh*aXZ'N4s,U[Q/;
%MoRc]CbcRe9cOA&_kZ),Qrknc:N,J2i\=$S!hkcE3!,f1OQ\u)8.(#r")G(]AipXi%G=hT6)b)U;3NF?MN%cIKR,`>S\(:#kILJ$
%_P#K;P(3CR)?lBg.W&*ZC?B,Jlq1AoLMkpLrq\?Ahg]>V3Keg6e^7T`\'\24niH1-fjid'8(:oukf98pZCq;^F5%tA`X1FfkJ]_t
%_;-A/\Nh*-qZ'X.FhMKU?:/^$]HDQIQ3Oh]+j%j>;FbUmZ'%>0XGKdk5u]A0:&4#S8TpoD)d%bk=3;Vs`YAc_3/t1O[iekmL`Hat
%!aS1FdS_!T=UR<DVlp?4=Y^pME,5c,bd`QFjh'L^=)OZCAhib&P%82GJXhDCF5I8J%/r]47dC%Gk\%<Ab^ncNncR#a)\chF@,8QA
%Y1'0d!$/?aj9mGkP8U6-O]Z=>%%`.^(/'bpoZ54*SkQ?^OpcOsWp"WS<&Ae/L27Ha+BKH9G!L4re554_rj4Adg&8?R!(WNATQ[(G
%A(PCo__.$DI[]R>6QtO7?TGA"XdV`mJW0729lE8'(IeHABd9U@HuTU3W=OPtS,NuP7>8BdZ0/b#r<n&klW%E((JH2QBu?md>aKd_
%/9FIP,]d(HbDYq2PY"Pr>km9[oSV,H/.qq_$D(Rr8)i4<r`'(VWJ0h2CNe]r9aiZ[5t*Q^A?@QJ!DW81Z,iC`FVE@*cg-2HG,Qp%
%e]q^_d8,@=E@&19U5u7WV-A^\iH)-2/G0G.d5i7c&N`<b.,q[FII"skd,4B*Xou^EcdMYM&Vm'K[>OrEoW$-iQ3h9=",'K@)=8.]
%Hif.?e[JB9)($c6;R=LrWmX"hY/XXRWJWn\o18Gt#uknT"16.O5`qrJQ@a<EljQSF*d1ZtPlNQLhR0@:rh=/&O(coFG&slY-0qF,
%g/U@'],lB<qQ6HL`Sq&>$q-&Q$lU)hDG7@r@"lEK?CN@"TOBGV]$2,n9Vq+lL.?=BOIIm#AXAn<r#OPu]DZ^5`\nF+'RA%afsWa%
%<"QF^L[p))FYO0!%Fgn9A4^LTN!rMaBgh^?[E42mQ7DQ;?d!IV.X6l^*_(R`pLC6X@H/pd*h0C9U$MH[b$X+50*lV:2$`AfX4Z[D
%W,YRn_S*_h.A8f.)_*iO8@8umY.R]LR_Z>o.LMlMl=m^qhS$PgW&EtQX;@k3++rid89FADRnOMmgi#KH;^GhTaK&M2#Gf$>d]PVT
%di-f^_C."6C(Y$iN2q9`0:MXhf/mHXlHZsBYL#PA8s&MOQU-&l*EP"S@`Oa(SL!sA_'*_Yk)mZ9(WeG+Y@^'-1i9:mGd+T5aS'*_
%Q;!T;9;\a[H"BU_b;J1$LT]?$#Vn,GQmaT2nBr/8hO'WE-DGI.*Lc.joTWT!MGf&?;pFKPoNZd/]9S7#lhNV!`8)JO.-ACo%c3NN
%Vp:Ac'[Y^_aoq[$/n%u9\;D$eA[a3@C#O4S!Yi%'K+GWWPM+j&&ihQe$0.mpqGoOX%fLd0CX<<]G'T3;55FP!UEj!&9o**7e,okR
%FfU'\lbM*8>Z,#0R8,ND#WWSH9pN<L%>2<2&#B]uQujqsFXbbl$%BM((s+gbPhd[I;GKmk!4BchJX'@1APnYe_!gPY"n16tB@Ea@
%9O(`bR7H,oc%0W:5#;Om`n[_6[uF0mHc`uj;MKAI/m%GF/C88Hcb(eTq8dph,Up$0,0Q7aBq_9d!%qE9@pcY*VQj%QY$Z6@:1JKn
%32/W[3;sn8Qsa(`s.f#3G=@F\:(>/[l*0^D.q`ah5jFjC[*OL^\L\XAP62*VDOpttE9OYdL5(<tUN>*(q;EJmki8=<E@W1m(';&r
%CSAJ&V]Rs^+Vi$oef-#"e8<Z%Fu)5:'GuYMMB#dD#/2LrfrdCL,-iq#!$.*lak[*!F5'\krA;.`VcK<Z%q>!"DJ-5Ha61Q-*f'8Q
%]_7/)Q"0X%U>;t6#R0/hr2'h;^]^sFil7roMGEtlI%9hB]O8dG:OPD[\:g$9Hgb`^'a&scfV\%BTla7u#\fL:%B+2Tql"L`5\B*$
%^5\c%4)HIEq&)Ni;F$T@IJ_=*mp!^ma^3t$U#%F1<$<#;;@VkYRH2(^\#.M*/cfc_LDlJd-n?U:U8QBKM9fA>AQ2)lNY-m2L?I4j
%n&K1&5mqa$Q?\a2>AT_E2:@Oda""+ASK=/llSA!U_n7:aSj"tTGTcZb13W#u_(?')$SB`E_Y)%(+tp7&3d<J'@6cU-X,]CDd.`Fe
%%AgnSfF%i2RqD33_t'W4jo[01j'ZqIL!C3]6A[?_LB'Y7b[?D%?)#mH'-Z&+G&@AW=XE/!'pHoYH,se@7oqA_6KXji>!VX.HJ&NX
%)'k6H'lK.#.$R8&B--VpP_B\fS,hYjG>Ul_Z*g;QgP-D\Qq_a2-Vq^^mGhKieS;$f"TiGU(K9DV\bO1=_/B,,fN!L#m/,2kG8blJ
%-KTkOr+3#K*p9Q:IJ<-<?f->1qG3`'lgR?8>Q5J,i-u?t$XGRl\I2[W"NFLMq=S7iV&'RUEHAHgLOK,X;Ks9[pCn"Y_!7cuJT?eu
%$^af%:fYu*:u&,8RUriMMQ#B5QDcb/qQRLp-&1f.r0>$U;$D&HE`AEa\pk=;GK:^g7[)^2g\,WGOLP2.6l=a3eY%"6Xu9e@aEelD
%[sP@[nbcf,V.=QPEP72u"1,N$`jriK[D.1qUWS3LnG^Q*P,R85N3h_&8gQU+5T\/9pJ3Am!4bPorF>Igm6#//*jnA+L@<:@;q6VC
%F?p>'mSh2J=ncKXBXSK+P\Z89WuqQYhOg=7#0ADbJDW*\YZOZK/<1jQQV_U.()Pddp\.60o[e*^cu`PM#3:3&Y(kYPeaV]d(O7F=
%fdpmEci>dW(H#P*m8KsMD'^r@OE-C3l,POS7p[MH6-So\Z&Lud_aq'!ZT*]8?>3-,qkQV?d[I&75+b/sQ8<8Up%,d"$q5g,E`)G"
%>J>4fH9&te_JZD9(H4V,njHcp=%,%S/BhPdd%j`.0j*VDIaZ(X*C>sFF9kS^$1r%$HZF[,Ws:%":SKrS"0+-"8j]hZ]4_HqSoc!&
%#_/kaTX-V4@L*V.BnC!BZX+Y77(MC]W`@.Sk^DOs8_isLhR+?L^@a*'J%0uuf<I/!U>5k@bitcI--J%,2:PfS<6sV&jMYJ:D=:,;
%e!WR(Q(_YeiNd*+FQlD#iYTQkftS@Il>r\K<4e0(mDdT.[<kr+%/2_6Z8H:A7;WSBAkVcr4<tgVStBrjd$B;7+XiD8N$:Pqd;Q_.
%9b59LY<gUObsQ:f]aj7\RC62)6YCWJlR,O^Te5\`(sj/p5E(0oc.ricG_2l\KXs.A3#<L`Rki$#d?$VZH(A\7nK3\kZM4X-KHY-U
%7DC^Eeg7(LXf)l)Hk5B-PH.!;K#/R2-]RpVDOab^9P>%=_).9j/-HF5EhM5lmcMRhJVopEm0)/e#2N6_Ru9:U-s:Y'd6qs\%B"hD
%UOcQQFQ;.`\nU2*c"Q[Nd[2oR;PH__">adCFas[1"Bt>!<=UESSB%;,2/&(SP05ue0Gl[R\:b'#"<%`nih@CTrn^tKc%`iA2m2UA
%a&K/OL15aJ8pr\)KT)9@?I"5@`n?SBF3t^T.9ju/j;N,=.OblsnK6mG*Q8UYod1Rd"C6dgBgamTrVa[q6C`A,ab:O;U0o"\"DPJo
%5OjQ2c3)!3J"jGE>Lhe!-M:H/Q^M'CNorhPB+AT1Q=Y%=nI[-GDdY6$/&$;m`i6^+Qs;\WE:$gE^*8m'_doac"-m/k.47]]$Z:1C
%B#0',Xsk72X!^AP+/XW3AoZaEWNcE/?@sk?)\"Y,hQ6DF4RM1-KHP"=U#'T8c9$69c*QQ@4KE.=b:50?9\N.-))Z,D-JUj06qN^a
%Ti-OXI77_Q%T)_uEEUc2D<kd`=)-)N)n=NPT:o?:'hT[5T6Eh)IV0r/'TF9c)r3%/g0j-t=YMKC29c$-gl'n54&Hqh1,R>TJ;@-R
%'_Mt-Etn;E7OhKN`NpR#[@qf=p<Q<^?3rpIQiY`,PGl0-B>JtXCP(AUiVuJ%!qa8-o)70)I/U0n^`E7=s*T7ln[n8)k`rsPPQO)u
%k3,D[3U4\`T-1cGoD?Sl9.pIas0fC/(X_\FcK=&-!<"833dgrEblXJNCu5C[:.M^%W]OmVm<[O1SVNM-&,<aH,s4Y(jeD]b9RpcL
%Nq.\T01I&WJ-Opdb(KA+@%XuC!NSc#n'0SQ7tj=:W?WHM,N&u!me"2W9'.!WA9BVATb5Bg&E`Jp+I)2rBdZ3S(Zd51(6,_hoMl##
%9ghlC";-Ln2bfjHgPl/'_?7c7NfnujE2Z[OlAil$>FiZ</n&].`/o,l^/a100];JY[?eu+Hm%F`Kcci:=p3r=R%nLS7>CqIf$0NA
%[XkN1+:U9Dka)L:Ipkaa;b'it4-,^uqYb#O@aW1;3__pV2aHd7,Li0,<D]jFW%2YrcM%7/`:E!IYkB8$ch<5C`/H[J[LQbALr::k
%+D+);b[*XBO44V1\`/>3]FI/JdNC$!Toa;h,\8u@W(<[29/gBaVIuSb/*1#K,j!rjE:BkgAJNM!BZqZ]Q\Q=i'X*Tf&:sR\()VJ^
%nq$*`kV>'Bd&V1"Q$HsUcp%?"9-",o9d)3fEYde9q-GCDg9&$Dj:QsPVE?%&SW8]WA:k;3H\C0,B@I?70$_[gXuB,_gr;H&bT`m9
%d3P1'8dM0B%&c(2hr;J>GO@#Of1DHL%+m\`)Zp_6UEi6Om4q)13)SQ<Y9R6@%W3*cKJa.t'3U4t?$)didMTBG=6=r+4;^5f&q[2B
%[m0kCd7pCq\N&Xa&AG$Cf-'=Mo0ik0*Dj<d87J_tTNjgFY2#dqd2L8mq:,sm4@.Ii6<tR1S-t>A-(0tU:GU7A+.q_<N_0R$9.3Zo
%C4_9oVcBmSR!e)-qgoah[[\lQer3OSDrt_r]Ykg"6%a0GW1.rNg0-9CmW&T8[aS>EA8P\2)lNC)'6tb;Mceqp**rnKPNaNi,VN1o
%?MlKJEh]qc;`"ul3WWRj/gmbs"?\J.SP:r:Z:6IPOPO'\j@SM5kX2t+[36eg?[uPJR;=2pEdcF0\d?>`&^%FkE?T)F(A+N`DN*X;
%,I,PA#)EL;:qumrj_Ef5a55<TLMR*X=t+rg,7qg?`:Xc.%:"sM/^juHXQ=:NorboTpR1D6j)PIop_;SuN*k\Z:)5%6,>;F=4N[gd
%;4_<uVOn[#*6i-tSRr7l5>0gE2b2IoYEgQKR9`"8OG*)O[s6PZOSYH4BHoJUOTq]7EpWZDA2DNG]o3sdcAh./(7:6QZE?qcCLWoK
%0R%G%[l(S2T`2Pq$s\0Q-)laDZ;QP$d7JYqp(Q)sMH8H`fB>!6ZE'^gG"cR(%\\Yu`^N/!l5(L*8TeFS<l-:(X4''.cS+7_>dn&[
%g&/>)U/HH<BuYf#M*.3J)b#e."PIE*T0EHclGo-;-)_iW8+q'<B,Z>B?U2<A6p0!&+_GoTpqq![bci$*?4n=q_,M>9Os671+fcWo
%MJ(2qp&MdT)JpO%A.P!2Rp0]HLErE)oYrXX,R7Cl7^&FRH_IM(O_FW.O8Q;9"O[$t;"lhQ#LoS%W')"k[,>AI51ai=4A\flG"2<"
%93eZ+WHL9mqiQo9)>+hi<6;H(i0D.8>^7QD*PR#^;?<t\q8EKa>fV5a8Z:OLapp6;"8?1SDb*7,Bp*`;@?==(o-/e!hA`e$`%r8\
%cFqQaA/"1(F%BW0ndc8W]u8:1[1C0+'4\>W3m:on$PL:Botpl/r@Qg#1kC`ddMSinI5@B9]ZTOpg%2LqLZD&Ne82`I'.#dGH'&_S
%p%2sFW7$LA+G<Bp/NRuP-"]^SnqVJ!]eqDo&ScH_]XA#Dnh3f[I^#Nc3-6#RX+@/J2GnSd1"$6hZfn>sJ>=bp?D+s,$2%0c.WXV<
%#PcDTQ6]>gMBp"TfYiB*o`J7lIVMQ01jFU/$O1RMh:P-VCbtB\;J+k4EKYZb7r17hO%S>1Bqck)I=Pe7\"cgr,8B_n;;PUb/Wso@
%6e:3.5M6a.%"c&MoNcY<bS<Y_Q&&Fcd16ua6%kJm$L0?:cH6:!>mY@&CU\IhjqZ!:_;gsj/ML0^=$?N/*d:*q(X0.lc*FV#)Bs7M
%%<n6g1J/oW--hCB38]f*A&<dGWQU/Q3*Q`:Y^s!q4*c*OZ$E^W;PoRG2KtJ3!dcTcn%Wp#2BrJ0Z=l!+c\5bIp,["kOQ110ei/Gk
%`j4'@p5oF!<1bpJ_)RUZj_QU7W]2Z'-Wd'>Q-p/.SlG?Yl(_9L!Nl73gd+B8Z.V*A##bgoQ7KDE*+HZ>_*"*oPof\SI*ol?Ru*m_
%j4S6dm!Sn%<[*hi5X';:?P8RbZ?OX%^'tY^5m9hEX*@10JRi(f6<n/trb*(D$*a_nkTjL*(pVbW:-6nJN[A==7#qquAdb<$",3hQ
%c.3S3*^'$il[`\7/>Sg4#2PNIdLm;5%tiLihB"JkL/stp[9hXkZ1]>kZ_UphprT9<4Z*>,SKp]80N\[9M0"hY;BY4$-ZIYWf@N)\
%?<U;'Gk8\c(5QQ>EmqH'lZ`=:*!i$#?If*JSS/;&l%3P)\e0'Q=77I+oX5k8.a'f\LT%ac=s@]&5pU&/8^7EQ_T>D:K\77VFkN$:
%O+2rn#5,i%E=A\F'4k;o)P+uBU<=q;4=fg<E]hLm4*K0<M^D"'9N!k6e*T+q/9hK]WPUd^-EEo:n)EZqp8HF26khaN4#0FQClhQS
%"/*8D*-ds)m,HYT<lsl+cjFD6kBOM8W\N>f.2&e0dZ[s8S0(@Y3'_LAakp;%9R/(J2@0EfB--=$dMc]nll^k%D(aR&8@)m3aa.S2
%Vpp\FQSRZ/V!t.k"/J8WDbYO%dhm:dcpjA&^5Ijl=nLR!6sNa@!2o0n-4o80KtasO-.=H#h7GU,?r@Kb;kAcKmUc7U+FRkIMZ)^:
%A%VV=s8)`\p[A+!?+rQ$ps&3`^Sk@\qgH%uKBmNu=^b!d6d?%VfRFh^56P>`)LGffR/tTt$*4pPIMU&$#`m0CluPC(,&8K.!WK9W
%3B`P7`Qd2M0XT%Bd-'=k5:A(OoWh[oRj;>b-m-8Z$6MV3OG24s,X,A16T=+9nm"9U6_r;\CHX>0&?:skDdAYEI5puoVcND%,]<C2
%0s".;'S3[\8tW(C`$j=t_1(h,%qMMh7n$bbH/KNa?e22[R^0&/a;W,AoU2nTUfM&9bEU3r#D[36@0]C*0tA;7!XC@fW=CN5?WJ&W
%G%d=XbM^Ud""o1&Wu^kd([iR'9ZQL6o\+:)+%Sf+^3;RFm7@hu*0\YUT7fO;mPes,>F>eGKA"^sHN:IsS*GZ]Pn9m,P^Gj8L56t<
%<2/D$b/SffMN_B-jtPN\D]VB#mYB3J@2RP>_;jaE+t;+2mk^bZ6D?8U%heE(?A'4n=j02VRljh)/@Mm4T62jfMQ;\L-p:K;^=N@g
%$qcbJ8-Q.A^O-ii*%M_UDTqjD57AI^/1r*/jF`kB*RL0on>pMk9h^CJ#m(Zqb_?la\dA2YMF9d5*6h[*IL:lDg+_6?ld\Q!X>G:+
%5a>s4ml.J`#kq9qXMXaL/!i[9<LRU./kc(P:V5]51[[@Ucbod70WC[D-$6is@/cZDfm,4,GV4:\Hn&pf9g<6d%ZPNaI[Cd%MEB/'
%)flP=)E:O[LMJ%-"4&mBqhSunb%.+ARGI^6pmTgN1`83$9r%]/7KP!=Nt54Bc^6'4]_LGnk=B:tm@fk+PXabk)6ZM5gXXgDKb9Pp
%\p?'\',m3?TNI6\ONGpud:T5^[ZO+oC^^3ClNqpU(M+18.MP7FF]k/WiRH>S9se:!=sK#e\5OS=/Y_!N=l'e_q?Hn;7#Ec7&`jFQ
%*<nY;*d(RPl4Ja!5]7-O>#8Z^ABrs@ZaM+m/K"@g<BmOVcY$KRaa<.[Q.F/;`4a]0W!6TP"LT!8RKJtIFFLQk]mZpSG6aVC[iodu
%Edf:`lHBq+"t$)M3CXeCST@P<oMp;&$W:VXD#T-u4#r6akW9ru.fSX.lOgD,BgV$maDnBFc"pOh2l4b4HFD'R+AI)`+<-iZ.m),=
%%[b]o29B*18K,*0eqc't)?OC[a#_n`LrVXQr*fYZJ9DnZUcR$/W'6_;E#E.lNfQ)53\rBNBmos`qeJk\6Lp73@fEm2W$<\I2VbKk
%([RW-^=l<4]5C`ocKV67kpWT?>_7MiZDn;Un(qSdi:O($%X(j)\AYLP!0\\HI9XK_Zn\c(76-u_U&!1,A:Y6R&jpKs#J,Gp*bU13
%U0*hidbH(0JuHqoUc'#P?.ANa9JIqq^:e05Qm'`1b24SC":eO91tIXY")X+q]r9BYo=`Du[TmD#JOHH3"M2(ekF`3bC[=K.U.Mf7
%^+3ig#U2W2?+^*CckPYUN8_D\/RT&MY''TG[.3KBcQY8389b_2%B3.h6Lc.b'T8-Dq5$2>_dE]f[M*mmemeX)]db7=2qM=W>FP(@
%iE^@A[bm"_ErfLMOpdj"m#^S(TXsj`rdk=t@['>c.OkTjf<u[K2T0_T+f+3g8;%405So542hoOOU4%Tt'+&7&Ra($0=<2b4-)2uM
%_-E,jHPrKmRLO@q@#ZQeL7O8uK64L]mJ'g*?<R?Q7,h=UNCo'\SGW/-$<'LFRuFF<0H6I^[7/s;BK2tYcE)%rraDVG:bm!OX_^$M
%qRR?#-#/]23YQ_\]^D^sCdqh6:n</Ke)9)N3JQT\:]FTs.MH4'M2n)d9b[o/qB]o$I%EkC^/Zn(n`\uZISRbK6_-!r`[n1d_j"u%
%Q3c*2W3refVYhjtKl^TC:FUU4Y."+S&5!_M]Pl?N*Y;,H7(Wm_(\POhEQ5N+obsW=X(Kj&n\[J\6u`?,]nC\6WAs@d\\EWjM<.gH
%n&%HA;*'6eU1rA;PNm*b$FK9,a!=GeUUZr$%.^>85Knao'UKB_9;jd'Mi2JCqtm^(/lF.+S[X[:T2"4hK"41b3tl(+,he_8k&coD
%la^jp[QB.\Hh6rZ?MTAm4eK\*7.h2X%F!i2R[]sF.WWWR#M5d&0t@Mu]rDBRV^Y-h<Ya),rH[uLcc0PT:iU_=/d>5)CX?X/US1aX
%Q*ie?&+\b^KHO<5M0cM-3:GX*2UC4dUgl*49tn-%FZ3Tc`5'2XU:e"XKOi[?1_EP]-7>fJV+b`!+X>R?1^<P(`QKW^>kMgM>AGs5
%bJBD*/<)$rqjA=h(;'5<lJ3L:IJ*U4pKnA2hd?"RHiJM#C'QmX:+jUI7uYb(?&A&rTCh+4Q'n0bJb8I?8/UF9*2e(lb)Xo7^3S6S
%0`bSum.S?NoEI0;IgFKc?S7+21(Hptp?DdqL-=f6JI`\1DJA'drrf:n>T_JoAEKWX,`>jb%-X-ikac4UBZ["bT?@&:A!QE3EWNg$
%nXbBkb7aeOgd/#V`jJrp0\]W3+u^f_>*"<OUh/i3Tr$$>'/`p@2rtiS&BRbXq+r7j@4T6(9C`_FL4o9V)T!)-eqiQ5f`d'USiq^[
%\b.;!B_"!'ObOqH&iahT._kb@1J`<Oc3d$@"[cTQ.&@W[5"kM#]AHu9W#U[]r331u.\;PG#!hc6<,pe27LiuL]]aPHp4]uK!S7A-
%Q2N.iLMmVl>$B[-*-+?,VD0k%1T*piU&qS<0D_AohR9J:b2&FjfSgmrH?glq-c^khD28sKDAG!&_lsW(`'2mD8;];k&hSY]O"B.!
%7N+$N$W*drl"A8HI:lE.UhCDed/qh(5^!02Qf1>i?J^Ou8^W9Q@ECRhRUK9'nl=n4UE-l#i)r=$ogn-Wi3'8$WMEh!8Z4g?0&/(s
%Y"E(P;*L!@fIFP*?907_#QfFo7S,dP7k$Q7OjYR5CJK`\@2C]G[\7Eh#Y[:$:gJ^iR#jmrk\n\6NdD).Tuj%uoO(`c.l?2$/Mlan
%Ur4d^AfV!&Yki"GliHW'&83Xa8bKmHaa8)p`9ThGpQ;>VIn6pNNhSCmAC`Rj"!P$.*V=dD3ad<(5[W`OK*c_)>>!Y$MpD<5Bo1M8
%'$?+,d!*qe3WZA_7U%M5"feX^.g?JC\JC7K!kAjcH@T(/8]R[651`Iljp)`Q*)qdhi1q<hJO(1?%1[o77@86]b&QB.D'[Z!![Q<`
%_ssErc6t`)Zn?A'dl&.-gHJ8D>2)_3cb^K'=g$5Ja[X5A45&,$a>1.K(*nioE"WkZC1Pf=0US^&>a.9M86`m%4rqI>gBR^uk;HH^
%kapkS7kM"Mm`8'TZ*%K=pBEZ$[`&9>b)no/^.L$_&*gG9E+?''^O#Q7fQ`$JF8@jta`*S'S(XLN][tN_9kdp-0PBp<h_>$A=!5#l
%IFl/:9Rk*e&bR`*s+&.8$R2PG,3t-sPBbomD0+aH?o%hEl%0K)&DS55R0/1W6GoHU\1<+3"C.G9\/bBP\I4.ZKU'I)Ihdp8<Xqu[
%ZG[`A<aiPH*F[]I;IpX=\g-VuqZh^PagU4r#\%Zfdn,k/nk,XRhJDEnmP!(6d)!7<PW!4lT$YFYfu0;6&=Q&VTl]dRgir?81gE,"
%?C`Ar,60i)X`ABdO1MWfVW%g:%%cRpH`c55DTH"gD$.$%MT*<?d$f1m*a$\D##Hu==5g3O5:"\302s=p+nYtGO\6$'mbgK/RG82<
%"U;G*%+%PT-j#<:?OR+"/qkl=E)X;C_L:bK9Z1M)+1fP[p`U=h.bUjt#'k4NdLTJ+E$0gfLChfe[h?RuJ5:jna<lhuk=Uru4W3VX
%=M^k$81+(oHZCMu1KdZTq'S=dZ8:`Pn)&QjbnnYd5QBSsBZ^5;S?q:m$lW=?F=,o3,OhPtcUDT1ZRe)2N`dfAi%>Y;`kX*W<J*UP
%oZnV2o_FhpW?na5jB*hRaK#-A9*=s^ouWp$&G1j_O(s0T#;k`53`?m>\UTWfW[SGtI4FdO!W+_gSiOWuV<^f$qed@HK+$+J'lfG>
%h=)nR&Y"FiI-BKB[K5CDW3AU6q$=Nom33p3+ZF8mZ*`J&%:7)/M[IC;]I6:6K#7Y0,,=MA@98HAc$O.e\UDh&-1PkIo2TD9_2AqC
%98(5&+H&0EQV!F6Ef9%ui[oTXc,7khn#$U>'aT`L_*P_/>as_)(?gk>]pHaFi]U\6f/r4X=.=hD-!kD)Slt,L#G!%L`4C*giu\JE
%_Gbh3C;GO8U5Und_@9H-W`39i6(]1U#.>,pOr9)\,j=WSK"NW.;L%ah9Id+_B%o5)oU67rR9e:XAB.)7loK*$]'d0bM'et>.kW3U
%W"l:9(8B/tj>+*e^oL?dC=3:kJ]N=/q1N97##JKmP`=OpZSZ"HCnR=2U"W-W7I8qT@L#hTLukRfd!:m;8D?dFIchB@mujl+K^Ji`
%gbBST@j0")Q#a\+^Tb@BJL,<5pEp3^qg=^]KdcbKZ#mgcWnAFg:$UZ%5\-7QoOJeG5Jm3UB+N[fH'DE[@n2Arr!&2ps7AreXQVbY
%HrY888.I.24="([,OhNWMBEG&qtWc&:Nu/n9Kqq)PBc!dp7hH[,UoF;O5u(ipkAo#[Ne"d#l[O"5#.gl.'"E_LquT@Vic30k3tJM
%`i#c8S-OVC%nPtOKG0[ZaiP6@s$Y>c$^dK3_*JT^+Sq<ko,]:.PQ<_fFhYuH.0%ZrQdm>l6"W^9QO)1Z+I8G^07Y<@=>h3Rn-ZJ8
%=;NVYL!d=,12jM[;/^^NLRT)jaIFOb]<qWVRdOGE7,pd4L_[naMt9MuiCQqI]N\.J.)V3Ib3rpKa]nWFl)'2#]5#[OrApP4Ibrd+
%)ccm]o?'R#M<*2pJoke#<)h8!@&!3uhM^C8@gAtX'!79aKk-`E.O?#>9@gpFZ2o\jXn7]Wl44MD&5_K7S5q+4$A8O$+:C*[Vm6P&
%4r'X$'?%5/%6["/%2Pn$LIe^!Db0@h79^GI:]phO@Y%.WW!97Tiut@0)%_oe;=SLB8O`H3:br`C.2t_OPeE:!P:D6/N/WUdXX.I$
%P+'J.j=g'p"%"ac@/uR]-]54VL9*(=,-kbt'9QN]ra?B%7+mMe','r'#,+fajs5f8M)Jif8@06J6)$5uA7i=,K[BR;OCBC>djt,?
%h(R`^%<Qq=]M<Qq+7rA!U$mn:F93%;&=A4i6nuTN/!Y*J7'K+""@H'XAc+nn76SG@O+"XR#DMQ%bSR%-M?Z/X]h6M[mcB+@]Jc(U
%:B?c]cf+ZG-YF-a5f?(;%&WtGLn\@EjL"WKFIIn:E)SHA;8bjV8X+furT*JL6jAp#iX&(Z6nh#3>XZq+A]R27'6uu5:d]NP6aW!X
%,D$[\IcO0i;2fQ_;,p'kjhVPNneBI`7/TFn$S_EQA5FVJP:.kD,6!_a,D)9&YonYhd"%d?UA09^JVs5YUiqVd"Cc`;d;dNN=,B,^
%66DRh.0:cNf>i@VUeY5oZ92!4!G8s6qT0s-K)(7Mke'\7#,`P86/>-(<=okS.3hRpm<Ke42$;*T':Ch7_38U-eu.9Rp4X%n$A"Dn
%,uIR3\Y?rk"q)a(_*jtA>OYpE'njs'3#E*bZD(8FH$ka`7-eJ2d/:LrOo8#gBKCn\q8S!eM7d'7MF;?di'2O<^!nhr;Bf,_I^9HA
%88I+&&5!j+[iHc$563PSDtI&=8bTjd0>WBr?"kb+KiG[9g+<'V$+t^"Zs;<b;a+#as4TS:]i,ki%4CZA8^KJZ]Z$!`h>9T2R`N]p
%U^pb6%(]uQS:&r),X6>11a:8W8=lJ<E^($G+$"EhHBkM@Pcd\uoDkX^?VG]d)M%R5ZcGC@,3jpJ\haD:M<1>5W/n4%E+Mo7IAD-r
%aGnl1nn1]$^kaZKcl"10MIN#C.eDL"M/c4B>FHGU&*-JhR%qGYI?Mk4iXJdZQ+ktL[I+.3O^gse<$bmQ*KXA3!P/ka-,uZLfWYD`
%ZoWfm.,#8D6B9ig>:4p_bX>T5,2$3+H0%#?C_8YU7-STR7iNGXU_"QX-CI_Yk%Vr4?jF@<$g44]77rrjh@cUFnD'#^P7oBJ=OO%2
%;Dp'sLd5!lB1W,c!mVnL5j.SI'!TYI?A)/8F`#6+jM6JJM]B>AF-0tS4QJpY_W+C%7_($'f^Nd28;m>efpQ0cJD3=lj?Eu$+tJBJ
%WU)s!76Y*\+sD8cOfp:>.LWg#<tY!e*WoE),<)KoaIbIi;;F'18[@!u9&rUi;hUWp7<W%9.73lo8LCdM'HmLNV;)TA,$\Vo7j3ba
%"n[TQ6]q1;0$I)o=3St^7.Ado"$7)73eq@upX6l/Mh'aH-M$)ZUaADLQ[M"dAtjUM_ANb!9_QqmG]JLtZp`u-90O7!PE^lc@]u#L
%h"APX$XCMb?mKbOH4ghspVY'B"H(G*?/dt6(^3ci!Ebl7NQHtdI8WI\DGZsjeqsJeAg6df-,5P.'+!2*TLUmc$W5(-?C9fR?tPsK
%#r-@RJj_-m<X.M/FCa%Y*CPA0WG])P05to*Ko?>,eot&`L-!mU9P["59KX"R$Tasb)<M.WTtsn>efjJlYu+Vi:Qg!gh]WI5EPKV[
%6NK5b:g\c(?;Tb@l$[]Ub.C\1()6%<M**$VJrp+NgUEjMn\9"a1DE&nR\2(H!O(ZQ>XIeS-.!TJoKq'0qqaQN-+cH'a>7paf'N<"
%dC9<MU^j\(*D:rckp\B'"H1gpIe#uu$'`CG0Z_eK;6BqGe"'*e\p'=TZ]YL^]XY-n&h=K_TlMD,:Qed^j=-1i/fMYX[,cD-/PV1e
%el@qV/kaef#c`FcfUD(u6Zu1N5TfF:.=PdH)plaZ<er:S&`92Y_i(u'&.4).`0<XR21sckfi*lO#2s>Jo"W%`LGH`'8luOQe9t8+
%gGJF463G_jEWnQAF[_(+Q[XHO&U=X@GQGW)29ibf"@BO>.7q]kbenj]''FWYj?/e-".9WEluA7BG=2+]T7%=2oBl=l`93nJmu%k?
%bk:_phfCiJi@U%0i='X=N#ma:GsR,T!.1\hO)hW#@Q/GhA3seDY(UB%<.=]MUMmnP9Nd!],fM%s7[.(Ao#OF$28cSMFUbcQ)@dS@
%5/QO<B6lr@.C4Sfr\NkZLmjL!4p56C5YC_h4u1X?\'m+&;%o`:hu*Bq8>!ZJ[>,2d1B*Fe1+53)UCnDtA]D3?YZEh0J'fg-`17T:
%R)qJ4H]b@g_%?>@>(6GUf[%\!Oj*5tpgj:Jorao2@'#AocCi_Sa<Snm*i2,0b)=&6h+r4VV`7I-eFdfc*k(q(U3a?I*\Pr4bO=sH
%GrV?9C%Ooqs!a*/)K0WhJ_\49'LAlPJ8JEqKWf!ijPM7+Huk<Fcqm%IJeBAVO@n"ud4JI#>Fc*k\%qk.&u6'.3^tb!^$#SC\gB*A
%_22X\lk5TR&M"K^ne!7US'o8;9f<4=O.4/8(^O[+jQb]6=-.2B`8&<jrQ[,6Z^6n$EBf=VhIP_ok%PD@QDXmKCm%sd)M:]#K;V->
%3\>64Y?*H&lt/9Gr6=NJD4F1=a_r/,A;Iiq`on#)4`nk4M=Y%nHd`Kq;QU'"fHZ#hdr`]d*DKi?GrZ8<G:6%Kf&jb:K\2>pGZ/7B
%bQ?.M9Sl2-j=!%iXoH7PP:PMKg&=:1:CJa9a5Sq90:Nf(PE9!=`5W!uNBtZUj2%UGA0<XYXL\K:97cojZuf-l:$SP*()V#<75uAU
%:h64N_KB4/rj33+"T2osJQO.78hh!Ppro]cGV_Q\II]=4%"eb4iD+`k^RkMdq'Kr2N7l'&/=.=(X3SW?75#r#.Nl6p`<R4>1urk)
%j>%.XJN=6A-1$P.+X,+9?CZm*&8d%JoY<6;S*"h:';*`;Q0r;CZSS%]\loa5f[t9#jH=K(d?Zk_RHFYq12SZ?R=akR\.52-kd,@Z
%HR(PD/S#?CD;%>9B<d.Y;1Vi/QXLDu[F"a^BU:>7!^3:R*gFHQ`#-X4@ge8k_E7qI>0Q)#H0-loGne/Pe99f@lDt,sO8CQ93TRm6
%:%Z*<Ltn!MZdXNi=lP;^a2u.;94TJem1,7#&+a1*i%Ya+eo%[.1_41\VOhCg#EE&6auXb^ELT)MgQ5R&T2N%.>ZeAm#1pnn"QCHF
%[$&'b`0,2j7jM]HP5(FqRj]]cX7&@n8Q(2o[#8)a&9RI!K/O(N<-"f&#P81$IWU1_,V$0Eo78VJE<BqM/(habl3qJ&IQe3>V]-gW
%QVC2dN2$k%EZ%V2#)XGW\$ECR#VU.$PnV!s?Q_2-"(_(jT_BtZO1q7IG%"!5;JQ2)j:-JK#6c>W$1e`LVns[?^4$q_8%SAl\Tt][
%p;Yg*0[4!P.Zsc\`;B4J-*6QdWr/r/]Gn^&HT&[%$anJ=F\4-]P[fO$'@n9X3rYr*)Am<(61U?1F,]-2TCCXXM8qaNNSH<cik,OH
%!QV?:04=),?<NgbqYG?!/FLlA_r*V%I`<&\U^o9QFG]VgRVu7)DgHunOQXa"-3Rdh;6+"UGZtZ)cD5n:""rqa1<^4t&p+p3$:A4C
%P3m1k>fop":[q2L'&A(eTD>VW=\([7ILO7YgMJZ;)l'6Llq/,6S&Mjt0`(KS_]?I%cnis:[d1),`M<h0]\jg&@;4$4?u]H'&XdcA
%&h2,"GpN\g\EnD:M:1M.<$+l&j'%!Aq8!f^eVN@1EC@]pQ7OopX8IQf%'rE0M6"RAdf3)k0"nH4,3"`>lUd:U?u+t08M3OFdN^pp
%_leZ<JAZO)qCtV"^MLRSDBf?JY;Tk&O,n.@P`#_dIHK(kUl6.p_%):@3\_S;.+e_UY>A]$o0t&r3n`$ul@1>5U_fLc%Wu/>e-no-
%U1!<M]l[qhKgb3DUs!5#`\^SEd?qq_O0BF\nn4-)X?dU8*&7KjRm.j5b[:A:]-"f:s8;l.5QCP;hXmtcTpsp=62uB3a8V/"l+a>"
%l^trjPB>sSXTSUmhnJs=YQ+Lo?[_P/YJ:+t+9(qgYQ!SJ%psb^/W0N'0E%M,r9O)as7#&mhgbU`LO]3hrrU#,n\IHf_a"1Qs89o%
%r-t(\#Z^~>
%AI9_PrivateDataEnd
