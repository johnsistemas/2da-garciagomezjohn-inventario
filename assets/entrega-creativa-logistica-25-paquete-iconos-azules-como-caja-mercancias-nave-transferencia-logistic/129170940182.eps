%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Blue_8-Template_227250351997.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Delivery And Logistic 25 Blue icon pack  Such As goods. box. logistic. transfer. ship</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Delivery And Logistic 25 Blue icon pack  Such As goods. box. logistic. transfer. ship</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>car</rdf:li>
               <rdf:li> delivery</rdf:li>
               <rdf:li> shipping</rdf:li>
               <rdf:li> transport</rdf:li>
               <rdf:li> truck</rdf:li>
               <rdf:li> achievement</rdf:li>
               <rdf:li> certificate</rdf:li>
               <rdf:li> delivery</rdf:li>
               <rdf:li> logistic</rdf:li>
               <rdf:li> product</rdf:li>
               <rdf:li> delivery</rdf:li>
               <rdf:li> logistic</rdf:li>
               <rdf:li> ship</rdf:li>
               <rdf:li> shipping</rdf:li>
               <rdf:li> transfer</rdf:li>
               <rdf:li> box</rdf:li>
               <rdf:li> delivery</rdf:li>
               <rdf:li> goods</rdf:li>
               <rdf:li> logistic</rdf:li>
               <rdf:li> product</rdf:li>
               <rdf:li> delivery</rdf:li>
               <rdf:li> destination</rdf:li>
               <rdf:li> location</rdf:li>
               <rdf:li> map</rdf:li>
               <rdf:li> shipping</rdf:li>
               <rdf:li> avatar</rdf:li>
               <rdf:li> people</rdf:li>
               <rdf:li> service</rdf:li>
               <rdf:li> support</rdf:li>
               <rdf:li> supporter</rdf:li>
               <rdf:li> barcode</rdf:li>
               <rdf:li> code</rdf:li>
               <rdf:li> delivery</rdf:li>
               <rdf:li> shipping</rdf:li>
               <rdf:li> shop</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T21:28+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T21:28:01+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T21:28:01+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:28E5D76DDE77ED1181BCD970F5CC96A3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:28E5D76DDE77ED1181BCD970F5CC96A3</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a5b80e05-8a86-9440-addc-210d207fd2c7</stRef:instanceID>
            <stRef:documentID>xmp.did:a5b80e05-8a86-9440-addc-210d207fd2c7</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:304a2dca-86d8-ed4d-81af-2e8a745e790f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:27:30+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:014ddd43-d747-b04a-85a5-a1a5e7b4c097</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:30:41+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a5b80e05-8a86-9440-addc-210d207fd2c7</stEvt:instanceID>
                  <stEvt:when>2022-09-05T12:31:01+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28E5D76DDE77ED1181BCD970F5CC96A3</stEvt:instanceID>
                  <stEvt:when>2022-12-09T21:28:01+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
270.876 77.4736 mo
270.876 73.3774 268.96 71.3296 265.13 71.3296 cv
262.707 71.3296 li
262.707 83.7466 li
264.697 83.7466 li
268.816 83.7466 270.876 81.6558 270.876 77.4736 cv
cp
273.825 77.3799 mo
273.825 80.2046 273.042 82.3638 271.473 83.8579 cv
269.905 85.3521 267.646 86.0991 264.697 86.0991 cv
259.91 86.0991 li
259.91 68.9888 li
265.2 68.9888 li
267.923 68.9888 270.041 69.7222 271.555 71.189 cv
273.068 72.6558 273.825 74.7197 273.825 77.3799 cv
cp
f
281.398 75.0044 mo
280.524 75.0044 279.824 75.2813 279.297 75.8354 cv
278.771 76.3892 278.457 77.1968 278.355 78.2578 cv
284.23 78.2578 li
284.215 77.189 283.958 76.3794 283.458 75.8296 cv
282.958 75.2793 282.272 75.0044 281.398 75.0044 cv
cp
281.901 86.333 mo
279.889 86.333 278.314 85.7461 277.179 84.5718 cv
276.044 83.3975 275.477 81.7808 275.477 79.7207 cv
275.477 77.6064 276.003 75.9448 277.057 74.7354 cv
278.11 73.5259 279.557 72.9214 281.398 72.9214 cv
283.107 72.9214 284.457 73.4399 285.448 74.4775 cv
286.438 75.5156 286.934 76.9434 286.934 78.7612 cv
286.934 80.2476 li
278.309 80.2476 li
278.348 81.5039 278.687 82.4692 279.327 83.144 cv
279.966 83.8188 280.868 84.1563 282.03 84.1563 cv
282.795 84.1563 283.507 84.0845 284.166 83.9399 cv
284.825 83.7954 285.534 83.5557 286.291 83.2202 cv
286.291 85.4556 li
285.619 85.7754 284.94 86.0015 284.254 86.1343 cv
283.567 86.2666 282.783 86.333 281.901 86.333 cv
cp
f
291.85 86.0991 mo
289.1 86.0991 li
289.1 67.8887 li
291.85 67.8887 li
291.85 86.0991 li
cp
f
297.574 86.0991 mo
294.824 86.0991 li
294.824 73.1553 li
297.574 73.1553 li
297.574 86.0991 li
cp
294.66 69.7261 mo
294.66 69.2344 294.795 68.8564 295.064 68.5908 cv
295.333 68.3257 295.717 68.1929 296.217 68.1929 cv
296.701 68.1929 297.077 68.3257 297.346 68.5908 cv
297.615 68.8564 297.75 69.2344 297.75 69.7261 cv
297.75 70.1943 297.615 70.563 297.346 70.832 cv
297.077 71.1011 296.701 71.2358 296.217 71.2358 cv
295.717 71.2358 295.333 71.1011 295.064 70.832 cv
294.795 70.563 294.66 70.1943 294.66 69.7261 cv
cp
f
303.497 86.0991 mo
298.582 73.1553 li
301.484 73.1553 li
304.117 80.6807 li
304.57 81.9443 304.843 82.9668 304.937 83.7466 cv
305.03 83.7466 li
305.1 83.1851 305.374 82.1631 305.849 80.6807 cv
308.482 73.1553 li
311.408 73.1553 li
306.47 86.0991 li
303.497 86.0991 li
cp
f
317.565 75.0044 mo
316.691 75.0044 315.991 75.2813 315.464 75.8354 cv
314.938 76.3892 314.624 77.1968 314.522 78.2578 cv
320.397 78.2578 li
320.382 77.189 320.125 76.3794 319.625 75.8296 cv
319.125 75.2793 318.439 75.0044 317.565 75.0044 cv
cp
318.068 86.333 mo
316.056 86.333 314.481 85.7461 313.346 84.5718 cv
312.211 83.3975 311.644 81.7808 311.644 79.7207 cv
311.644 77.6064 312.17 75.9448 313.224 74.7354 cv
314.277 73.5259 315.724 72.9214 317.565 72.9214 cv
319.274 72.9214 320.624 73.4399 321.615 74.4775 cv
322.605 75.5156 323.101 76.9434 323.101 78.7612 cv
323.101 80.2476 li
314.476 80.2476 li
314.515 81.5039 314.854 82.4692 315.494 83.144 cv
316.133 83.8188 317.035 84.1563 318.197 84.1563 cv
318.962 84.1563 319.674 84.0845 320.333 83.9399 cv
320.992 83.7954 321.701 83.5557 322.458 83.2202 cv
322.458 85.4556 li
321.786 85.7754 321.107 86.0015 320.421 86.1343 cv
319.734 86.2666 318.95 86.333 318.068 86.333 cv
cp
f
331.833 72.9214 mo
332.387 72.9214 332.843 72.9604 333.202 73.0381 cv
332.933 75.6011 li
332.543 75.5078 332.137 75.4609 331.716 75.4609 cv
330.616 75.4609 329.725 75.8198 329.042 76.5376 cv
328.359 77.2554 328.018 78.1875 328.018 79.3345 cv
328.018 86.0991 li
325.268 86.0991 li
325.268 73.1553 li
327.421 73.1553 li
327.784 75.4375 li
327.924 75.4375 li
328.353 74.665 328.913 74.0527 329.604 73.6001 cv
330.294 73.1475 331.037 72.9214 331.833 72.9214 cv
cp
f
332.676 73.1553 mo
335.672 73.1553 li
338.306 80.4932 li
338.704 81.5391 338.969 82.522 339.102 83.4424 cv
339.195 83.4424 li
339.265 83.0137 339.394 82.4927 339.581 81.8799 cv
339.769 81.2676 340.759 78.3594 342.554 73.1553 cv
345.526 73.1553 li
339.991 87.8193 li
338.984 90.5112 337.307 91.8569 334.958 91.8569 cv
334.35 91.8569 333.757 91.791 333.18 91.6582 cv
333.18 89.4814 li
333.593 89.5752 334.065 89.6221 334.596 89.6221 cv
335.922 89.6221 336.854 88.853 337.393 87.3164 cv
337.873 86.0991 li
332.676 73.1553 li
cp
f
355.114 72.6753 mo
355.114 73.167 355.244 73.6313 355.506 74.0679 cv
355.767 74.5049 356.132 74.9692 356.601 75.4609 cv
357.481 74.9614 358.1 74.4951 358.455 74.062 cv
358.81 73.6294 358.987 73.1436 358.987 72.605 cv
358.987 72.0981 358.817 71.6924 358.479 71.3882 cv
358.14 71.0835 357.688 70.9316 357.126 70.9316 cv
356.511 70.9316 356.021 71.0894 355.658 71.4058 cv
355.295 71.7217 355.114 72.145 355.114 72.6753 cv
cp
356.857 83.9692 mo
358.285 83.9692 359.507 83.5518 360.521 82.7168 cv
356.038 78.3047 li
355.211 78.8354 354.642 79.3325 354.33 79.7969 cv
354.018 80.2612 353.861 80.79 353.861 81.3828 cv
353.861 82.1475 354.132 82.7695 354.675 83.2495 cv
355.217 83.729 355.944 83.9692 356.857 83.9692 cv
cp
350.959 81.5698 mo
350.959 80.5479 351.208 79.6563 351.708 78.8955 cv
352.207 78.1348 353.108 77.3799 354.412 76.6313 cv
353.67 75.7651 353.165 75.0337 352.896 74.4365 cv
352.626 73.8398 352.492 73.2217 352.492 72.5815 cv
352.492 71.396 352.915 70.4595 353.762 69.7729 cv
354.608 69.0864 355.745 68.7432 357.173 68.7432 cv
358.555 68.7432 359.639 69.0767 360.427 69.7437 cv
361.215 70.4106 361.608 71.3101 361.608 72.4414 cv
361.608 73.3306 361.346 74.1382 360.819 74.8638 cv
360.292 75.5894 359.413 76.3149 358.181 77.0405 cv
362.229 80.9497 li
362.861 80.1147 363.388 78.8896 363.81 77.2749 cv
366.642 77.2749 li
366.095 79.4907 365.222 81.2969 364.021 82.6934 cv
367.542 86.0991 li
363.997 86.0991 li
362.253 84.4023 li
361.457 85.042 360.608 85.5239 359.707 85.8477 cv
358.806 86.1714 357.81 86.333 356.717 86.333 cv
354.922 86.333 353.514 85.9082 352.492 85.0576 cv
351.47 84.207 350.959 83.0444 350.959 81.5698 cv
cp
f
374.146 86.0991 mo
374.146 68.9888 li
376.942 68.9888 li
376.942 83.6997 li
384.187 83.6997 li
384.187 86.0991 li
374.146 86.0991 li
cp
f
387.944 79.604 mo
387.944 82.5923 389.048 84.0859 391.257 84.0859 cv
393.44 84.0859 394.533 82.5923 394.533 79.604 cv
394.533 76.647 393.433 75.168 391.233 75.168 cv
390.078 75.168 389.241 75.5508 388.723 76.3149 cv
388.204 77.0801 387.944 78.1758 387.944 79.604 cv
cp
397.366 79.604 mo
397.366 81.7183 396.823 83.3682 395.739 84.5542 cv
394.654 85.7402 393.145 86.333 391.21 86.333 cv
390 86.333 388.931 86.0601 388.003 85.5142 cv
387.074 84.9678 386.36 84.1836 385.861 83.1616 cv
385.362 82.1396 385.112 80.9536 385.112 79.604 cv
385.112 77.5049 385.65 75.8667 386.728 74.6885 cv
387.804 73.5103 389.321 72.9214 391.28 72.9214 cv
393.152 72.9214 394.635 73.5239 395.728 74.7295 cv
396.819 75.9346 397.366 77.5596 397.366 79.604 cv
cp
f
401.509 77.3452 mo
401.509 78.1567 401.718 78.7808 402.136 79.2178 cv
402.553 79.6548 403.151 79.873 403.933 79.873 cv
405.524 79.873 406.319 79.0225 406.319 77.3218 cv
406.319 76.479 406.122 75.8296 405.729 75.373 cv
405.335 74.9165 404.735 74.6885 403.933 74.6885 cv
403.136 74.6885 402.534 74.9146 402.124 75.3672 cv
401.714 75.8198 401.509 76.479 401.509 77.3452 cv
cp
400.327 88.1123 mo
400.327 88.7051 400.595 89.1611 401.129 89.4814 cv
401.663 89.8013 402.415 89.9614 403.382 89.9614 cv
404.88 89.9614 405.995 89.7466 406.729 89.3174 cv
407.462 88.8882 407.829 88.3188 407.829 87.6089 cv
407.829 87.0469 407.628 86.647 407.227 86.4092 cv
406.825 86.1714 406.077 86.0522 404.985 86.0522 cv
402.902 86.0522 li
402.114 86.0522 401.487 86.2378 401.024 86.6084 cv
400.56 86.9785 400.327 87.48 400.327 88.1123 cv
cp
410.497 73.1553 mo
410.497 74.665 li
408.286 75.0747 li
408.489 75.3477 408.656 75.6831 408.789 76.0811 cv
408.921 76.479 408.987 76.9004 408.987 77.3452 cv
408.987 78.6792 408.527 79.7285 407.606 80.4932 cv
406.687 81.2578 405.419 81.6401 403.804 81.6401 cv
403.39 81.6401 403.015 81.6089 402.68 81.5464 cv
402.087 81.9136 401.79 82.3423 401.79 82.834 cv
401.79 83.1304 401.929 83.353 402.206 83.501 cv
402.483 83.6494 402.991 83.7231 403.733 83.7231 cv
405.991 83.7231 li
407.42 83.7231 408.504 84.0278 409.245 84.6362 cv
409.986 85.2446 410.357 86.1226 410.357 87.2695 cv
410.357 88.7363 409.753 89.8677 408.544 90.6636 cv
407.334 91.4595 405.586 91.8569 403.3 91.8569 cv
401.536 91.8569 400.19 91.5449 399.263 90.9209 cv
398.334 90.2964 397.87 89.4072 397.87 88.2524 cv
397.87 87.4565 398.122 86.7876 398.624 86.2456 cv
399.128 85.7031 399.832 85.3267 400.737 85.1162 cv
400.37 84.96 400.067 84.7085 399.83 84.3613 cv
399.592 84.0142 399.474 83.6494 399.474 83.2671 cv
399.474 82.7832 399.609 82.3735 399.883 82.0381 cv
400.155 81.7026 400.562 81.3711 401.101 81.0435 cv
400.429 80.7549 399.885 80.2847 399.468 79.6328 cv
399.05 78.9814 398.841 78.2188 398.841 77.3452 cv
398.841 75.9404 399.284 74.8521 400.169 74.0796 cv
401.055 73.3071 402.317 72.9214 403.956 72.9214 cv
404.322 72.9214 404.706 72.9468 405.108 72.9971 cv
405.511 73.0479 405.813 73.1006 406.015 73.1553 cv
410.497 73.1553 li
cp
f
414.688 86.0991 mo
411.938 86.0991 li
411.938 73.1553 li
414.688 73.1553 li
414.688 86.0991 li
cp
411.774 69.7261 mo
411.774 69.2344 411.909 68.8564 412.178 68.5908 cv
412.446 68.3257 412.831 68.1929 413.331 68.1929 cv
413.814 68.1929 414.19 68.3257 414.46 68.5908 cv
414.729 68.8564 414.864 69.2344 414.864 69.7261 cv
414.864 70.1943 414.729 70.563 414.46 70.832 cv
414.19 71.1011 413.814 71.2358 413.331 71.2358 cv
412.831 71.2358 412.446 71.1011 412.178 70.832 cv
411.909 70.563 411.774 70.1943 411.774 69.7261 cv
cp
f
426.357 82.4126 mo
426.357 83.6768 425.897 84.646 424.977 85.3208 cv
424.056 85.9956 422.737 86.333 421.021 86.333 cv
419.296 86.333 417.911 86.0718 416.866 85.5488 cv
416.866 83.1733 li
418.388 83.8755 419.804 84.2266 421.114 84.2266 cv
422.808 84.2266 423.654 83.7158 423.654 82.6934 cv
423.654 82.3657 423.561 82.0928 423.373 81.874 cv
423.187 81.6558 422.878 81.4297 422.448 81.1953 cv
422.02 80.9614 421.423 80.6963 420.658 80.3994 cv
419.167 79.8223 418.159 79.2451 417.633 78.6675 cv
417.106 78.0903 416.843 77.3413 416.843 76.4204 cv
416.843 75.3125 417.289 74.4526 418.183 73.8398 cv
419.076 73.2275 420.291 72.9214 421.828 72.9214 cv
423.35 72.9214 424.789 73.2295 426.147 73.8457 cv
425.257 75.917 li
423.86 75.3398 422.687 75.0513 421.735 75.0513 cv
420.284 75.0513 419.558 75.4648 419.558 76.2915 cv
419.558 76.6973 419.747 77.0405 420.126 77.3218 cv
420.504 77.6025 421.329 77.9888 422.601 78.4805 cv
423.669 78.894 424.446 79.2725 424.93 79.6152 cv
425.413 79.959 425.772 80.355 426.007 80.8032 cv
426.241 81.252 426.357 81.7886 426.357 82.4126 cv
cp
f
433.193 84.1094 mo
433.864 84.1094 434.535 84.0044 435.206 83.7935 cv
435.206 85.8652 li
434.901 85.998 434.51 86.1089 434.03 86.1987 cv
433.55 86.2881 433.053 86.333 432.538 86.333 cv
429.932 86.333 428.629 84.96 428.629 82.2134 cv
428.629 75.2383 li
426.862 75.2383 li
426.862 74.0215 li
428.758 73.0146 li
429.694 70.2764 li
431.392 70.2764 li
431.392 73.1553 li
435.077 73.1553 li
435.077 75.2383 li
431.392 75.2383 li
431.392 82.167 li
431.392 82.8301 431.557 83.3193 431.888 83.6357 cv
432.22 83.9517 432.655 84.1094 433.193 84.1094 cv
cp
f
439.584 86.0991 mo
436.834 86.0991 li
436.834 73.1553 li
439.584 73.1553 li
439.584 86.0991 li
cp
436.67 69.7261 mo
436.67 69.2344 436.805 68.8564 437.073 68.5908 cv
437.343 68.3257 437.728 68.1929 438.227 68.1929 cv
438.71 68.1929 439.087 68.3257 439.356 68.5908 cv
439.625 68.8564 439.76 69.2344 439.76 69.7261 cv
439.76 70.1943 439.625 70.563 439.356 70.832 cv
439.087 71.1011 438.71 71.2358 438.227 71.2358 cv
437.728 71.2358 437.343 71.1011 437.073 70.832 cv
436.805 70.563 436.67 70.1943 436.67 69.7261 cv
cp
f
447.777 86.333 mo
445.819 86.333 444.331 85.7617 443.313 84.6187 cv
442.294 83.4756 441.785 81.8354 441.785 79.6973 cv
441.785 77.5205 442.317 75.8472 443.382 74.6768 cv
444.448 73.5063 445.986 72.9214 447.999 72.9214 cv
449.364 72.9214 450.594 73.1748 451.687 73.6816 cv
450.854 75.894 li
449.692 75.4414 448.733 75.2148 447.976 75.2148 cv
445.737 75.2148 444.617 76.7012 444.617 79.6738 cv
444.617 81.125 444.896 82.2158 445.454 82.9453 cv
446.012 83.6748 446.829 84.0396 447.905 84.0396 cv
449.131 84.0396 450.29 83.7349 451.382 83.1265 cv
451.382 85.5259 li
450.89 85.8145 450.365 86.021 449.808 86.146 cv
449.25 86.2705 448.573 86.333 447.777 86.333 cv
cp
f
556.341 642.341 mo
657.5 642.341 li
657.5 743.5 li
556.341 743.5 li
556.341 642.341 li
cp
1 1 1 rgb
f
595.085 663.584 mo
595.085 672.486 li
584.969 672.486 li
584.969 721.245 li
627.962 721.245 li
627.962 663.584 li
595.085 663.584 li
cp
f
596.299 678.758 mo
601.356 678.758 li
601.356 683.816 li
596.299 683.816 li
596.299 678.758 li
cp
.760784 .890196 .968627 rgb
f
596.299 700.305 mo
601.356 700.305 li
601.356 705.363 li
596.299 705.363 li
596.299 700.305 li
cp
f
606.415 700.305 mo
606.415 715.479 li
591.241 715.479 li
591.241 700.305 li
596.299 700.305 li
596.299 705.363 li
601.356 705.363 li
601.356 700.305 li
606.415 700.305 li
cp
1 1 1 rgb
f
606.415 678.758 mo
606.415 693.932 li
591.241 693.932 li
591.241 678.758 li
596.299 678.758 li
596.299 683.816 li
601.356 683.816 li
601.356 678.758 li
606.415 678.758 li
cp
.760784 .890196 .968627 rgb
f
595.085 663.584 mo
595.085 672.486 li
584.969 672.486 li
595.085 663.584 li
cp
1 1 1 rgb
f
586.183 720.031 mo
626.646 720.031 li
626.646 664.899 li
595.489 664.899 li
586.183 673.094 li
586.183 720.031 li
cp
627.962 722.561 mo
584.969 722.561 li
584.261 722.561 583.654 721.953 583.654 721.245 cv
583.654 672.486 li
583.654 672.082 583.856 671.778 584.059 671.576 cv
594.175 662.674 li
594.377 662.472 594.681 662.37 594.983 662.37 cv
627.86 662.37 li
628.568 662.37 629.176 662.978 629.176 663.686 cv
629.176 721.346 li
629.176 721.953 628.568 722.561 627.962 722.561 cv
cp
.0470588 .568627 .87451 rgb
f
595.085 673.7 mo
584.969 673.7 li
584.261 673.7 583.654 673.094 583.654 672.385 cv
583.654 671.677 584.261 671.07 584.969 671.07 cv
593.77 671.07 li
593.77 663.584 li
593.77 662.876 594.377 662.27 595.085 662.27 cv
595.793 662.27 596.4 662.876 596.4 663.584 cv
596.4 672.486 li
596.299 673.094 595.691 673.7 595.085 673.7 cv
cp
f
606.415 695.247 mo
591.241 695.247 li
590.533 695.247 589.926 694.641 589.926 693.932 cv
589.926 678.758 li
589.926 678.05 590.533 677.443 591.241 677.443 cv
596.299 677.443 li
597.007 677.443 597.614 678.05 597.614 678.758 cv
597.614 679.467 597.007 680.073 596.299 680.073 cv
592.455 680.073 li
592.455 692.718 li
605.1 692.718 li
605.1 680.073 li
601.256 680.073 li
600.548 680.073 599.94 679.467 599.94 678.758 cv
599.94 678.05 600.548 677.443 601.256 677.443 cv
606.313 677.443 li
607.021 677.443 607.629 678.05 607.629 678.758 cv
607.629 693.932 li
607.729 694.641 607.123 695.247 606.415 695.247 cv
cp
f
597.614 682.603 mo
600.143 682.603 li
600.143 680.073 li
597.614 680.073 li
597.614 682.603 li
cp
601.356 685.131 mo
596.299 685.131 li
595.591 685.131 594.983 684.524 594.983 683.816 cv
594.983 678.758 li
594.983 678.05 595.591 677.443 596.299 677.443 cv
601.356 677.443 li
602.064 677.443 602.672 678.05 602.672 678.758 cv
602.672 683.816 li
602.672 684.524 602.064 685.131 601.356 685.131 cv
cp
f
606.415 716.693 mo
591.241 716.693 li
590.533 716.693 589.926 716.086 589.926 715.378 cv
589.926 700.204 li
589.926 699.496 590.533 698.889 591.241 698.889 cv
596.299 698.889 li
597.007 698.889 597.614 699.496 597.614 700.204 cv
597.614 700.912 597.007 701.519 596.299 701.519 cv
592.455 701.519 li
592.455 714.164 li
605.1 714.164 li
605.1 701.519 li
601.256 701.519 li
600.548 701.519 599.94 700.912 599.94 700.204 cv
599.94 699.496 600.548 698.889 601.256 698.889 cv
606.313 698.889 li
607.021 698.889 607.629 699.496 607.629 700.204 cv
607.629 715.378 li
607.729 716.086 607.123 716.693 606.415 716.693 cv
cp
f
597.614 704.048 mo
600.143 704.048 li
600.143 701.519 li
597.614 701.519 li
597.614 704.048 li
cp
601.356 706.577 mo
596.299 706.577 li
595.591 706.577 594.983 705.97 594.983 705.262 cv
594.983 700.204 li
594.983 699.496 595.591 698.889 596.299 698.889 cv
601.356 698.889 li
602.064 698.889 602.672 699.496 602.672 700.204 cv
602.672 705.262 li
602.672 705.97 602.064 706.577 601.356 706.577 cv
cp
f
621.589 680.073 mo
614.002 680.073 li
613.294 680.073 612.687 679.467 612.687 678.758 cv
612.687 678.05 613.294 677.443 614.002 677.443 cv
621.589 677.443 li
622.297 677.443 622.903 678.05 622.903 678.758 cv
622.903 679.467 622.297 680.073 621.589 680.073 cv
cp
f
621.589 687.66 mo
614.002 687.66 li
613.294 687.66 612.687 687.054 612.687 686.345 cv
612.687 685.637 613.294 685.03 614.002 685.03 cv
621.589 685.03 li
622.297 685.03 622.903 685.637 622.903 686.345 cv
622.903 687.054 622.297 687.66 621.589 687.66 cv
cp
f
621.589 695.247 mo
614.002 695.247 li
613.294 695.247 612.687 694.641 612.687 693.932 cv
612.687 693.224 613.294 692.617 614.002 692.617 cv
621.589 692.617 li
622.297 692.617 622.903 693.224 622.903 693.932 cv
622.903 694.641 622.297 695.247 621.589 695.247 cv
cp
f
621.589 701.519 mo
614.002 701.519 li
613.294 701.519 612.687 700.912 612.687 700.204 cv
612.687 699.496 613.294 698.99 614.002 698.99 cv
621.589 698.99 li
622.297 698.99 622.903 699.597 622.903 700.305 cv
622.903 701.014 622.297 701.519 621.589 701.519 cv
cp
f
621.589 709.105 mo
614.002 709.105 li
613.294 709.105 612.687 708.499 612.687 707.791 cv
612.687 707.083 613.294 706.476 614.002 706.476 cv
621.589 706.476 li
622.297 706.476 622.903 707.083 622.903 707.791 cv
622.903 708.499 622.297 709.105 621.589 709.105 cv
cp
f
621.589 716.693 mo
614.002 716.693 li
613.294 716.693 612.687 716.086 612.687 715.378 cv
612.687 714.67 613.294 714.063 614.002 714.063 cv
621.589 714.063 li
622.297 714.063 622.903 714.67 622.903 715.378 cv
622.903 716.086 622.297 716.693 621.589 716.693 cv
cp
f
428.881 642.341 mo
530.04 642.341 li
530.04 743.5 li
428.881 743.5 li
428.881 642.341 li
cp
1 1 1 rgb
f
449.922 670.969 mo
449.922 672.486 449.922 704.756 449.922 706.375 cv
451.237 706.375 493.622 706.375 495.443 706.375 cv
495.443 704.756 495.443 672.486 495.443 670.969 cv
449.922 670.969 li
cp
f
495.443 693.729 mo
495.039 693.729 494.634 693.629 494.128 693.629 cv
486.845 693.629 480.877 699.192 480.27 706.273 cv
480.27 706.678 480.168 707.083 480.168 707.589 cv
480.168 715.276 486.44 721.549 494.128 721.549 cv
501.816 721.549 508.088 715.276 508.088 707.589 cv
508.088 700.305 502.524 694.337 495.443 693.729 cv
cp
.760784 .890196 .968627 rgb
f
491.6 712.646 mo
496.657 712.646 li
496.657 717.704 li
491.6 717.704 li
491.6 712.646 li
cp
f
491.6 697.473 mo
496.657 697.473 li
496.657 708.903 li
491.6 708.903 li
491.6 697.473 li
cp
f
449.922 663.382 mo
449.922 670.969 li
450.326 670.969 495.039 670.969 495.443 670.969 cv
495.443 663.382 li
494.938 663.382 450.326 663.382 449.922 663.382 cv
cp
1 1 1 rgb
f
467.625 670.969 mo
467.625 663.382 li
482.799 663.382 li
482.799 670.969 li
482.799 679.77 li
467.625 679.77 li
467.625 670.969 li
cp
f
473.896 672.183 mo
449.922 672.183 li
449.214 672.183 448.606 671.576 448.606 670.868 cv
448.606 670.16 449.214 669.553 449.922 669.553 cv
473.998 669.553 li
474.706 669.553 475.313 670.16 475.313 670.868 cv
475.212 671.576 474.604 672.183 473.896 672.183 cv
cp
.0470588 .568627 .87451 rgb
f
495.443 672.183 mo
482.799 672.183 li
482.091 672.183 481.483 671.576 481.483 670.868 cv
481.483 670.16 482.091 669.553 482.799 669.553 cv
495.443 669.553 li
496.151 669.553 496.759 670.16 496.759 670.868 cv
496.657 671.576 496.051 672.183 495.443 672.183 cv
cp
f
482.799 681.085 mo
467.625 681.085 li
466.917 681.085 466.31 680.478 466.31 679.77 cv
466.31 663.382 li
466.31 662.674 466.917 662.067 467.625 662.067 cv
468.333 662.067 468.939 662.674 468.939 663.382 cv
468.939 678.556 li
481.483 678.556 li
481.483 663.382 li
481.483 662.674 482.091 662.067 482.799 662.067 cv
483.507 662.067 484.113 662.674 484.113 663.382 cv
484.113 679.77 li
484.013 680.478 483.405 681.085 482.799 681.085 cv
cp
f
466.31 693.729 mo
457.407 693.729 li
456.699 693.729 456.093 693.123 456.093 692.415 cv
456.093 691.707 456.699 691.1 457.407 691.1 cv
466.31 691.1 li
467.018 691.1 467.625 691.707 467.625 692.415 cv
467.625 693.123 467.018 693.729 466.31 693.729 cv
cp
f
470.153 698.788 mo
457.509 698.788 li
456.801 698.788 456.193 698.181 456.193 697.473 cv
456.193 696.765 456.801 696.157 457.509 696.157 cv
470.153 696.157 li
470.861 696.157 471.469 696.765 471.469 697.473 cv
471.469 698.181 470.761 698.788 470.153 698.788 cv
cp
f
480.27 707.589 mo
449.922 707.589 li
449.214 707.589 448.606 706.981 448.606 706.273 cv
448.606 663.382 li
448.606 662.674 449.214 662.067 449.922 662.067 cv
495.443 662.067 li
496.151 662.067 496.759 662.674 496.759 663.382 cv
496.759 693.831 li
496.759 694.539 496.151 695.146 495.443 695.146 cv
494.735 695.146 494.128 694.539 494.128 693.831 cv
494.128 664.596 li
451.136 664.596 li
451.136 705.06 li
480.27 705.06 li
480.978 705.06 481.585 705.666 481.585 706.375 cv
481.585 707.083 480.978 707.589 480.27 707.589 cv
cp
f
494.128 694.943 mo
487.553 694.943 482.091 699.9 481.585 706.476 cv
481.585 706.881 481.483 707.285 481.483 707.589 cv
481.483 714.568 487.148 720.233 494.128 720.233 cv
501.108 720.233 506.773 714.568 506.773 707.589 cv
506.773 701.014 501.816 695.551 495.241 695.045 cv
494.938 694.943 494.533 694.943 494.128 694.943 cv
cp
494.128 722.763 mo
485.732 722.763 478.954 715.984 478.954 707.589 cv
478.954 707.184 478.954 706.678 479.056 706.172 cv
479.359 702.43 481.079 698.889 483.911 696.359 cv
486.744 693.831 490.386 692.313 494.128 692.313 cv
494.533 692.313 495.039 692.313 495.545 692.415 cv
499.287 692.718 502.828 694.438 505.357 697.271 cv
507.886 700.103 509.403 703.744 509.403 707.487 cv
509.302 715.984 502.524 722.763 494.128 722.763 cv
cp
f
492.914 707.589 mo
495.443 707.589 li
495.443 698.687 li
492.914 698.687 li
492.914 707.589 li
cp
496.657 710.117 mo
491.6 710.117 li
490.892 710.117 490.284 709.511 490.284 708.803 cv
490.284 697.473 li
490.284 696.765 490.892 696.157 491.6 696.157 cv
496.657 696.157 li
497.365 696.157 497.973 696.765 497.973 697.473 cv
497.973 708.903 li
497.973 709.511 497.365 710.117 496.657 710.117 cv
cp
f
492.914 716.49 mo
495.443 716.49 li
495.443 713.962 li
492.914 713.962 li
492.914 716.49 li
cp
496.657 719.02 mo
491.6 719.02 li
490.892 719.02 490.284 718.412 490.284 717.704 cv
490.284 712.646 li
490.284 711.938 490.892 711.331 491.6 711.331 cv
496.657 711.331 li
497.365 711.331 497.973 711.938 497.973 712.646 cv
497.973 717.704 li
497.973 718.412 497.365 719.02 496.657 719.02 cv
cp
f
301.42 642.341 mo
402.579 642.341 li
402.579 743.5 li
301.42 743.5 li
301.42 642.341 li
cp
1 1 1 rgb
f
347.751 677.241 mo
347.751 683.614 li
343.907 686.143 li
340.165 683.614 li
340.165 677.241 li
343.907 677.241 li
347.751 677.241 li
cp
.760784 .890196 .968627 rgb
f
356.552 696.259 mo
356.552 711.433 li
331.262 711.433 li
331.262 696.259 li
335.106 696.259 li
351.494 696.259 li
356.552 696.259 li
cp
1 1 1 rgb
f
380.628 717.704 mo
380.628 721.549 li
355.338 721.549 li
355.338 717.704 li
364.139 717.704 li
371.726 717.704 li
380.628 717.704 li
cp
.760784 .890196 .968627 rgb
f
374.255 670.969 mo
374.255 673.498 li
371.726 673.498 li
364.139 673.498 li
361.61 673.498 li
361.61 670.969 li
361.61 665.911 li
361.61 663.382 li
374.255 663.382 li
374.255 665.911 li
374.255 670.969 li
cp
1 1 1 rgb
f
374.255 667.125 mo
373.547 667.125 372.939 666.518 372.939 665.81 cv
372.939 664.596 li
362.824 664.596 li
362.824 665.911 li
362.824 666.619 362.217 667.227 361.509 667.227 cv
360.801 667.227 360.194 666.619 360.194 665.911 cv
360.194 663.382 li
360.194 662.674 360.801 662.067 361.509 662.067 cv
374.255 662.067 li
374.963 662.067 375.57 662.674 375.57 663.382 cv
375.57 665.911 li
375.57 666.518 374.963 667.125 374.255 667.125 cv
cp
.0470588 .568627 .87451 rgb
f
364.139 674.712 mo
361.61 674.712 li
360.902 674.712 360.295 674.104 360.295 673.396 cv
360.295 670.868 li
360.295 670.16 360.902 669.553 361.61 669.553 cv
362.318 669.553 362.925 670.16 362.925 670.868 cv
362.925 672.183 li
364.139 672.183 li
364.848 672.183 365.454 672.79 365.454 673.498 cv
365.454 674.104 364.848 674.712 364.139 674.712 cv
cp
f
374.255 674.712 mo
371.726 674.712 li
371.018 674.712 370.411 674.104 370.411 673.396 cv
370.411 672.688 371.018 672.082 371.726 672.082 cv
373.041 672.082 li
373.041 670.767 li
373.041 670.059 373.648 669.451 374.356 669.451 cv
375.064 669.451 375.671 670.059 375.671 670.767 cv
375.671 673.296 li
375.57 674.104 374.963 674.712 374.255 674.712 cv
cp
f
371.726 719.02 mo
371.018 719.02 370.411 718.412 370.411 717.704 cv
370.411 674.712 li
365.353 674.712 li
365.353 717.704 li
365.353 718.412 364.746 719.02 364.038 719.02 cv
363.33 719.02 362.723 718.412 362.723 717.704 cv
362.723 673.498 li
362.723 672.79 363.33 672.183 364.038 672.183 cv
371.625 672.183 li
372.333 672.183 372.939 672.79 372.939 673.498 cv
372.939 717.806 li
373.041 718.412 372.434 719.02 371.726 719.02 cv
cp
f
375.57 669.654 mo
379.313 669.654 li
379.313 667.125 li
375.469 667.125 li
375.469 669.654 li
375.57 669.654 li
cp
380.628 672.183 mo
374.255 672.183 li
373.547 672.183 372.939 671.576 372.939 670.868 cv
372.939 665.81 li
372.939 665.102 373.547 664.495 374.255 664.495 cv
380.628 664.495 li
381.336 664.495 381.943 665.102 381.943 665.81 cv
381.943 670.868 li
381.842 671.576 381.235 672.183 380.628 672.183 cv
cp
f
326.812 669.654 mo
360.295 669.654 li
360.295 667.125 li
324.889 667.125 li
326.812 669.654 li
cp
361.61 672.183 mo
326.205 672.183 li
325.8 672.183 325.395 671.98 325.193 671.677 cv
321.349 666.619 li
321.045 666.215 321.045 665.709 321.248 665.304 cv
321.45 664.899 321.854 664.596 322.36 664.596 cv
361.61 664.596 li
362.318 664.596 362.925 665.203 362.925 665.911 cv
362.925 670.969 li
362.925 671.576 362.318 672.183 361.61 672.183 cv
cp
f
356.552 720.233 mo
379.313 720.233 li
379.313 718.918 li
356.552 718.918 li
356.552 720.233 li
cp
380.628 722.763 mo
355.338 722.763 li
354.63 722.763 354.023 722.155 354.023 721.447 cv
354.023 717.604 li
354.023 716.896 354.63 716.288 355.338 716.288 cv
380.628 716.288 li
381.336 716.288 381.943 716.896 381.943 717.604 cv
381.943 721.447 li
381.842 722.155 381.235 722.763 380.628 722.763 cv
cp
f
364.139 715.176 mo
363.836 715.176 363.633 715.074 363.431 714.872 cv
362.824 714.468 362.723 713.658 363.128 713.051 cv
370.107 703.644 li
363.128 694.438 li
362.824 694.033 362.824 693.325 363.128 692.921 cv
370.107 683.614 li
363.229 675.521 li
362.824 675.016 362.824 674.206 363.33 673.7 cv
363.836 673.194 364.645 673.296 365.15 673.802 cv
372.737 682.703 li
373.143 683.108 373.143 683.816 372.839 684.322 cv
365.858 693.729 li
372.839 703.138 li
373.143 703.542 373.143 704.25 372.839 704.655 cv
365.252 714.771 li
364.948 714.973 364.544 715.176 364.139 715.176 cv
cp
f
326.205 672.183 mo
325.8 672.183 325.294 671.98 325.092 671.576 cv
324.788 670.969 324.991 670.16 325.598 669.856 cv
334.5 664.798 li
334.904 664.596 335.41 664.596 335.713 664.798 cv
343.907 669.451 li
352.101 664.798 li
352.506 664.596 353.012 664.596 353.416 664.798 cv
361.003 669.856 li
361.61 670.261 361.711 671.07 361.307 671.576 cv
360.902 672.183 360.093 672.284 359.587 671.88 cv
352.607 667.227 li
344.413 671.88 li
344.008 672.082 343.502 672.082 343.199 671.88 cv
335.005 667.227 li
326.812 671.88 li
326.609 672.082 326.407 672.183 326.205 672.183 cv
cp
f
374.255 672.183 mo
373.851 672.183 373.547 671.98 373.243 671.677 cv
372.839 671.171 372.939 670.362 373.445 669.856 cv
379.818 664.798 li
380.324 664.394 381.134 664.495 381.64 665.001 cv
382.044 665.507 381.943 666.315 381.438 666.821 cv
375.064 671.88 li
374.862 672.082 374.559 672.183 374.255 672.183 cv
cp
f
343.907 678.556 mo
343.199 678.556 342.592 677.949 342.592 677.241 cv
342.592 670.868 li
342.592 670.16 343.199 669.553 343.907 669.553 cv
344.615 669.553 345.222 670.16 345.222 670.868 cv
345.222 677.241 li
345.222 677.949 344.615 678.556 343.907 678.556 cv
cp
f
341.378 682.906 mo
343.907 684.625 li
346.437 682.906 li
346.437 678.556 li
341.378 678.556 li
341.378 682.906 li
cp
343.907 687.356 mo
343.705 687.356 343.401 687.256 343.199 687.154 cv
339.355 684.625 li
339.052 684.423 338.748 684.019 338.748 683.614 cv
338.748 677.241 li
338.748 676.533 339.355 675.926 340.063 675.926 cv
347.65 675.926 li
348.358 675.926 348.965 676.533 348.965 677.241 cv
348.965 683.614 li
348.965 684.019 348.763 684.423 348.358 684.625 cv
344.514 687.154 li
344.413 687.256 344.109 687.356 343.907 687.356 cv
cp
f
332.578 710.117 mo
355.338 710.117 li
355.338 697.473 li
332.578 697.473 li
332.578 710.117 li
cp
356.552 712.646 mo
331.262 712.646 li
330.554 712.646 329.947 712.039 329.947 711.331 cv
329.947 696.157 li
329.947 695.449 330.554 694.843 331.262 694.843 cv
356.552 694.843 li
357.261 694.843 357.867 695.449 357.867 696.157 cv
357.867 711.331 li
357.867 712.039 357.261 712.646 356.552 712.646 cv
cp
f
335.106 697.473 mo
334.702 697.473 334.297 697.271 334.095 696.967 cv
333.69 696.359 333.792 695.651 334.398 695.247 cv
342.693 689.278 li
342.693 686.143 li
342.693 685.435 343.3 684.828 344.008 684.828 cv
344.717 684.828 345.323 685.435 345.323 686.143 cv
345.323 689.886 li
345.323 690.29 345.121 690.695 344.818 690.897 cv
335.814 697.271 li
335.612 697.371 335.309 697.473 335.106 697.473 cv
cp
f
351.494 697.473 mo
351.191 697.473 350.887 697.371 350.685 697.169 cv
343.098 690.897 li
342.592 690.492 342.491 689.684 342.896 689.076 cv
343.3 688.57 344.109 688.47 344.717 688.874 cv
352.304 695.247 li
352.809 695.651 352.91 696.461 352.506 697.068 cv
352.202 697.271 351.899 697.473 351.494 697.473 cv
cp
f
336.32 707.589 mo
335.612 707.589 335.005 706.981 335.005 706.273 cv
335.005 701.216 li
335.005 700.508 335.612 699.9 336.32 699.9 cv
337.028 699.9 337.635 700.508 337.635 701.216 cv
337.635 706.273 li
337.635 706.981 337.028 707.589 336.32 707.589 cv
cp
f
341.378 707.589 mo
340.67 707.589 340.063 706.981 340.063 706.273 cv
340.063 701.216 li
340.063 700.508 340.67 699.9 341.378 699.9 cv
342.086 699.9 342.693 700.508 342.693 701.216 cv
342.693 706.273 li
342.693 706.981 342.086 707.589 341.378 707.589 cv
cp
f
346.437 707.589 mo
345.728 707.589 345.121 706.981 345.121 706.273 cv
345.121 701.216 li
345.121 700.508 345.728 699.9 346.437 699.9 cv
347.145 699.9 347.751 700.508 347.751 701.216 cv
347.751 706.273 li
347.751 706.981 347.145 707.589 346.437 707.589 cv
cp
f
351.494 707.589 mo
350.786 707.589 350.179 706.981 350.179 706.273 cv
350.179 701.216 li
350.179 700.508 350.786 699.9 351.494 699.9 cv
352.202 699.9 352.809 700.508 352.809 701.216 cv
352.809 706.273 li
352.809 706.981 352.202 707.589 351.494 707.589 cv
cp
f
173.96 642.341 mo
275.119 642.341 li
275.119 743.5 li
173.96 743.5 li
173.96 642.341 li
cp
1 1 1 rgb
f
212.704 670.969 mo
212.704 663.382 li
227.878 663.382 li
227.878 670.969 li
227.878 679.77 li
212.704 679.77 li
212.704 670.969 li
cp
f
227.878 663.382 mo
240.523 663.382 li
240.523 670.969 li
227.878 670.969 li
227.878 663.382 li
cp
f
195.001 663.382 mo
212.704 663.382 li
212.704 670.969 li
195.001 670.969 li
195.001 663.382 li
cp
f
240.523 670.969 mo
240.523 693.831 li
240.118 693.831 239.713 693.729 239.208 693.729 cv
231.924 693.729 225.956 699.293 225.349 706.375 cv
195.001 706.375 li
195.001 670.969 li
212.704 670.969 li
212.704 679.77 li
227.878 679.77 li
227.878 670.868 li
240.523 670.868 li
240.523 670.969 li
cp
f
240.523 693.729 mo
240.118 693.729 239.713 693.629 239.208 693.629 cv
231.924 693.629 225.956 699.192 225.349 706.273 cv
225.349 706.678 225.248 707.083 225.248 707.589 cv
225.248 715.276 231.52 721.549 239.208 721.549 cv
246.896 721.549 253.167 715.276 253.167 707.589 cv
253.167 700.305 247.604 694.337 240.523 693.729 cv
cp
.760784 .890196 .968627 rgb
f
242.546 705.363 mo
242.546 703.542 241.029 702.024 239.208 702.024 cv
237.387 702.024 235.87 703.542 235.87 705.363 cv
235.87 707.184 237.387 708.701 239.208 708.701 cv
241.029 708.601 242.546 707.184 242.546 705.363 cv
cp
239.309 698.788 mo
242.951 698.788 245.884 701.722 245.783 705.262 cv
245.783 709.105 239.309 716.49 239.309 716.49 cv
239.309 716.49 232.835 710.117 232.835 705.262 cv
232.835 701.62 235.769 698.788 239.309 698.788 cv
cp
f
218.976 672.183 mo
195.001 672.183 li
194.293 672.183 193.687 671.576 193.687 670.868 cv
193.687 670.16 194.293 669.553 195.001 669.553 cv
219.077 669.553 li
219.785 669.553 220.392 670.16 220.392 670.868 cv
220.291 671.576 219.684 672.183 218.976 672.183 cv
cp
.0470588 .568627 .87451 rgb
f
240.523 672.183 mo
227.878 672.183 li
227.17 672.183 226.563 671.576 226.563 670.868 cv
226.563 670.16 227.17 669.553 227.878 669.553 cv
240.523 669.553 li
241.231 669.553 241.838 670.16 241.838 670.868 cv
241.737 671.576 241.13 672.183 240.523 672.183 cv
cp
f
227.878 681.085 mo
212.704 681.085 li
211.996 681.085 211.389 680.478 211.389 679.77 cv
211.389 663.382 li
211.389 662.674 211.996 662.067 212.704 662.067 cv
213.412 662.067 214.019 662.674 214.019 663.382 cv
214.019 678.556 li
226.563 678.556 li
226.563 663.382 li
226.563 662.674 227.17 662.067 227.878 662.067 cv
228.586 662.067 229.193 662.674 229.193 663.382 cv
229.193 679.77 li
229.092 680.478 228.485 681.085 227.878 681.085 cv
cp
f
211.389 693.729 mo
202.487 693.729 li
201.779 693.729 201.172 693.123 201.172 692.415 cv
201.172 691.707 201.779 691.1 202.487 691.1 cv
211.389 691.1 li
212.097 691.1 212.704 691.707 212.704 692.415 cv
212.704 693.123 212.097 693.729 211.389 693.729 cv
cp
f
215.233 698.788 mo
202.588 698.788 li
201.88 698.788 201.273 698.181 201.273 697.473 cv
201.273 696.765 201.88 696.157 202.588 696.157 cv
215.233 696.157 li
215.941 696.157 216.548 696.765 216.548 697.473 cv
216.548 698.181 215.84 698.788 215.233 698.788 cv
cp
f
225.349 707.589 mo
195.001 707.589 li
194.293 707.589 193.687 706.981 193.687 706.273 cv
193.687 663.382 li
193.687 662.674 194.293 662.067 195.001 662.067 cv
240.523 662.067 li
241.231 662.067 241.838 662.674 241.838 663.382 cv
241.838 693.831 li
241.838 694.539 241.231 695.146 240.523 695.146 cv
239.814 695.146 239.208 694.539 239.208 693.831 cv
239.208 664.596 li
196.215 664.596 li
196.215 705.06 li
225.349 705.06 li
226.057 705.06 226.664 705.666 226.664 706.375 cv
226.664 707.083 226.057 707.589 225.349 707.589 cv
cp
f
239.208 694.943 mo
232.632 694.943 227.17 699.9 226.664 706.476 cv
226.664 706.881 226.563 707.285 226.563 707.589 cv
226.563 714.568 232.228 720.233 239.208 720.233 cv
246.188 720.233 251.853 714.568 251.853 707.589 cv
251.853 701.014 246.896 695.551 240.32 695.045 cv
240.017 694.943 239.612 694.943 239.208 694.943 cv
cp
239.208 722.763 mo
230.812 722.763 224.034 715.984 224.034 707.589 cv
224.034 707.184 224.034 706.678 224.135 706.172 cv
224.438 702.43 226.158 698.889 228.991 696.359 cv
231.823 693.831 235.465 692.313 239.208 692.313 cv
239.612 692.313 240.118 692.313 240.624 692.415 cv
244.367 692.718 247.907 694.438 250.437 697.271 cv
252.965 700.103 254.483 703.744 254.483 707.487 cv
254.382 715.984 247.604 722.763 239.208 722.763 cv
cp
f
239.309 700.002 mo
237.893 700.002 236.578 700.508 235.566 701.519 cv
234.555 702.53 234.049 703.846 234.049 705.16 cv
234.049 708.195 237.185 712.242 239.208 714.468 cv
241.534 711.635 244.468 707.285 244.468 705.16 cv
244.468 703.744 243.962 702.53 242.951 701.519 cv
242.142 700.608 240.826 700.002 239.309 700.002 cv
cp
239.309 717.704 mo
239.005 717.704 238.702 717.604 238.398 717.3 cv
238.095 716.996 231.52 710.522 231.52 705.16 cv
231.52 703.138 232.329 701.114 233.745 699.698 cv
235.263 698.181 237.185 697.371 239.208 697.371 cv
241.332 697.371 243.254 698.181 244.771 699.698 cv
246.188 701.216 246.997 703.138 246.997 705.16 cv
246.896 709.409 240.826 716.39 240.219 717.198 cv
240.118 717.502 239.713 717.704 239.309 717.704 cv
239.41 717.704 239.41 717.704 239.309 717.704 cv
cp
f
239.309 703.34 mo
238.196 703.34 237.286 704.25 237.286 705.363 cv
237.286 706.476 238.196 707.387 239.309 707.387 cv
240.422 707.387 241.332 706.476 241.332 705.363 cv
241.332 704.25 240.422 703.34 239.309 703.34 cv
cp
239.309 709.915 mo
236.78 709.915 234.757 707.892 234.757 705.363 cv
234.757 702.834 236.78 700.811 239.309 700.811 cv
241.838 700.811 243.861 702.834 243.861 705.363 cv
243.861 707.892 241.737 709.915 239.309 709.915 cv
cp
f
46.5 642.341 mo
147.659 642.341 li
147.659 743.5 li
46.5 743.5 li
46.5 642.341 li
cp
1 1 1 rgb
f
86.458 663.382 mo
76.0386 663.382 67.541 671.88 67.541 682.299 cv
67.541 692.718 76.0386 701.216 86.458 701.216 cv
96.877 701.216 105.375 692.718 105.375 682.299 cv
105.375 671.778 96.877 663.382 86.458 663.382 cv
cp
f
86.458 668.339 mo
78.7695 668.339 72.5991 674.51 72.5991 682.197 cv
72.5991 689.886 78.7695 696.057 86.458 696.057 cv
94.146 696.057 100.316 689.886 100.316 682.197 cv
100.316 674.51 94.146 668.339 86.458 668.339 cv
cp
.760784 .890196 .968627 rgb
f
83.9287 677.241 mo
88.9868 677.241 li
88.9868 682.299 li
83.9287 682.299 li
83.9287 677.241 li
cp
f
92.7295 677.241 mo
92.7295 687.356 li
80.085 687.356 li
80.085 677.241 li
83.9287 677.241 li
83.9287 682.299 li
88.9868 682.299 li
88.9868 677.241 li
92.7295 677.241 li
cp
f
125.708 716.188 mo
120.346 721.549 li
111.545 712.748 li
111.646 712.545 li
116.704 707.487 li
116.907 707.387 li
125.708 716.188 li
cp
f
116.907 707.387 mo
116.704 707.487 li
111.646 712.545 li
111.545 712.748 li
107.802 709.005 li
113.164 703.644 li
116.907 707.387 li
cp
f
86.458 664.596 mo
76.6455 664.596 68.7549 672.486 68.7549 682.299 cv
68.7549 692.111 76.6455 700.002 86.458 700.002 cv
96.27 700.002 104.161 692.111 104.161 682.299 cv
104.161 672.486 96.1689 664.596 86.458 664.596 cv
cp
86.458 702.43 mo
75.3301 702.43 66.2261 693.325 66.2261 682.197 cv
66.2261 671.07 75.3301 661.966 86.458 661.966 cv
97.5854 661.966 106.689 671.07 106.689 682.197 cv
106.588 693.426 97.5854 702.43 86.458 702.43 cv
cp
.0470588 .568627 .87451 rgb
f
86.458 669.654 mo
79.478 669.654 73.813 675.318 73.813 682.299 cv
73.813 689.278 79.478 694.943 86.458 694.943 cv
93.4375 694.943 99.1025 689.278 99.1025 682.299 cv
99.1025 675.318 93.4375 669.654 86.458 669.654 cv
cp
86.458 697.473 mo
78.0615 697.473 71.2837 690.695 71.2837 682.299 cv
71.2837 673.902 78.0615 667.125 86.458 667.125 cv
94.854 667.125 101.632 673.902 101.632 682.299 cv
101.632 690.594 94.7529 697.473 86.458 697.473 cv
cp
f
109.623 709.005 mo
120.346 719.728 li
123.887 716.188 li
113.164 705.464 li
109.623 709.005 li
cp
120.346 722.763 mo
120.042 722.763 119.739 722.661 119.436 722.357 cv
106.892 709.915 li
106.386 709.409 106.386 708.601 106.892 708.095 cv
112.253 702.732 li
112.759 702.227 113.568 702.227 114.074 702.732 cv
126.618 715.276 li
126.82 715.479 127.022 715.884 127.022 716.188 cv
127.022 716.49 126.921 716.794 126.618 717.098 cv
121.256 722.459 li
120.953 722.661 120.649 722.763 120.346 722.763 cv
cp
f
110.433 707.487 mo
110.129 707.487 109.826 707.387 109.522 707.083 cv
99.4063 696.967 li
98.9004 696.461 98.9004 695.651 99.4063 695.146 cv
99.9121 694.641 100.721 694.641 101.227 695.146 cv
111.343 705.262 li
111.849 705.768 111.849 706.577 111.343 707.083 cv
111.04 707.387 110.736 707.487 110.433 707.487 cv
cp
f
111.646 713.86 mo
111.343 713.86 111.04 713.76 110.736 713.456 cv
110.23 712.95 110.23 712.141 110.736 711.635 cv
115.794 706.577 li
116.3 706.071 117.109 706.071 117.615 706.577 cv
118.121 707.083 118.121 707.892 117.615 708.397 cv
112.557 713.456 li
112.354 713.76 112.051 713.86 111.646 713.86 cv
cp
f
92.7295 688.57 mo
80.085 688.57 li
79.3765 688.57 78.7695 687.964 78.7695 687.256 cv
78.7695 677.14 li
78.7695 676.432 79.3765 675.824 80.085 675.824 cv
83.9287 675.824 li
84.6367 675.824 85.2437 676.432 85.2437 677.14 cv
85.2437 677.848 84.6367 678.455 83.9287 678.455 cv
81.3999 678.455 li
81.3999 686.042 li
91.5156 686.042 li
91.5156 678.455 li
88.9868 678.455 li
88.2788 678.455 87.6719 677.848 87.6719 677.14 cv
87.6719 676.432 88.2788 675.824 88.9868 675.824 cv
92.7295 675.824 li
93.4375 675.824 94.0449 676.432 94.0449 677.14 cv
94.0449 687.256 li
94.0449 688.064 93.4375 688.57 92.7295 688.57 cv
cp
f
85.1426 680.983 mo
87.6719 680.983 li
87.6719 678.455 li
85.1426 678.455 li
85.1426 680.983 li
cp
88.9868 683.513 mo
83.9287 683.513 li
83.2207 683.513 82.6138 682.906 82.6138 682.197 cv
82.6138 677.14 li
82.6138 676.432 83.2207 675.824 83.9287 675.824 cv
88.9868 675.824 li
89.6948 675.824 90.3018 676.432 90.3018 677.14 cv
90.3018 682.197 li
90.2007 683.007 89.6948 683.513 88.9868 683.513 cv
cp
f
556.341 514.881 mo
657.5 514.881 li
657.5 616.04 li
556.341 616.04 li
556.341 514.881 li
cp
1 1 1 rgb
f
577.382 543.509 mo
577.382 545.026 577.382 577.296 577.382 578.914 cv
578.697 578.914 621.083 578.914 622.903 578.914 cv
622.903 577.296 622.903 545.026 622.903 543.509 cv
577.382 543.509 li
cp
f
622.903 566.27 mo
622.499 566.27 622.095 566.168 621.589 566.168 cv
614.305 566.168 608.337 571.732 607.729 578.813 cv
607.729 579.218 607.629 579.622 607.629 580.128 cv
607.629 587.816 613.9 594.088 621.589 594.088 cv
629.276 594.088 635.549 587.816 635.549 580.128 cv
635.549 572.845 629.984 566.877 622.903 566.27 cv
cp
.760784 .890196 .968627 rgb
f
577.382 535.922 mo
577.382 543.509 li
577.787 543.509 622.499 543.509 622.903 543.509 cv
622.903 535.922 li
622.397 535.922 577.787 535.922 577.382 535.922 cv
cp
1 1 1 rgb
f
595.085 543.509 mo
595.085 535.922 li
610.259 535.922 li
610.259 543.509 li
610.259 552.31 li
595.085 552.31 li
595.085 543.509 li
cp
f
601.356 544.723 mo
577.382 544.723 li
576.674 544.723 576.067 544.115 576.067 543.407 cv
576.067 542.699 576.674 542.093 577.382 542.093 cv
601.458 542.093 li
602.166 542.093 602.773 542.699 602.773 543.407 cv
602.672 544.115 602.064 544.723 601.356 544.723 cv
cp
.0470588 .568627 .87451 rgb
f
622.903 544.723 mo
610.259 544.723 li
609.551 544.723 608.943 544.115 608.943 543.407 cv
608.943 542.699 609.551 542.093 610.259 542.093 cv
622.903 542.093 li
623.611 542.093 624.219 542.699 624.219 543.407 cv
624.117 544.115 623.511 544.723 622.903 544.723 cv
cp
f
610.259 553.625 mo
595.085 553.625 li
594.377 553.625 593.77 553.018 593.77 552.31 cv
593.77 535.922 li
593.77 535.214 594.377 534.606 595.085 534.606 cv
595.793 534.606 596.4 535.214 596.4 535.922 cv
596.4 551.096 li
608.943 551.096 li
608.943 535.922 li
608.943 535.214 609.551 534.606 610.259 534.606 cv
610.967 534.606 611.574 535.214 611.574 535.922 cv
611.574 552.31 li
611.473 553.018 610.865 553.625 610.259 553.625 cv
cp
f
593.77 566.27 mo
584.868 566.27 li
584.16 566.27 583.553 565.662 583.553 564.954 cv
583.553 564.246 584.16 563.64 584.868 563.64 cv
593.77 563.64 li
594.479 563.64 595.085 564.246 595.085 564.954 cv
595.085 565.662 594.479 566.27 593.77 566.27 cv
cp
f
597.614 571.327 mo
584.969 571.327 li
584.261 571.327 583.654 570.721 583.654 570.013 cv
583.654 569.305 584.261 568.697 584.969 568.697 cv
597.614 568.697 li
598.322 568.697 598.929 569.305 598.929 570.013 cv
598.929 570.721 598.221 571.327 597.614 571.327 cv
cp
f
607.729 580.128 mo
577.382 580.128 li
576.674 580.128 576.067 579.521 576.067 578.813 cv
576.067 535.922 li
576.067 535.214 576.674 534.606 577.382 534.606 cv
622.903 534.606 li
623.611 534.606 624.219 535.214 624.219 535.922 cv
624.219 566.371 li
624.219 567.079 623.611 567.686 622.903 567.686 cv
622.195 567.686 621.589 567.079 621.589 566.371 cv
621.589 537.136 li
578.596 537.136 li
578.596 577.6 li
607.729 577.6 li
608.438 577.6 609.045 578.206 609.045 578.914 cv
609.045 579.622 608.438 580.128 607.729 580.128 cv
cp
f
621.589 567.483 mo
615.014 567.483 609.551 572.44 609.045 579.016 cv
609.045 579.42 608.943 579.825 608.943 580.128 cv
608.943 587.108 614.608 592.773 621.589 592.773 cv
628.568 592.773 634.233 587.108 634.233 580.128 cv
634.233 573.553 629.276 568.091 622.701 567.585 cv
622.397 567.483 621.993 567.483 621.589 567.483 cv
cp
621.589 595.302 mo
613.192 595.302 606.415 588.524 606.415 580.128 cv
606.415 579.724 606.415 579.218 606.516 578.712 cv
606.819 574.969 608.539 571.429 611.371 568.899 cv
614.204 566.371 617.846 564.854 621.589 564.854 cv
621.993 564.854 622.499 564.854 623.005 564.954 cv
626.748 565.258 630.288 566.978 632.817 569.811 cv
635.346 572.643 636.863 576.284 636.863 580.027 cv
636.763 588.524 629.984 595.302 621.589 595.302 cv
cp
f
626.242 580.533 mo
626.242 578.206 li
624.522 580.533 li
626.242 580.533 li
cp
629.176 580.533 mo
629.176 582.354 li
628.063 582.354 li
628.063 584.073 li
626.039 584.073 li
626.039 582.354 li
622.499 582.354 li
622.499 580.634 li
626.748 575.272 li
628.164 575.272 li
628.164 580.634 li
629.176 580.533 li
629.176 580.533 li
cp
f
621.589 580.735 mo
621.589 582.556 li
615.114 582.556 li
615.114 582.151 615.114 581.747 615.216 581.443 cv
615.316 581.14 615.418 580.836 615.519 580.533 cv
615.722 580.229 615.924 580.027 616.126 579.825 cv
616.43 579.622 616.732 579.42 617.036 579.218 cv
617.441 579.016 617.744 578.813 618.048 578.712 cv
618.352 578.611 618.554 578.408 618.655 578.308 cv
618.756 578.206 618.958 578.105 618.958 578.004 cv
619.06 577.902 619.06 577.802 619.06 577.7 cv
619.06 577.498 618.958 577.296 618.756 577.094 cv
618.554 576.992 618.352 576.892 618.048 576.892 cv
617.644 576.892 617.34 576.992 617.138 577.194 cv
616.834 577.396 616.632 577.6 616.328 577.902 cv
615.014 576.386 li
615.114 576.183 615.316 576.082 615.519 575.98 cv
615.722 575.88 616.024 575.678 616.328 575.576 cv
616.632 575.475 616.936 575.374 617.34 575.272 cv
617.644 575.172 618.048 575.172 618.452 575.172 cv
619.363 575.172 620.071 575.374 620.577 575.778 cv
621.083 576.183 621.285 576.688 621.285 577.396 cv
621.285 577.7 621.285 577.902 621.184 578.206 cv
621.083 578.408 620.981 578.611 620.779 578.813 cv
620.678 579.016 620.476 579.116 620.273 579.319 cv
620.071 579.42 619.869 579.622 619.666 579.724 cv
619.565 579.825 619.363 579.926 619.262 579.926 cv
619.161 580.027 618.958 580.128 618.857 580.229 cv
618.756 580.33 618.554 580.432 618.452 580.533 cv
618.352 580.634 618.25 580.735 618.149 580.938 cv
621.589 580.735 li
621.589 580.735 li
cp
f
428.881 514.881 mo
530.04 514.881 li
530.04 616.04 li
428.881 616.04 li
428.881 514.881 li
cp
1 1 1 rgb
f
449.922 543.509 mo
449.922 545.026 449.922 577.296 449.922 578.914 cv
451.237 578.914 493.622 578.914 495.443 578.914 cv
495.443 577.296 495.443 545.026 495.443 543.509 cv
449.922 543.509 li
cp
f
449.922 535.922 mo
449.922 543.509 li
452.653 543.509 493.42 543.509 495.443 543.509 cv
495.443 535.922 li
493.42 535.922 452.653 535.922 449.922 535.922 cv
cp
f
467.625 543.509 mo
467.625 535.922 li
482.799 535.922 li
482.799 543.509 li
482.799 552.31 li
467.625 552.31 li
467.625 543.509 li
cp
f
495.443 566.27 mo
495.039 566.27 494.634 566.168 494.128 566.168 cv
486.845 566.168 480.877 571.732 480.27 578.813 cv
480.27 579.218 480.168 579.622 480.168 580.128 cv
480.168 587.816 486.44 594.088 494.128 594.088 cv
501.816 594.088 508.088 587.816 508.088 580.128 cv
508.088 572.845 502.524 566.877 495.443 566.27 cv
cp
.760784 .890196 .968627 rgb
f
501.715 577.6 mo
501.715 582.657 li
496.657 582.657 li
496.657 587.715 li
491.6 587.715 li
491.6 582.657 li
486.541 582.657 li
486.541 577.6 li
491.6 577.6 li
491.6 572.541 li
496.657 572.541 li
496.657 577.6 li
501.715 577.6 li
cp
f
473.896 544.723 mo
449.922 544.723 li
449.214 544.723 448.606 544.115 448.606 543.407 cv
448.606 542.699 449.214 542.093 449.922 542.093 cv
473.998 542.093 li
474.706 542.093 475.313 542.699 475.313 543.407 cv
475.212 544.115 474.604 544.723 473.896 544.723 cv
cp
.0470588 .568627 .87451 rgb
f
495.443 544.723 mo
482.799 544.723 li
482.091 544.723 481.483 544.115 481.483 543.407 cv
481.483 542.699 482.091 542.093 482.799 542.093 cv
495.443 542.093 li
496.151 542.093 496.759 542.699 496.759 543.407 cv
496.657 544.115 496.051 544.723 495.443 544.723 cv
cp
f
482.799 553.625 mo
467.625 553.625 li
466.917 553.625 466.31 553.018 466.31 552.31 cv
466.31 535.922 li
466.31 535.214 466.917 534.606 467.625 534.606 cv
468.333 534.606 468.939 535.214 468.939 535.922 cv
468.939 551.096 li
481.483 551.096 li
481.483 535.922 li
481.483 535.214 482.091 534.606 482.799 534.606 cv
483.507 534.606 484.113 535.214 484.113 535.922 cv
484.113 552.31 li
484.013 553.018 483.405 553.625 482.799 553.625 cv
cp
f
466.31 566.27 mo
457.407 566.27 li
456.699 566.27 456.093 565.662 456.093 564.954 cv
456.093 564.246 456.699 563.64 457.407 563.64 cv
466.31 563.64 li
467.018 563.64 467.625 564.246 467.625 564.954 cv
467.625 565.662 467.018 566.27 466.31 566.27 cv
cp
f
470.153 571.327 mo
457.509 571.327 li
456.801 571.327 456.193 570.721 456.193 570.013 cv
456.193 569.305 456.801 568.697 457.509 568.697 cv
470.153 568.697 li
470.861 568.697 471.469 569.305 471.469 570.013 cv
471.469 570.721 470.761 571.327 470.153 571.327 cv
cp
f
480.27 580.128 mo
449.922 580.128 li
449.214 580.128 448.606 579.521 448.606 578.813 cv
448.606 535.922 li
448.606 535.214 449.214 534.606 449.922 534.606 cv
495.443 534.606 li
496.151 534.606 496.759 535.214 496.759 535.922 cv
496.759 566.371 li
496.759 567.079 496.151 567.686 495.443 567.686 cv
494.735 567.686 494.128 567.079 494.128 566.371 cv
494.128 537.136 li
451.136 537.136 li
451.136 577.6 li
480.27 577.6 li
480.978 577.6 481.585 578.206 481.585 578.914 cv
481.585 579.622 480.978 580.128 480.27 580.128 cv
cp
f
494.128 567.483 mo
487.553 567.483 482.091 572.44 481.585 579.016 cv
481.585 579.42 481.483 579.825 481.483 580.128 cv
481.483 587.108 487.148 592.773 494.128 592.773 cv
501.108 592.773 506.773 587.108 506.773 580.128 cv
506.773 573.553 501.816 568.091 495.241 567.585 cv
494.938 567.483 494.533 567.483 494.128 567.483 cv
cp
494.128 595.302 mo
485.732 595.302 478.954 588.524 478.954 580.128 cv
478.954 579.724 478.954 579.218 479.056 578.712 cv
479.359 574.969 481.079 571.429 483.911 568.899 cv
486.744 566.371 490.386 564.854 494.128 564.854 cv
494.533 564.854 495.039 564.854 495.545 564.954 cv
499.287 565.258 502.828 566.978 505.357 569.811 cv
507.886 572.643 509.403 576.284 509.403 580.027 cv
509.302 588.524 502.524 595.302 494.128 595.302 cv
cp
f
492.914 586.501 mo
495.443 586.501 li
495.443 582.657 li
495.443 581.949 496.051 581.342 496.759 581.342 cv
500.603 581.342 li
500.603 578.813 li
496.657 578.813 li
495.949 578.813 495.342 578.206 495.342 577.498 cv
495.342 573.654 li
492.813 573.654 li
492.813 577.6 li
492.813 578.308 492.206 578.914 491.498 578.914 cv
487.654 578.914 li
487.654 581.443 li
491.6 581.443 li
492.308 581.443 492.914 582.05 492.914 582.759 cv
492.914 586.501 li
cp
496.657 589.03 mo
491.6 589.03 li
490.892 589.03 490.284 588.423 490.284 587.715 cv
490.284 583.871 li
486.541 583.871 li
485.833 583.871 485.227 583.264 485.227 582.556 cv
485.227 577.498 li
485.227 576.79 485.833 576.183 486.541 576.183 cv
490.386 576.183 li
490.386 572.541 li
490.386 571.833 490.992 571.227 491.7 571.227 cv
496.759 571.227 li
497.467 571.227 498.073 571.833 498.073 572.541 cv
498.073 576.386 li
501.715 576.386 li
502.423 576.386 503.03 576.992 503.03 577.7 cv
503.03 582.759 li
503.03 583.467 502.423 584.073 501.715 584.073 cv
497.871 584.073 li
497.871 587.715 li
497.973 588.423 497.365 589.03 496.657 589.03 cv
cp
f
301.42 514.881 mo
402.579 514.881 li
402.579 616.04 li
301.42 616.04 li
301.42 514.881 li
cp
1 1 1 rgb
f
374.255 543.509 mo
374.255 578.914 li
351.494 578.914 li
328.733 578.914 li
328.733 543.509 li
374.255 543.509 li
cp
f
351.494 586.4 mo
353.617 586.4 355.338 588.121 355.338 590.244 cv
355.338 592.367 353.617 594.088 351.494 594.088 cv
349.371 594.088 347.65 592.367 347.65 590.244 cv
347.65 588.121 349.371 586.4 351.494 586.4 cv
cp
f
328.733 535.922 mo
328.733 543.509 li
330.655 543.509 371.523 543.509 374.255 543.509 cv
374.255 535.922 li
371.423 535.922 330.554 535.922 328.733 535.922 cv
cp
f
346.437 543.509 mo
346.437 535.922 li
361.61 535.922 li
361.61 543.509 li
361.61 552.31 li
346.437 552.31 li
346.437 543.509 li
cp
f
374.255 580.128 mo
328.733 580.128 li
328.025 580.128 327.418 579.521 327.418 578.813 cv
327.418 535.922 li
327.418 535.214 328.025 534.606 328.733 534.606 cv
346.437 534.606 li
347.145 534.606 347.751 535.214 347.751 535.922 cv
347.751 536.63 347.145 537.136 346.437 537.136 cv
330.048 537.136 li
330.048 577.6 li
373.041 577.6 li
373.041 537.136 li
361.61 537.136 li
360.902 537.136 360.295 536.528 360.295 535.82 cv
360.295 535.112 360.902 534.506 361.61 534.506 cv
374.255 534.506 li
374.963 534.506 375.57 535.112 375.57 535.82 cv
375.57 578.813 li
375.57 579.521 374.963 580.128 374.255 580.128 cv
cp
.0470588 .568627 .87451 rgb
f
352.809 544.723 mo
328.733 544.723 li
328.025 544.723 327.418 544.115 327.418 543.407 cv
327.418 542.699 328.025 542.093 328.733 542.093 cv
352.809 542.093 li
353.518 542.093 354.125 542.699 354.125 543.407 cv
354.023 544.115 353.416 544.723 352.809 544.723 cv
cp
f
374.255 544.723 mo
361.61 544.723 li
360.902 544.723 360.295 544.115 360.295 543.407 cv
360.295 542.699 360.902 542.093 361.61 542.093 cv
374.255 542.093 li
374.963 542.093 375.57 542.699 375.57 543.407 cv
375.57 544.115 374.963 544.723 374.255 544.723 cv
cp
f
347.751 551.096 mo
360.396 551.096 li
360.396 537.136 li
347.751 537.136 li
347.751 551.096 li
cp
361.61 553.625 mo
346.437 553.625 li
345.728 553.625 345.121 553.018 345.121 552.31 cv
345.121 535.922 li
345.121 535.214 345.728 534.606 346.437 534.606 cv
361.61 534.606 li
362.318 534.606 362.925 535.214 362.925 535.922 cv
362.925 552.31 li
362.925 553.018 362.318 553.625 361.61 553.625 cv
cp
f
345.222 566.27 mo
336.32 566.27 li
335.612 566.27 335.005 565.662 335.005 564.954 cv
335.005 564.246 335.612 563.64 336.32 563.64 cv
345.222 563.64 li
345.931 563.64 346.538 564.246 346.538 564.954 cv
346.437 565.662 345.829 566.27 345.222 566.27 cv
cp
f
348.965 571.327 mo
336.32 571.327 li
335.612 571.327 335.005 570.721 335.005 570.013 cv
335.005 569.305 335.612 568.697 336.32 568.697 cv
348.965 568.697 li
349.673 568.697 350.28 569.305 350.28 570.013 cv
350.28 570.721 349.673 571.327 348.965 571.327 cv
cp
f
351.494 587.715 mo
350.078 587.715 348.965 588.828 348.965 590.244 cv
348.965 591.66 350.078 592.773 351.494 592.773 cv
352.91 592.773 354.023 591.66 354.023 590.244 cv
354.023 588.828 352.91 587.715 351.494 587.715 cv
cp
351.494 595.302 mo
348.662 595.302 346.437 593.076 346.437 590.244 cv
346.437 587.412 348.662 585.187 351.494 585.187 cv
354.327 585.187 356.552 587.412 356.552 590.244 cv
356.552 593.076 354.327 595.302 351.494 595.302 cv
cp
f
351.494 587.715 mo
350.786 587.715 350.179 587.108 350.179 586.4 cv
350.179 578.813 li
350.179 578.105 350.786 577.498 351.494 577.498 cv
352.202 577.498 352.809 578.105 352.809 578.813 cv
352.809 586.4 li
352.809 587.108 352.202 587.715 351.494 587.715 cv
cp
f
347.751 591.56 mo
322.461 591.56 li
321.753 591.56 321.146 590.952 321.146 590.244 cv
321.146 589.536 321.753 588.929 322.461 588.929 cv
347.751 588.929 li
348.459 588.929 349.066 589.536 349.066 590.244 cv
348.965 590.952 348.358 591.56 347.751 591.56 cv
cp
f
380.628 591.56 mo
355.338 591.56 li
354.63 591.56 354.023 590.952 354.023 590.244 cv
354.023 589.536 354.63 588.929 355.338 588.929 cv
380.628 588.929 li
381.336 588.929 381.943 589.536 381.943 590.244 cv
381.842 590.952 381.235 591.56 380.628 591.56 cv
cp
f
173.96 514.881 mo
275.119 514.881 li
275.119 616.04 li
173.96 616.04 li
173.96 514.881 li
cp
1 1 1 rgb
f
226.563 553.625 mo
226.563 554.939 li
226.563 556.355 225.45 557.469 224.034 557.469 cv
220.19 557.469 li
218.774 557.469 217.661 558.581 217.661 559.998 cv
217.661 560.706 217.357 561.313 216.953 561.818 cv
216.548 562.324 215.84 562.426 215.233 562.426 cv
196.215 562.426 li
195.103 562.324 li
195.709 555.445 198.744 549.274 203.296 544.621 cv
203.903 544.723 li
215.334 544.723 li
216.75 544.723 217.863 545.835 217.863 547.252 cv
217.863 548.566 li
217.863 549.982 218.976 551.096 220.392 551.096 cv
224.236 551.096 li
225.45 551.096 226.563 552.208 226.563 553.625 cv
cp
.760784 .890196 .968627 rgb
f
221.505 582.657 mo
222.921 582.657 224.034 583.77 224.034 585.187 cv
224.034 585.895 223.73 586.501 223.326 587.007 cv
222.921 587.513 222.213 587.715 221.505 587.715 cv
218.976 587.715 li
217.56 587.715 216.447 588.828 216.447 590.244 cv
216.447 592.773 li
215.739 592.874 li
209.872 591.154 204.712 587.614 201.071 582.859 cv
201.273 582.657 li
221.505 582.657 li
cp
1 1 1 rgb
f
247.907 576.588 mo
247.907 573.755 245.581 571.429 242.748 571.429 cv
239.916 571.429 237.589 573.755 237.589 576.588 cv
237.589 579.42 239.916 581.747 242.748 581.747 cv
245.581 581.747 247.907 579.42 247.907 576.588 cv
cp
242.85 566.27 mo
248.514 566.27 253.167 570.821 253.066 576.486 cv
252.965 582.556 242.85 594.088 242.85 594.088 cv
242.85 594.088 232.733 584.073 232.632 576.486 cv
232.632 570.821 237.286 566.27 242.85 566.27 cv
cp
.760784 .890196 .968627 rgb
f
224.034 595.302 mo
221.1 595.302 218.167 594.897 215.334 594.088 cv
209.265 592.268 204.004 588.626 200.059 583.669 cv
195.912 578.308 193.687 571.833 193.687 565.056 cv
193.687 564.146 193.687 563.234 193.788 562.324 cv
194.395 555.445 197.429 548.87 202.285 543.813 cv
208.051 537.945 215.739 534.708 224.034 534.708 cv
232.126 534.708 239.713 537.844 245.479 543.609 cv
251.246 549.376 254.382 556.963 254.382 565.056 cv
254.382 565.764 253.775 566.371 253.066 566.371 cv
252.358 566.371 251.853 565.662 251.853 564.954 cv
251.853 549.578 239.41 537.136 224.034 537.136 cv
216.447 537.136 209.366 540.069 204.105 545.532 cv
199.655 550.084 196.822 556.153 196.316 562.426 cv
196.215 563.336 196.215 564.146 196.215 564.954 cv
196.215 571.227 198.238 577.094 202.083 582.05 cv
205.724 586.703 210.479 589.94 216.144 591.66 cv
218.672 592.47 221.404 592.773 224.135 592.773 cv
224.843 592.773 225.45 593.38 225.45 594.088 cv
225.349 594.695 224.742 595.302 224.034 595.302 cv
cp
.0470588 .568627 .87451 rgb
f
215.233 563.74 mo
196.215 563.74 li
195.507 563.74 194.9 563.134 194.9 562.426 cv
194.9 561.718 195.507 561.11 196.215 561.11 cv
215.233 561.11 li
215.537 561.11 215.84 561.01 216.144 560.706 cv
216.346 560.504 216.548 560.2 216.548 559.795 cv
216.548 557.671 218.268 555.951 220.392 555.951 cv
224.236 555.951 li
224.944 555.951 225.551 555.345 225.551 554.636 cv
225.551 553.321 li
225.551 552.613 224.944 552.006 224.236 552.006 cv
220.392 552.006 li
218.268 552.006 216.548 550.286 216.548 548.162 cv
216.548 547.252 li
216.548 546.543 215.941 545.937 215.233 545.937 cv
203.802 545.937 li
203.094 545.937 202.487 545.329 202.487 544.621 cv
202.487 543.913 203.094 543.307 203.802 543.307 cv
215.233 543.307 li
217.357 543.307 219.077 545.026 219.077 547.15 cv
219.077 548.466 li
219.077 549.174 219.684 549.78 220.392 549.78 cv
224.236 549.78 li
226.36 549.78 228.08 551.5 228.08 553.625 cv
228.08 554.939 li
228.08 557.064 226.36 558.784 224.236 558.784 cv
220.392 558.784 li
219.684 558.784 219.077 559.391 219.077 560.099 cv
219.077 561.11 218.672 562.021 217.964 562.83 cv
217.155 563.336 216.245 563.74 215.233 563.74 cv
cp
f
216.447 594.088 mo
215.739 594.088 215.132 593.481 215.132 592.773 cv
215.132 590.244 li
215.132 588.12 216.852 586.4 218.976 586.4 cv
221.505 586.4 li
221.809 586.4 222.112 586.299 222.416 585.995 cv
222.618 585.793 222.82 585.489 222.82 585.085 cv
222.82 584.377 222.213 583.77 221.505 583.77 cv
201.273 583.77 li
200.565 583.77 199.958 583.163 199.958 582.455 cv
199.958 581.747 200.565 581.14 201.273 581.14 cv
221.505 581.14 li
223.629 581.14 225.349 582.859 225.349 584.983 cv
225.349 585.995 224.944 586.906 224.236 587.715 cv
223.528 588.423 222.517 588.828 221.505 588.828 cv
218.976 588.828 li
218.268 588.828 217.661 589.435 217.661 590.143 cv
217.661 592.773 li
217.762 593.481 217.155 594.088 216.447 594.088 cv
cp
f
242.85 567.483 mo
240.422 567.483 238.196 568.394 236.477 570.113 cv
234.757 571.833 233.846 574.059 233.846 576.386 cv
233.846 582.05 240.32 589.536 242.748 592.065 cv
245.884 588.322 251.65 580.533 251.751 576.284 cv
251.751 573.958 250.841 571.732 249.223 570.013 cv
247.604 568.394 245.378 567.483 242.85 567.483 cv
cp
242.85 595.302 mo
242.546 595.302 242.243 595.201 241.939 594.897 cv
241.534 594.493 231.418 584.479 231.317 576.386 cv
231.317 573.351 232.531 570.417 234.656 568.293 cv
236.78 566.067 239.713 564.954 242.85 564.954 cv
245.985 564.954 248.919 566.168 251.043 568.394 cv
253.167 570.519 254.382 573.452 254.28 576.486 cv
254.28 579.319 252.459 583.264 248.919 588.322 cv
246.39 591.964 243.861 594.796 243.76 594.897 cv
243.659 595.1 243.254 595.302 242.85 595.302 cv
242.951 595.302 242.951 595.302 242.85 595.302 cv
cp
f
242.748 572.643 mo
240.624 572.643 238.803 574.362 238.803 576.588 cv
238.803 578.712 240.523 580.533 242.748 580.533 cv
244.873 580.533 246.693 578.813 246.693 576.588 cv
246.693 574.464 244.873 572.643 242.748 572.643 cv
cp
242.748 583.062 mo
239.208 583.062 236.274 580.128 236.274 576.588 cv
236.274 573.047 239.208 570.113 242.748 570.113 cv
246.289 570.113 249.223 573.047 249.223 576.588 cv
249.223 580.128 246.289 583.062 242.748 583.062 cv
cp
f
46.5 514.881 mo
147.659 514.881 li
147.659 616.04 li
46.5 616.04 li
46.5 514.881 li
cp
1 1 1 rgb
f
125.708 575.07 mo
125.708 581.443 li
100.417 581.443 li
90.3018 581.443 li
67.541 581.443 li
67.541 575.07 li
125.708 575.07 li
cp
f
67.541 535.922 mo
125.708 535.922 li
125.708 575.172 li
67.541 575.172 li
67.541 535.922 li
cp
f
111.748 542.193 mo
111.748 568.799 li
83.9287 568.799 li
83.9287 542.193 li
92.3252 542.193 li
92.3252 552.31 li
102.947 552.31 li
102.947 542.193 li
111.748 542.193 li
cp
f
92.3252 542.193 mo
102.947 542.193 li
102.947 552.31 li
92.3252 552.31 li
92.3252 542.193 li
cp
.760784 .890196 .968627 rgb
f
125.708 582.657 mo
100.417 582.657 li
99.7095 582.657 99.1025 582.05 99.1025 581.342 cv
99.1025 580.634 99.7095 580.027 100.417 580.027 cv
124.393 580.027 li
124.393 537.136 li
68.7549 537.136 li
68.7549 580.128 li
90.3018 580.128 li
91.0098 580.128 91.6167 580.735 91.6167 581.443 cv
91.6167 582.151 91.0098 582.759 90.3018 582.759 cv
67.541 582.759 li
66.833 582.759 66.2261 582.151 66.2261 581.443 cv
66.2261 535.922 li
66.2261 535.214 66.833 534.606 67.541 534.606 cv
125.708 534.606 li
126.416 534.606 127.022 535.214 127.022 535.922 cv
127.022 581.443 li
126.921 582.05 126.314 582.657 125.708 582.657 cv
cp
.0470588 .568627 .87451 rgb
f
100.417 595.302 mo
99.7095 595.302 99.1025 594.695 99.1025 593.987 cv
99.1025 582.657 li
91.5156 582.657 li
91.5156 594.088 li
91.5156 594.796 90.9087 595.403 90.2007 595.403 cv
89.4927 595.403 88.9868 594.695 88.9868 594.088 cv
88.9868 581.443 li
88.9868 580.735 89.5938 580.128 90.3018 580.128 cv
100.417 580.128 li
101.126 580.128 101.733 580.735 101.733 581.443 cv
101.733 594.088 li
101.632 594.695 101.025 595.302 100.417 595.302 cv
cp
f
104.161 595.302 mo
86.458 595.302 li
85.7495 595.302 85.1426 594.695 85.1426 593.987 cv
85.1426 593.279 85.7495 592.672 86.458 592.672 cv
104.161 592.672 li
104.869 592.672 105.476 593.279 105.476 593.987 cv
105.476 594.695 104.869 595.302 104.161 595.302 cv
cp
f
125.708 576.386 mo
67.541 576.386 li
66.833 576.386 66.2261 575.778 66.2261 575.07 cv
66.2261 574.362 66.833 573.755 67.541 573.755 cv
125.708 573.755 li
126.416 573.755 127.022 574.362 127.022 575.07 cv
127.022 575.778 126.314 576.386 125.708 576.386 cv
cp
f
111.748 570.013 mo
83.9287 570.013 li
83.2207 570.013 82.6138 569.405 82.6138 568.697 cv
82.6138 542.193 li
82.6138 541.485 83.2207 540.879 83.9287 540.879 cv
92.3252 540.879 li
93.0332 540.879 93.6401 541.485 93.6401 542.193 cv
93.6401 542.901 93.0332 543.509 92.3252 543.509 cv
85.2437 543.509 li
85.2437 567.483 li
110.534 567.483 li
110.534 543.509 li
102.947 543.509 li
102.239 543.509 101.632 542.901 101.632 542.193 cv
101.632 541.485 102.239 540.879 102.947 540.879 cv
111.849 540.879 li
112.557 540.879 113.164 541.485 113.164 542.193 cv
113.164 568.799 li
113.063 569.405 112.456 570.013 111.748 570.013 cv
cp
f
93.5391 551.096 mo
101.632 551.096 li
101.632 543.509 li
93.5391 543.509 li
93.5391 551.096 li
cp
102.947 553.625 mo
92.3252 553.625 li
91.6167 553.625 91.0098 553.018 91.0098 552.31 cv
91.0098 542.193 li
91.0098 541.485 91.6167 540.879 92.3252 540.879 cv
102.947 540.879 li
103.655 540.879 104.262 541.485 104.262 542.193 cv
104.262 552.31 li
104.161 553.018 103.554 553.625 102.947 553.625 cv
cp
f
97.8887 559.896 mo
90.3018 559.896 li
89.5938 559.896 88.9868 559.289 88.9868 558.581 cv
88.9868 557.873 89.5938 557.267 90.3018 557.267 cv
97.8887 557.267 li
98.5967 557.267 99.2036 557.873 99.2036 558.581 cv
99.1025 559.289 98.4956 559.896 97.8887 559.896 cv
cp
f
95.3599 564.954 mo
90.3018 564.954 li
89.5938 564.954 88.9868 564.348 88.9868 563.64 cv
88.9868 562.932 89.5938 562.324 90.3018 562.324 cv
95.3599 562.324 li
96.0679 562.324 96.6748 562.932 96.6748 563.64 cv
96.5737 564.348 95.9668 564.954 95.3599 564.954 cv
cp
f
556.341 387.42 mo
657.5 387.42 li
657.5 488.579 li
556.341 488.579 li
556.341 387.42 li
cp
1 1 1 rgb
f
634.233 416.049 mo
635.549 416.049 li
635.549 466.628 li
577.382 466.628 li
577.382 416.049 li
578.596 416.049 li
634.233 416.049 li
cp
f
577.382 408.461 mo
577.382 416.049 li
579.709 416.049 li
582.035 416.049 632.312 416.049 635.549 416.049 cv
635.549 408.461 li
630.39 408.461 585.272 408.461 577.382 408.461 cv
cp
f
601.356 416.049 mo
601.356 408.461 li
616.53 408.461 li
616.53 416.049 li
616.53 424.85 li
601.356 424.85 li
601.356 416.049 li
cp
f
635.549 467.842 mo
577.382 467.842 li
576.674 467.842 576.067 467.234 576.067 466.526 cv
576.067 408.461 li
576.067 407.753 576.674 407.146 577.382 407.146 cv
601.458 407.146 li
602.166 407.146 602.773 407.753 602.773 408.461 cv
602.773 409.169 602.064 409.675 601.356 409.675 cv
578.596 409.675 li
578.596 465.313 li
634.233 465.313 li
634.233 409.675 li
616.53 409.675 li
615.822 409.675 615.216 409.068 615.216 408.36 cv
615.216 407.652 615.822 407.045 616.53 407.045 cv
635.549 407.045 li
636.257 407.045 636.863 407.652 636.863 408.36 cv
636.863 466.526 li
636.763 467.234 636.155 467.842 635.549 467.842 cv
cp
.0470588 .568627 .87451 rgb
f
607.729 417.263 mo
578.596 417.263 li
577.888 417.263 577.281 416.655 577.281 415.947 cv
577.281 415.239 577.888 414.632 578.596 414.632 cv
607.729 414.632 li
608.438 414.632 609.045 415.239 609.045 415.947 cv
608.943 416.655 608.337 417.263 607.729 417.263 cv
cp
f
634.233 417.263 mo
616.53 417.263 li
615.822 417.263 615.216 416.655 615.216 415.947 cv
615.216 415.239 615.822 414.632 616.53 414.632 cv
634.233 414.632 li
634.941 414.632 635.549 415.239 635.549 415.947 cv
635.549 416.655 634.941 417.263 634.233 417.263 cv
cp
f
602.672 423.636 mo
615.316 423.636 li
615.316 409.675 li
602.672 409.675 li
602.672 423.636 li
cp
616.53 426.164 mo
601.356 426.164 li
600.648 426.164 600.042 425.558 600.042 424.85 cv
600.042 408.461 li
600.042 407.753 600.648 407.146 601.356 407.146 cv
616.53 407.146 li
617.238 407.146 617.846 407.753 617.846 408.461 cv
617.846 424.85 li
617.846 425.558 617.238 426.164 616.53 426.164 cv
cp
f
600.143 452.668 mo
591.241 452.668 li
590.533 452.668 589.926 452.062 589.926 451.353 cv
589.926 450.645 590.533 450.038 591.241 450.038 cv
600.143 450.038 li
600.851 450.038 601.458 450.645 601.458 451.353 cv
601.458 452.062 600.75 452.668 600.143 452.668 cv
cp
f
603.886 457.726 mo
591.241 457.726 li
590.533 457.726 589.926 457.119 589.926 456.411 cv
589.926 455.703 590.533 455.096 591.241 455.096 cv
603.886 455.096 li
604.594 455.096 605.201 455.703 605.201 456.411 cv
605.201 457.119 604.594 457.726 603.886 457.726 cv
cp
f
428.881 387.42 mo
530.04 387.42 li
530.04 488.579 li
428.881 488.579 li
428.881 387.42 li
cp
1 1 1 rgb
f
449.922 416.049 mo
508.088 416.049 li
508.088 428.693 li
449.922 428.693 li
449.922 416.049 li
cp
.760784 .890196 .968627 rgb
f
449.922 428.693 mo
508.088 428.693 li
508.088 466.628 li
449.922 466.628 li
449.922 428.693 li
cp
1 1 1 rgb
f
473.896 434.965 mo
484.013 434.965 li
484.013 445.081 li
473.896 445.081 li
473.896 434.965 li
cp
f
494.128 434.965 mo
494.128 460.255 li
463.78 460.255 li
463.78 434.965 li
473.896 434.965 li
473.896 445.081 li
484.013 445.081 li
484.013 434.965 li
494.128 434.965 li
cp
f
462.566 416.049 mo
462.566 419.791 li
462.566 421.208 461.454 422.32 460.038 422.32 cv
458.621 422.32 457.509 421.208 457.509 419.791 cv
457.509 415.947 li
457.509 410.889 li
457.509 409.473 458.621 408.36 460.038 408.36 cv
460.746 408.36 461.353 408.664 461.858 409.068 cv
462.364 409.473 462.566 410.181 462.566 410.889 cv
462.566 416.049 li
cp
f
475.212 416.049 mo
475.212 419.791 li
475.212 421.208 474.099 422.32 472.683 422.32 cv
471.267 422.32 470.153 421.208 470.153 419.791 cv
470.153 415.947 li
470.153 410.889 li
470.153 409.473 471.267 408.36 472.683 408.36 cv
473.391 408.36 473.998 408.664 474.504 409.068 cv
475.01 409.473 475.212 410.181 475.212 410.889 cv
475.212 416.049 li
cp
f
487.856 416.049 mo
487.856 419.791 li
487.856 421.208 486.744 422.32 485.327 422.32 cv
483.911 422.32 482.799 421.208 482.799 419.791 cv
482.799 415.947 li
482.799 410.889 li
482.799 409.473 483.911 408.36 485.327 408.36 cv
486.035 408.36 486.643 408.664 487.148 409.068 cv
487.654 409.574 487.856 410.181 487.856 410.889 cv
487.856 416.049 li
cp
f
500.501 416.049 mo
500.501 419.791 li
500.501 421.208 499.389 422.32 497.973 422.32 cv
496.556 422.32 495.443 421.208 495.443 419.791 cv
495.443 415.947 li
495.443 410.889 li
495.443 409.473 496.556 408.36 497.973 408.36 cv
498.681 408.36 499.287 408.664 499.793 409.068 cv
500.299 409.473 500.501 410.181 500.501 410.889 cv
500.501 416.049 li
cp
f
457.509 417.263 mo
449.922 417.263 li
449.214 417.263 448.606 416.655 448.606 415.947 cv
448.606 415.239 449.214 414.632 449.922 414.632 cv
457.509 414.632 li
458.217 414.632 458.824 415.239 458.824 415.947 cv
458.723 416.655 458.115 417.263 457.509 417.263 cv
cp
.0470588 .568627 .87451 rgb
f
508.088 467.842 mo
449.922 467.842 li
449.214 467.842 448.606 467.234 448.606 466.526 cv
448.606 428.693 li
448.606 427.985 449.214 427.378 449.922 427.378 cv
450.63 427.378 451.237 427.985 451.237 428.693 cv
451.237 465.313 li
506.874 465.313 li
506.874 428.693 li
506.874 427.985 507.481 427.378 508.189 427.378 cv
508.897 427.378 509.505 427.985 509.505 428.693 cv
509.505 466.628 li
509.302 467.234 508.695 467.842 508.088 467.842 cv
cp
f
508.088 417.263 mo
500.501 417.263 li
499.793 417.263 499.187 416.655 499.187 415.947 cv
499.187 415.239 499.793 414.632 500.501 414.632 cv
508.088 414.632 li
508.797 414.632 509.403 415.239 509.403 415.947 cv
509.302 416.655 508.695 417.263 508.088 417.263 cv
cp
f
495.443 417.263 mo
487.856 417.263 li
487.148 417.263 486.541 416.655 486.541 415.947 cv
486.541 415.239 487.148 414.632 487.856 414.632 cv
495.443 414.632 li
496.151 414.632 496.759 415.239 496.759 415.947 cv
496.657 416.655 496.051 417.263 495.443 417.263 cv
cp
f
482.799 417.263 mo
475.212 417.263 li
474.504 417.263 473.896 416.655 473.896 415.947 cv
473.896 415.239 474.504 414.632 475.212 414.632 cv
482.799 414.632 li
483.507 414.632 484.113 415.239 484.113 415.947 cv
484.013 416.655 483.405 417.263 482.799 417.263 cv
cp
f
470.153 417.263 mo
462.566 417.263 li
461.858 417.263 461.252 416.655 461.252 415.947 cv
461.252 415.239 461.858 414.632 462.566 414.632 cv
470.153 414.632 li
470.861 414.632 471.469 415.239 471.469 415.947 cv
471.367 416.655 470.761 417.263 470.153 417.263 cv
cp
f
460.038 409.675 mo
459.33 409.675 458.723 410.282 458.723 410.991 cv
458.723 419.791 li
458.723 420.499 459.33 421.106 460.038 421.106 cv
460.746 421.106 461.252 420.499 461.252 419.791 cv
461.252 410.889 li
461.252 410.586 461.15 410.282 460.847 409.979 cv
460.544 409.675 460.341 409.675 460.038 409.675 cv
cp
460.038 423.636 mo
457.913 423.636 456.193 421.916 456.193 419.791 cv
456.193 410.889 li
456.193 408.765 457.913 407.045 460.038 407.045 cv
461.049 407.045 461.96 407.45 462.769 408.158 cv
463.478 408.866 463.882 409.878 463.882 410.889 cv
463.882 419.791 li
463.78 421.916 462.061 423.636 460.038 423.636 cv
cp
f
472.683 409.675 mo
471.975 409.675 471.367 410.282 471.367 410.991 cv
471.367 419.791 li
471.367 420.499 471.975 421.106 472.683 421.106 cv
473.391 421.106 473.998 420.499 473.998 419.791 cv
473.998 410.889 li
473.998 410.586 473.896 410.282 473.593 409.979 cv
473.29 409.675 472.986 409.675 472.683 409.675 cv
cp
472.683 423.636 mo
470.559 423.636 468.839 421.916 468.839 419.791 cv
468.839 410.889 li
468.839 408.765 470.559 407.045 472.683 407.045 cv
473.694 407.045 474.604 407.45 475.414 408.158 cv
476.122 408.866 476.526 409.878 476.526 410.889 cv
476.526 419.791 li
476.426 421.916 474.706 423.636 472.683 423.636 cv
cp
f
485.327 409.675 mo
484.619 409.675 484.013 410.282 484.013 410.991 cv
484.013 419.791 li
484.013 420.499 484.619 421.106 485.327 421.106 cv
486.035 421.106 486.541 420.499 486.541 419.791 cv
486.541 410.889 li
486.541 410.586 486.44 410.282 486.137 409.979 cv
485.935 409.776 485.631 409.675 485.327 409.675 cv
cp
485.327 423.636 mo
483.203 423.636 481.483 421.916 481.483 419.791 cv
481.483 410.889 li
481.483 408.765 483.203 407.045 485.327 407.045 cv
486.339 407.045 487.249 407.45 488.059 408.158 cv
488.767 408.866 489.172 409.878 489.172 410.889 cv
489.172 419.791 li
489.07 421.916 487.351 423.636 485.327 423.636 cv
cp
f
497.973 409.675 mo
497.265 409.675 496.657 410.282 496.657 410.991 cv
496.657 419.791 li
496.657 420.499 497.265 421.106 497.973 421.106 cv
498.681 421.106 499.287 420.499 499.287 419.791 cv
499.287 410.889 li
499.287 410.586 499.187 410.282 498.883 409.979 cv
498.579 409.776 498.275 409.675 497.973 409.675 cv
cp
497.973 423.636 mo
495.848 423.636 494.128 421.916 494.128 419.791 cv
494.128 410.889 li
494.128 408.765 495.848 407.045 497.973 407.045 cv
498.984 407.045 499.895 407.45 500.703 408.158 cv
501.412 408.866 501.816 409.878 501.816 410.889 cv
501.816 419.791 li
501.715 421.916 499.995 423.636 497.973 423.636 cv
cp
f
508.088 429.907 mo
449.922 429.907 li
449.214 429.907 448.606 429.3 448.606 428.592 cv
448.606 416.049 li
448.606 415.341 449.214 414.733 449.922 414.733 cv
450.63 414.733 451.237 415.341 451.237 416.049 cv
451.237 427.479 li
506.874 427.479 li
506.874 416.049 li
506.874 415.341 507.481 414.733 508.189 414.733 cv
508.897 414.733 509.505 415.341 509.505 416.049 cv
509.505 428.693 li
509.302 429.3 508.695 429.907 508.088 429.907 cv
cp
f
494.128 461.57 mo
463.78 461.57 li
463.072 461.57 462.466 460.963 462.466 460.255 cv
462.466 434.965 li
462.466 434.257 463.072 433.65 463.78 433.65 cv
473.896 433.65 li
474.604 433.65 475.212 434.257 475.212 434.965 cv
475.212 435.673 474.604 436.28 473.896 436.28 cv
464.994 436.28 li
464.994 459.041 li
492.813 459.041 li
492.813 436.28 li
483.911 436.28 li
483.203 436.28 482.596 435.673 482.596 434.965 cv
482.596 434.257 483.203 433.65 483.911 433.65 cv
494.027 433.65 li
494.735 433.65 495.342 434.257 495.342 434.965 cv
495.342 460.255 li
495.443 460.963 494.836 461.57 494.128 461.57 cv
cp
f
475.212 443.867 mo
482.799 443.867 li
482.799 436.28 li
475.212 436.28 li
475.212 443.867 li
cp
484.013 446.396 mo
473.896 446.396 li
473.188 446.396 472.581 445.789 472.581 445.081 cv
472.581 434.965 li
472.581 434.257 473.188 433.65 473.896 433.65 cv
484.013 433.65 li
484.721 433.65 485.327 434.257 485.327 434.965 cv
485.327 445.081 li
485.327 445.789 484.721 446.396 484.013 446.396 cv
cp
f
301.42 387.42 mo
402.579 387.42 li
402.579 488.579 li
301.42 488.579 li
301.42 387.42 li
cp
1 1 1 rgb
f
351.494 408.461 mo
322.461 423.636 li
322.461 466.628 li
330.048 466.628 li
330.048 438.81 li
330.048 433.751 li
330.048 428.693 li
373.041 428.693 li
373.041 433.751 li
373.041 438.81 li
373.041 466.628 li
380.628 466.628 li
380.628 423.636 li
351.494 408.461 li
cp
f
351.494 414.733 mo
353.617 414.733 355.338 416.454 355.338 418.577 cv
355.338 420.7 353.617 422.422 351.494 422.422 cv
349.371 422.422 347.65 420.7 347.65 418.577 cv
347.65 416.454 349.371 414.733 351.494 414.733 cv
cp
.760784 .890196 .968627 rgb
f
357.867 453.983 mo
362.925 453.983 li
362.925 459.041 li
357.867 459.041 li
357.867 453.983 li
cp
f
340.165 453.983 mo
345.222 453.983 li
345.222 459.041 li
340.165 459.041 li
340.165 453.983 li
cp
f
366.668 453.983 mo
366.668 466.628 li
354.023 466.628 li
354.023 453.983 li
357.867 453.983 li
357.867 459.041 li
362.925 459.041 li
362.925 453.983 li
366.668 453.983 li
cp
f
348.965 453.983 mo
348.965 466.628 li
336.32 466.628 li
336.32 453.983 li
340.165 453.983 li
340.165 459.041 li
345.222 459.041 li
345.222 453.983 li
348.965 453.983 li
cp
f
373.041 438.81 mo
373.041 466.628 li
366.668 466.628 li
366.668 453.983 li
362.925 453.983 li
357.867 453.983 li
354.023 453.983 li
354.023 466.628 li
348.965 466.628 li
348.965 453.983 li
345.222 453.983 li
340.165 453.983 li
336.32 453.983 li
336.32 466.628 li
330.048 466.628 li
330.048 438.81 li
373.041 438.81 li
cp
1 1 1 rgb
f
330.048 433.751 mo
373.041 433.751 li
373.041 438.81 li
330.048 438.81 li
330.048 433.751 li
cp
.760784 .890196 .968627 rgb
f
330.048 428.693 mo
373.041 428.693 li
373.041 433.751 li
330.048 433.751 li
330.048 428.693 li
cp
f
380.628 467.842 mo
373.041 467.842 li
372.333 467.842 371.726 467.234 371.726 466.526 cv
371.726 465.818 372.333 465.212 373.041 465.212 cv
379.313 465.212 li
379.313 424.344 li
351.494 409.878 li
323.675 424.344 li
323.675 465.313 li
330.048 465.313 li
330.757 465.313 331.364 465.92 331.364 466.628 cv
331.364 467.336 330.757 467.943 330.048 467.943 cv
322.461 467.943 li
321.753 467.943 321.146 467.336 321.146 466.628 cv
321.146 423.636 li
321.146 423.13 321.45 422.725 321.854 422.522 cv
350.988 407.349 li
351.393 407.146 351.798 407.146 352.202 407.349 cv
381.235 422.522 li
381.64 422.725 381.943 423.13 381.943 423.636 cv
381.943 466.628 li
381.842 467.234 381.235 467.842 380.628 467.842 cv
cp
.0470588 .568627 .87451 rgb
f
373.041 467.842 mo
366.668 467.842 li
365.96 467.842 365.353 467.234 365.353 466.526 cv
365.353 465.818 365.96 465.212 366.668 465.212 cv
371.726 465.212 li
371.726 438.81 li
371.726 438.102 372.333 437.494 373.041 437.494 cv
373.749 437.494 374.356 438.102 374.356 438.81 cv
374.356 466.628 li
374.255 467.234 373.648 467.842 373.041 467.842 cv
cp
f
373.041 434.965 mo
372.333 434.965 371.726 434.358 371.726 433.65 cv
371.726 429.907 li
331.262 429.907 li
331.262 433.751 li
331.262 434.459 330.655 435.066 329.947 435.066 cv
329.239 435.066 328.733 434.358 328.733 433.751 cv
328.733 428.693 li
328.733 427.985 329.34 427.378 330.048 427.378 cv
373.041 427.378 li
373.749 427.378 374.356 427.985 374.356 428.693 cv
374.356 433.751 li
374.255 434.358 373.648 434.965 373.041 434.965 cv
cp
f
336.32 467.842 mo
329.947 467.842 li
329.239 467.842 328.632 467.234 328.632 466.526 cv
328.632 438.81 li
328.632 438.102 329.239 437.494 329.947 437.494 cv
330.655 437.494 331.262 438.102 331.262 438.81 cv
331.262 465.313 li
336.32 465.313 li
337.028 465.313 337.635 465.92 337.635 466.628 cv
337.635 467.234 337.028 467.842 336.32 467.842 cv
cp
f
354.023 467.842 mo
348.965 467.842 li
348.257 467.842 347.65 467.234 347.65 466.526 cv
347.65 465.818 348.257 465.212 348.965 465.212 cv
354.023 465.212 li
354.731 465.212 355.338 465.818 355.338 466.526 cv
355.338 467.234 354.731 467.842 354.023 467.842 cv
cp
f
331.262 437.494 mo
371.726 437.494 li
371.726 434.965 li
331.262 434.965 li
331.262 437.494 li
cp
373.041 440.023 mo
330.048 440.023 li
329.34 440.023 328.733 439.416 328.733 438.708 cv
328.733 433.65 li
328.733 432.942 329.34 432.335 330.048 432.335 cv
373.041 432.335 li
373.749 432.335 374.356 432.942 374.356 433.65 cv
374.356 438.708 li
374.255 439.416 373.648 440.023 373.041 440.023 cv
cp
f
348.965 467.842 mo
336.32 467.842 li
335.612 467.842 335.005 467.234 335.005 466.526 cv
335.005 453.983 li
335.005 453.275 335.612 452.668 336.32 452.668 cv
340.165 452.668 li
340.873 452.668 341.479 453.275 341.479 453.983 cv
341.479 454.691 340.873 455.298 340.165 455.298 cv
337.635 455.298 li
337.635 465.414 li
347.751 465.414 li
347.751 455.197 li
345.222 455.197 li
344.514 455.197 343.907 454.59 343.907 453.882 cv
343.907 453.174 344.514 452.566 345.222 452.566 cv
348.965 452.566 li
349.673 452.566 350.28 453.174 350.28 453.882 cv
350.28 466.526 li
350.28 467.234 349.673 467.842 348.965 467.842 cv
cp
f
366.668 467.842 mo
354.023 467.842 li
353.315 467.842 352.708 467.234 352.708 466.526 cv
352.708 453.983 li
352.708 453.275 353.315 452.668 354.023 452.668 cv
357.867 452.668 li
358.575 452.668 359.183 453.275 359.183 453.983 cv
359.183 454.691 358.575 455.298 357.867 455.298 cv
355.338 455.298 li
355.338 465.414 li
365.454 465.414 li
365.454 455.197 li
362.925 455.197 li
362.217 455.197 361.61 454.59 361.61 453.882 cv
361.61 453.174 362.217 452.566 362.925 452.566 cv
366.77 452.566 li
367.478 452.566 368.084 453.174 368.084 453.882 cv
368.084 466.526 li
367.983 467.234 367.376 467.842 366.668 467.842 cv
cp
f
359.081 457.726 mo
361.61 457.726 li
361.61 455.197 li
359.081 455.197 li
359.081 457.726 li
cp
362.925 460.255 mo
357.867 460.255 li
357.159 460.255 356.552 459.648 356.552 458.939 cv
356.552 453.882 li
356.552 453.174 357.159 452.566 357.867 452.566 cv
362.925 452.566 li
363.633 452.566 364.24 453.174 364.24 453.882 cv
364.24 458.939 li
364.139 459.648 363.532 460.255 362.925 460.255 cv
cp
f
341.378 457.726 mo
343.907 457.726 li
343.907 455.197 li
341.378 455.197 li
341.378 457.726 li
cp
345.222 460.255 mo
340.165 460.255 li
339.456 460.255 338.849 459.648 338.849 458.939 cv
338.849 453.882 li
338.849 453.174 339.456 452.566 340.165 452.566 cv
345.222 452.566 li
345.931 452.566 346.538 453.174 346.538 453.882 cv
346.538 458.939 li
346.437 459.648 345.829 460.255 345.222 460.255 cv
cp
f
351.494 416.049 mo
350.078 416.049 348.965 417.161 348.965 418.577 cv
348.965 419.994 350.078 421.106 351.494 421.106 cv
352.91 421.106 354.023 419.994 354.023 418.577 cv
354.023 417.161 352.91 416.049 351.494 416.049 cv
cp
351.494 423.636 mo
348.662 423.636 346.437 421.41 346.437 418.577 cv
346.437 415.745 348.662 413.52 351.494 413.52 cv
354.327 413.52 356.552 415.745 356.552 418.577 cv
356.552 421.41 354.327 423.636 351.494 423.636 cv
cp
f
173.96 387.42 mo
275.119 387.42 li
275.119 488.579 li
173.96 488.579 li
173.96 387.42 li
cp
1 1 1 rgb
f
202.588 457.726 mo
210.175 457.726 li
210.175 459.851 208.456 461.57 206.331 461.57 cv
204.207 461.57 202.588 459.851 202.588 457.726 cv
cp
.760784 .890196 .968627 rgb
f
237.994 457.726 mo
245.581 457.726 li
245.581 459.851 243.861 461.57 241.737 461.57 cv
239.612 461.57 237.994 459.851 237.994 457.726 cv
cp
f
210.175 457.726 mo
214.019 457.726 li
214.019 461.873 210.58 465.313 206.432 465.313 cv
202.285 465.313 198.845 461.873 198.845 457.726 cv
202.689 457.726 li
202.689 459.851 204.409 461.57 206.533 461.57 cv
208.658 461.57 210.175 459.851 210.175 457.726 cv
cp
f
245.581 457.726 mo
249.425 457.726 li
249.425 461.873 245.985 465.313 241.838 465.313 cv
237.69 465.313 234.251 461.873 234.251 457.726 cv
238.095 457.726 li
238.095 459.851 239.814 461.57 241.939 461.57 cv
244.063 461.57 245.581 459.851 245.581 457.726 cv
cp
f
253.167 426.164 mo
253.167 436.28 li
251.853 436.28 li
250.437 436.28 249.223 435.673 248.312 434.763 cv
247.402 433.853 246.795 432.537 246.795 431.223 cv
246.795 428.39 249.02 426.164 251.853 426.164 cv
253.167 426.164 li
cp
f
202.588 408.461 mo
210.175 408.461 li
210.175 414.835 li
202.588 414.835 li
202.588 408.461 li
cp
1 1 1 rgb
f
215.233 408.461 mo
215.233 424.85 li
197.53 424.85 li
197.53 408.461 li
202.588 408.461 li
202.588 414.733 li
210.175 414.733 li
210.175 408.461 li
215.233 408.461 li
cp
f
231.621 453.072 mo
232.43 453.478 li
231.924 454.388 231.621 455.399 231.621 456.512 cv
231.621 457.827 li
216.447 457.827 li
216.447 453.174 li
231.621 453.174 li
231.621 453.072 li
cp
f
251.853 456.512 mo
251.853 457.827 li
249.324 457.827 li
245.479 457.827 li
237.893 457.827 li
234.049 457.827 li
231.621 457.827 li
231.621 456.512 li
231.621 455.399 231.924 454.388 232.43 453.478 cv
233.543 451.556 235.566 450.139 237.994 450.139 cv
245.581 450.139 li
249.02 450.139 251.853 452.972 251.853 456.512 cv
cp
.760784 .890196 .968627 rgb
f
216.447 453.072 mo
216.447 457.726 li
213.918 457.726 li
210.074 457.726 li
202.487 457.726 li
198.643 457.726 li
196.215 457.726 li
196.215 453.072 li
196.215 451.758 197.328 450.645 198.946 450.342 cv
199.351 450.24 199.655 450.24 200.059 450.24 cv
206.331 450.24 li
212.603 450.24 li
214.525 450.24 216.245 451.353 216.447 452.77 cv
216.447 452.77 216.447 452.972 216.447 453.072 cv
cp
f
222.82 431.223 mo
216.447 431.223 li
198.744 431.223 li
194.9 431.223 li
194.9 424.85 li
197.429 424.85 li
215.132 424.85 li
216.447 424.85 li
219.988 424.85 222.82 427.682 222.82 431.223 cv
cp
f
216.447 431.223 mo
216.447 452.77 li
216.447 452.77 li
216.245 451.353 214.525 450.24 212.603 450.24 cv
206.331 450.24 li
200.059 450.24 li
199.655 450.24 199.25 450.24 198.946 450.342 cv
198.744 449.431 li
198.744 431.223 li
216.447 431.223 li
cp
f
246.795 431.223 mo
246.795 450.139 li
245.479 450.139 li
237.893 450.139 li
234.049 450.139 li
234.049 422.32 li
238.702 422.32 li
243.153 422.32 246.795 425.962 246.795 430.413 cv
246.795 431.223 li
cp
f
253.167 467.842 mo
195.001 467.842 li
194.293 467.842 193.687 467.234 193.687 466.526 cv
193.687 465.818 194.293 465.212 195.001 465.212 cv
253.167 465.212 li
253.876 465.212 254.483 465.818 254.483 466.526 cv
254.382 467.234 253.775 467.842 253.167 467.842 cv
cp
.0470588 .568627 .87451 rgb
f
206.331 466.628 mo
201.476 466.628 197.429 462.683 197.429 457.726 cv
197.429 457.018 198.036 456.411 198.744 456.411 cv
199.452 456.411 200.059 457.018 200.059 457.726 cv
200.059 461.165 202.892 464.099 206.432 464.099 cv
209.973 464.099 212.805 461.267 212.805 457.726 cv
212.805 457.018 213.412 456.411 214.121 456.411 cv
214.829 456.411 215.436 457.018 215.436 457.726 cv
215.233 462.582 211.187 466.628 206.331 466.628 cv
cp
f
206.331 462.784 mo
203.499 462.784 201.273 460.559 201.273 457.726 cv
201.273 457.018 201.88 456.411 202.588 456.411 cv
203.296 456.411 203.903 457.018 203.903 457.726 cv
203.903 459.143 205.016 460.255 206.432 460.255 cv
207.849 460.255 208.961 459.143 208.961 457.726 cv
208.961 457.018 209.568 456.411 210.276 456.411 cv
210.984 456.411 211.591 457.018 211.591 457.726 cv
211.389 460.559 209.164 462.784 206.331 462.784 cv
cp
f
241.737 466.628 mo
236.881 466.628 232.835 462.683 232.835 457.726 cv
232.835 457.018 233.442 456.411 234.15 456.411 cv
234.858 456.411 235.465 457.018 235.465 457.726 cv
235.465 461.165 238.297 464.099 241.838 464.099 cv
245.378 464.099 248.211 461.267 248.211 457.726 cv
248.211 457.018 248.818 456.411 249.526 456.411 cv
250.234 456.411 250.841 457.018 250.841 457.726 cv
250.639 462.582 246.592 466.628 241.737 466.628 cv
cp
f
241.737 462.784 mo
238.904 462.784 236.679 460.559 236.679 457.726 cv
236.679 457.018 237.286 456.411 237.994 456.411 cv
238.702 456.411 239.309 457.018 239.309 457.726 cv
239.309 459.143 240.422 460.255 241.838 460.255 cv
243.254 460.255 244.367 459.143 244.367 457.726 cv
244.367 457.018 244.974 456.411 245.682 456.411 cv
246.39 456.411 246.997 457.018 246.997 457.726 cv
246.795 460.559 244.569 462.784 241.737 462.784 cv
cp
f
231.621 454.286 mo
216.447 454.286 li
215.739 454.286 215.132 453.68 215.132 452.972 cv
215.132 452.264 215.739 451.656 216.447 451.656 cv
231.621 451.656 li
232.329 451.656 232.936 452.264 232.936 452.972 cv
232.936 453.781 232.329 454.286 231.621 454.286 cv
cp
f
231.621 459.041 mo
216.447 459.041 li
215.739 459.041 215.132 458.434 215.132 457.726 cv
215.132 457.018 215.739 456.411 216.447 456.411 cv
231.621 456.411 li
232.329 456.411 232.936 457.018 232.936 457.726 cv
232.936 458.434 232.329 459.041 231.621 459.041 cv
cp
f
251.853 459.041 mo
231.621 459.041 li
230.913 459.041 230.306 458.434 230.306 457.726 cv
230.306 456.411 li
230.306 455.197 230.609 453.882 231.216 452.77 cv
232.531 450.342 235.06 448.824 237.893 448.824 cv
238.601 448.824 239.208 449.431 239.208 450.139 cv
239.208 450.848 238.601 451.454 237.893 451.454 cv
236.072 451.454 234.352 452.466 233.442 454.084 cv
233.037 454.792 232.835 455.703 232.835 456.512 cv
250.538 456.512 li
250.538 453.68 248.312 451.454 245.479 451.454 cv
244.771 451.454 244.165 450.848 244.165 450.139 cv
244.165 449.431 244.771 448.824 245.479 448.824 cv
249.627 448.824 253.066 452.264 253.066 456.411 cv
253.066 457.726 li
253.167 458.434 252.561 459.041 251.853 459.041 cv
cp
f
235.465 448.925 mo
245.581 448.925 li
245.581 430.413 li
245.581 426.67 242.546 423.534 238.702 423.534 cv
235.465 423.534 li
235.465 448.925 li
cp
246.795 451.454 mo
234.15 451.454 li
233.442 451.454 232.835 450.848 232.835 450.139 cv
232.835 422.32 li
232.835 421.612 233.442 421.005 234.15 421.005 cv
238.702 421.005 li
243.861 421.005 248.11 425.254 248.11 430.413 cv
248.11 450.139 li
248.11 450.848 247.503 451.454 246.795 451.454 cv
cp
f
234.15 423.636 mo
227.777 423.636 li
227.069 423.636 226.462 423.028 226.462 422.32 cv
226.462 421.612 227.069 421.005 227.777 421.005 cv
234.15 421.005 li
234.858 421.005 235.465 421.612 235.465 422.32 cv
235.465 423.028 234.858 423.636 234.15 423.636 cv
cp
f
216.447 453.983 mo
215.739 453.983 215.132 453.376 215.132 452.668 cv
215.132 431.223 li
215.132 430.514 215.739 429.907 216.447 429.907 cv
217.155 429.907 217.762 430.514 217.762 431.223 cv
217.762 452.77 li
217.762 453.376 217.155 453.983 216.447 453.983 cv
cp
f
198.744 450.645 mo
198.036 450.645 197.429 450.038 197.429 449.33 cv
197.429 431.121 li
197.429 430.413 198.036 429.806 198.744 429.806 cv
199.452 429.806 200.059 430.413 200.059 431.121 cv
200.059 449.33 li
200.059 450.038 199.452 450.645 198.744 450.645 cv
cp
f
197.53 456.512 mo
215.233 456.512 li
215.233 453.072 li
215.233 452.972 215.233 452.972 215.233 452.87 cv
215.132 452.162 214.121 451.353 212.603 451.353 cv
200.059 451.353 li
199.756 451.353 199.452 451.353 199.149 451.454 cv
198.137 451.656 197.429 452.364 197.429 452.972 cv
197.429 456.512 li
197.53 456.512 li
cp
216.447 459.041 mo
196.215 459.041 li
195.507 459.041 194.9 458.434 194.9 457.726 cv
194.9 453.072 li
194.9 451.15 196.417 449.532 198.643 449.026 cv
199.149 448.925 199.554 448.824 200.059 448.824 cv
212.502 448.824 li
215.132 448.824 217.256 450.342 217.56 452.364 cv
217.56 452.566 217.56 452.77 217.56 452.972 cv
217.56 457.625 li
217.762 458.434 217.155 459.041 216.447 459.041 cv
cp
f
222.82 432.437 mo
195.001 432.437 li
194.293 432.437 193.687 431.829 193.687 431.121 cv
193.687 424.85 li
193.687 424.142 194.293 423.534 195.001 423.534 cv
197.53 423.534 li
198.238 423.534 198.845 424.142 198.845 424.85 cv
198.845 425.558 198.238 426.164 197.53 426.164 cv
196.215 426.164 li
196.215 429.907 li
221.303 429.907 li
220.696 427.682 218.774 426.063 216.447 426.063 cv
215.132 426.063 li
214.424 426.063 213.817 425.456 213.817 424.748 cv
213.817 424.04 214.424 423.433 215.132 423.433 cv
216.447 423.433 li
220.595 423.433 224.034 426.872 224.034 431.02 cv
224.034 431.829 223.427 432.437 222.82 432.437 cv
cp
f
215.233 426.164 mo
197.53 426.164 li
196.822 426.164 196.215 425.558 196.215 424.85 cv
196.215 408.461 li
196.215 407.753 196.822 407.146 197.53 407.146 cv
202.588 407.146 li
203.296 407.146 203.903 407.753 203.903 408.461 cv
203.903 409.169 203.195 409.675 202.588 409.675 cv
198.744 409.675 li
198.744 423.636 li
213.918 423.636 li
213.918 409.675 li
210.074 409.675 li
209.366 409.675 208.759 409.068 208.759 408.36 cv
208.759 407.652 209.366 407.045 210.074 407.045 cv
215.132 407.045 li
215.84 407.045 216.447 407.652 216.447 408.36 cv
216.447 424.85 li
216.447 425.558 215.84 426.164 215.233 426.164 cv
cp
f
203.802 413.52 mo
208.86 413.52 li
208.86 409.675 li
203.802 409.675 li
203.802 413.52 li
cp
210.175 416.049 mo
202.588 416.049 li
201.88 416.049 201.273 415.441 201.273 414.733 cv
201.273 408.36 li
201.273 407.652 201.88 407.045 202.588 407.045 cv
210.175 407.045 li
210.883 407.045 211.49 407.652 211.49 408.36 cv
211.49 414.733 li
211.389 415.441 210.782 416.049 210.175 416.049 cv
cp
f
251.853 427.378 mo
249.729 427.378 248.009 429.098 248.009 431.223 cv
248.009 432.233 248.413 433.145 249.122 433.953 cv
249.931 434.561 250.841 434.965 251.853 434.965 cv
251.853 427.378 li
cp
253.167 437.494 mo
251.853 437.494 li
250.133 437.494 248.616 436.786 247.402 435.673 cv
246.188 434.459 245.581 432.841 245.581 431.223 cv
245.581 427.783 248.413 424.85 251.954 424.85 cv
253.269 424.85 li
253.977 424.85 254.584 425.456 254.584 426.164 cv
254.584 436.28 li
254.382 436.887 253.775 437.494 253.167 437.494 cv
cp
f
46.5 387.42 mo
147.659 387.42 li
147.659 488.579 li
46.5 488.579 li
46.5 387.42 li
cp
1 1 1 rgb
f
119.334 416.049 mo
119.334 451.454 li
118.121 451.454 li
75.1279 451.454 li
73.813 451.454 li
73.813 416.049 li
119.334 416.049 li
cp
f
73.813 408.461 mo
73.813 416.049 li
79.6802 416.049 114.074 416.049 119.334 416.049 cv
119.334 408.461 li
117.716 408.461 74.4199 408.461 73.813 408.461 cv
cp
f
118.121 451.454 mo
75.1279 451.454 li
73.0034 451.454 71.1826 452.264 69.7666 453.68 cv
68.3501 455.096 67.541 456.917 67.541 459.041 cv
67.541 463.188 70.9805 466.628 75.1279 466.628 cv
118.121 466.628 li
120.245 466.628 122.066 465.818 123.482 464.402 cv
124.898 462.986 125.708 461.165 125.708 459.041 cv
125.708 454.792 122.268 451.454 118.121 451.454 cv
cp
f
116.806 456.512 mo
118.222 456.512 119.334 457.625 119.334 459.041 cv
119.334 460.457 118.222 461.57 116.806 461.57 cv
115.389 461.57 114.276 460.356 114.276 459.041 cv
114.276 457.726 115.389 456.512 116.806 456.512 cv
cp
.760784 .890196 .968627 rgb
f
76.3418 456.512 mo
77.7583 456.512 78.8711 457.625 78.8711 459.041 cv
78.8711 460.457 77.7583 461.57 76.3418 461.57 cv
74.9258 461.57 73.813 460.356 73.813 459.041 cv
73.813 457.726 74.9258 456.512 76.3418 456.512 cv
cp
f
96.5737 456.512 mo
97.9897 456.512 99.1025 457.625 99.1025 459.041 cv
99.1025 460.457 97.9897 461.57 96.5737 461.57 cv
95.1572 461.57 94.0449 460.356 94.0449 459.041 cv
94.0449 457.726 95.1572 456.512 96.5737 456.512 cv
cp
1 1 1 rgb
f
91.5156 416.049 mo
91.5156 408.461 li
106.689 408.461 li
106.689 416.049 li
106.689 424.85 li
91.5156 424.85 li
91.5156 416.049 li
cp
f
118.121 467.842 mo
75.1279 467.842 li
70.2725 467.842 66.2261 463.896 66.2261 458.939 cv
66.2261 456.613 67.1362 454.388 68.856 452.668 cv
70.5757 450.948 72.8013 450.038 75.1279 450.038 cv
75.8359 450.038 76.4429 450.645 76.4429 451.353 cv
76.4429 452.062 75.8359 452.668 75.1279 452.668 cv
73.4082 452.668 71.8911 453.376 70.6768 454.489 cv
69.4629 455.703 68.856 457.321 68.856 458.939 cv
68.856 462.379 71.6885 465.313 75.229 465.313 cv
118.222 465.313 li
119.941 465.313 121.459 464.604 122.673 463.492 cv
123.887 462.278 124.494 460.659 124.494 459.041 cv
124.494 455.602 121.661 452.668 118.121 452.668 cv
117.413 452.668 116.806 452.062 116.806 451.353 cv
116.806 450.645 117.413 450.038 118.121 450.038 cv
122.976 450.038 127.022 453.983 127.022 458.939 cv
127.022 461.267 126.112 463.492 124.393 465.212 cv
122.673 466.932 120.447 467.842 118.121 467.842 cv
cp
.0470588 .568627 .87451 rgb
f
119.334 452.668 mo
73.813 452.668 li
73.105 452.668 72.4976 452.062 72.4976 451.353 cv
72.4976 408.461 li
72.4976 407.753 73.105 407.146 73.813 407.146 cv
91.5156 407.146 li
92.2236 407.146 92.8306 407.753 92.8306 408.461 cv
92.8306 409.169 92.2236 409.675 91.5156 409.675 cv
75.1279 409.675 li
75.1279 450.139 li
118.121 450.139 li
118.121 409.675 li
106.689 409.675 li
105.981 409.675 105.375 409.068 105.375 408.36 cv
105.375 407.652 105.981 407.045 106.689 407.045 cv
119.334 407.045 li
120.042 407.045 120.649 407.652 120.649 408.36 cv
120.649 451.353 li
120.649 452.062 120.042 452.668 119.334 452.668 cv
cp
f
76.3418 457.726 mo
75.6338 457.726 75.0269 458.333 75.0269 459.041 cv
75.0269 459.749 75.6338 460.356 76.3418 460.356 cv
77.0498 460.356 77.6572 459.749 77.6572 459.041 cv
77.6572 458.333 77.0498 457.726 76.3418 457.726 cv
cp
76.3418 462.784 mo
74.2173 462.784 72.4976 461.064 72.4976 458.939 cv
72.4976 456.815 74.2178 455.096 76.3418 455.096 cv
78.4663 455.096 80.186 456.815 80.186 458.939 cv
80.186 461.064 78.4663 462.784 76.3418 462.784 cv
cp
f
96.5737 457.726 mo
95.8657 457.726 95.2588 458.333 95.2588 459.041 cv
95.2588 459.749 95.8657 460.356 96.5737 460.356 cv
97.2817 460.356 97.8887 459.749 97.8887 459.041 cv
97.8887 458.333 97.2817 457.726 96.5737 457.726 cv
cp
96.5737 462.784 mo
94.4492 462.784 92.7295 461.064 92.7295 458.939 cv
92.7295 456.815 94.4492 455.096 96.5737 455.096 cv
98.6982 455.096 100.417 456.815 100.417 458.939 cv
100.417 461.064 98.6982 462.784 96.5737 462.784 cv
cp
f
116.806 457.726 mo
116.097 457.726 115.49 458.333 115.49 459.041 cv
115.49 459.749 116.097 460.356 116.806 460.356 cv
117.514 460.356 118.121 459.749 118.121 459.041 cv
118.121 458.333 117.514 457.726 116.806 457.726 cv
cp
116.806 462.784 mo
114.681 462.784 112.961 461.064 112.961 458.939 cv
112.961 456.815 114.681 455.096 116.806 455.096 cv
118.93 455.096 120.649 456.815 120.649 458.939 cv
120.649 461.064 118.93 462.784 116.806 462.784 cv
cp
f
97.8887 417.263 mo
73.813 417.263 li
73.105 417.263 72.4976 416.655 72.4976 415.947 cv
72.4976 415.239 73.105 414.632 73.813 414.632 cv
97.8887 414.632 li
98.5967 414.632 99.2036 415.239 99.2036 415.947 cv
99.1025 416.655 98.4956 417.263 97.8887 417.263 cv
cp
f
119.334 417.263 mo
106.689 417.263 li
105.981 417.263 105.375 416.655 105.375 415.947 cv
105.375 415.239 105.981 414.632 106.689 414.632 cv
119.334 414.632 li
120.042 414.632 120.649 415.239 120.649 415.947 cv
120.649 416.655 120.042 417.263 119.334 417.263 cv
cp
f
92.8306 423.636 mo
105.476 423.636 li
105.476 409.675 li
92.8306 409.675 li
92.8306 423.636 li
cp
106.689 426.164 mo
91.5156 426.164 li
90.8076 426.164 90.2007 425.558 90.2007 424.85 cv
90.2007 408.461 li
90.2007 407.753 90.8076 407.146 91.5156 407.146 cv
106.689 407.146 li
107.397 407.146 108.004 407.753 108.004 408.461 cv
108.004 424.85 li
108.004 425.558 107.397 426.164 106.689 426.164 cv
cp
f
90.3018 438.81 mo
81.3999 438.81 li
80.6919 438.81 80.085 438.202 80.085 437.494 cv
80.085 436.786 80.6919 436.179 81.3999 436.179 cv
90.3018 436.179 li
91.0098 436.179 91.6167 436.786 91.6167 437.494 cv
91.5156 438.202 90.9087 438.81 90.3018 438.81 cv
cp
f
94.0449 443.867 mo
81.3999 443.867 li
80.6919 443.867 80.085 443.26 80.085 442.552 cv
80.085 441.844 80.6919 441.237 81.3999 441.237 cv
94.0449 441.237 li
94.7529 441.237 95.3599 441.844 95.3599 442.552 cv
95.3599 443.26 94.7529 443.867 94.0449 443.867 cv
cp
f
556.341 259.96 mo
657.5 259.96 li
657.5 361.119 li
556.341 361.119 li
556.341 259.96 li
cp
1 1 1 rgb
f
577.382 281.001 mo
577.382 316.407 li
585.778 316.407 li
584.969 325.208 li
597.108 316.407 li
597.614 316.407 li
615.316 316.407 li
615.316 294.86 li
615.316 281.001 li
577.382 281.001 li
cp
f
584.969 293.646 mo
607.729 293.646 li
607.729 308.82 li
584.969 308.82 li
584.969 293.646 li
cp
.760784 .890196 .968627 rgb
f
600.143 288.588 mo
607.729 288.588 li
607.729 293.646 li
600.143 293.646 li
600.143 288.588 li
cp
f
584.969 288.588 mo
592.556 288.588 li
592.556 293.646 li
584.969 293.646 li
584.969 288.588 li
cp
f
635.549 294.86 mo
635.549 330.266 li
617.34 330.266 li
605.201 339.167 li
606.01 330.266 li
597.614 330.266 li
597.614 316.407 li
615.316 316.407 li
615.316 294.86 li
635.549 294.86 li
cp
1 1 1 rgb
f
578.596 315.092 mo
585.778 315.092 li
586.183 315.092 586.486 315.193 586.688 315.497 cv
586.891 315.8 587.094 316.104 586.992 316.508 cv
586.386 322.578 li
596.299 315.396 li
596.501 315.193 596.805 315.193 597.007 315.193 cv
614.002 315.193 li
614.002 282.215 li
578.596 282.215 li
578.596 315.092 li
cp
584.868 326.523 mo
584.666 326.523 584.463 326.422 584.261 326.32 cv
583.856 326.118 583.553 325.612 583.654 325.106 cv
584.362 317.621 li
577.281 317.621 li
576.573 317.621 575.966 317.014 575.966 316.306 cv
575.966 280.9 li
575.966 280.192 576.573 279.585 577.281 279.585 cv
615.216 279.585 li
615.924 279.585 616.53 280.192 616.53 280.9 cv
616.53 316.306 li
616.53 317.014 615.924 317.621 615.216 317.621 cv
597.513 317.621 li
585.677 326.219 li
585.475 326.422 585.172 326.523 584.868 326.523 cv
cp
.0470588 .568627 .87451 rgb
f
607.729 310.034 mo
584.969 310.034 li
584.261 310.034 583.654 309.427 583.654 308.719 cv
583.654 288.487 li
583.654 287.779 584.261 287.172 584.969 287.172 cv
592.556 287.172 li
593.264 287.172 593.871 287.779 593.871 288.487 cv
593.871 289.195 593.264 289.802 592.556 289.802 cv
586.183 289.802 li
586.183 307.505 li
606.415 307.505 li
606.415 289.802 li
600.042 289.802 li
599.334 289.802 598.727 289.195 598.727 288.487 cv
598.727 287.779 599.334 287.172 600.042 287.172 cv
607.629 287.172 li
608.337 287.172 608.943 287.779 608.943 288.487 cv
608.943 308.719 li
608.943 309.427 608.337 310.034 607.729 310.034 cv
cp
f
592.556 294.86 mo
584.969 294.86 li
584.261 294.86 583.654 294.253 583.654 293.545 cv
583.654 292.837 584.261 292.23 584.969 292.23 cv
592.556 292.23 li
593.264 292.23 593.871 292.837 593.871 293.545 cv
593.871 294.253 593.163 294.86 592.556 294.86 cv
cp
f
607.729 294.86 mo
600.143 294.86 li
599.435 294.86 598.828 294.253 598.828 293.545 cv
598.828 292.837 599.435 292.23 600.143 292.23 cv
607.729 292.23 li
608.438 292.23 609.045 292.837 609.045 293.545 cv
609.045 294.253 608.337 294.86 607.729 294.86 cv
cp
f
605.1 340.381 mo
604.897 340.381 604.695 340.28 604.492 340.179 cv
604.088 339.977 603.784 339.471 603.886 338.965 cv
604.594 331.479 li
597.513 331.479 li
596.805 331.479 596.197 330.873 596.197 330.165 cv
596.197 316.407 li
596.197 315.699 596.805 315.092 597.513 315.092 cv
598.221 315.092 598.828 315.699 598.828 316.407 cv
598.828 329.052 li
606.01 329.052 li
606.415 329.052 606.718 329.153 606.921 329.457 cv
607.123 329.76 607.325 330.063 607.224 330.468 cv
606.617 336.538 li
616.53 329.355 li
616.733 329.153 617.036 329.153 617.238 329.153 cv
634.233 329.153 li
634.233 296.175 li
615.316 296.175 li
614.608 296.175 614.002 295.568 614.002 294.86 cv
614.002 294.152 614.608 293.545 615.316 293.545 cv
635.549 293.545 li
636.257 293.545 636.863 294.152 636.863 294.86 cv
636.863 330.266 li
636.863 330.974 636.257 331.581 635.549 331.581 cv
617.744 331.581 li
605.909 340.179 li
605.707 340.28 605.403 340.381 605.1 340.381 cv
cp
f
600.143 293.646 mo
600.143 301.233 li
592.556 301.233 li
592.556 293.646 li
592.556 288.588 li
600.143 288.588 li
600.143 293.646 li
cp
.760784 .890196 .968627 rgb
f
593.77 299.918 mo
598.828 299.918 li
598.828 289.802 li
593.77 289.802 li
593.77 299.918 li
cp
600.143 302.447 mo
592.556 302.447 li
591.848 302.447 591.241 301.84 591.241 301.132 cv
591.241 288.588 li
591.241 287.88 591.848 287.273 592.556 287.273 cv
600.143 287.273 li
600.851 287.273 601.458 287.88 601.458 288.588 cv
601.458 301.233 li
601.356 301.84 600.75 302.447 600.143 302.447 cv
cp
.0470588 .568627 .87451 rgb
f
428.881 259.96 mo
530.04 259.96 li
530.04 361.119 li
428.881 361.119 li
428.881 259.96 li
cp
1 1 1 rgb
f
449.922 288.588 mo
449.922 290.105 449.922 322.375 449.922 323.994 cv
451.237 323.994 493.622 323.994 495.443 323.994 cv
495.443 322.375 495.443 290.105 495.443 288.588 cv
449.922 288.588 li
cp
f
449.922 281.001 mo
449.922 288.588 li
454.979 288.588 493.42 288.588 495.443 288.588 cv
495.443 281.001 li
494.229 281.001 452.754 281.001 449.922 281.001 cv
cp
f
495.443 311.349 mo
502.524 311.956 508.088 317.924 508.088 325.208 cv
508.088 332.896 501.816 339.167 494.128 339.167 cv
486.44 339.167 480.168 332.896 480.168 325.208 cv
480.168 324.803 480.168 324.398 480.27 323.893 cv
480.877 316.812 486.845 311.248 494.128 311.248 cv
494.533 311.349 494.938 311.349 495.443 311.349 cv
cp
.760784 .890196 .968627 rgb
f
467.625 288.588 mo
467.625 281.001 li
482.799 281.001 li
482.799 288.588 li
482.799 297.389 li
467.625 297.389 li
467.625 288.588 li
cp
1 1 1 rgb
f
473.896 289.802 mo
449.922 289.802 li
449.214 289.802 448.606 289.195 448.606 288.487 cv
448.606 287.779 449.214 287.172 449.922 287.172 cv
473.998 287.172 li
474.706 287.172 475.313 287.779 475.313 288.487 cv
475.212 289.195 474.604 289.802 473.896 289.802 cv
cp
.0470588 .568627 .87451 rgb
f
495.443 289.802 mo
482.799 289.802 li
482.091 289.802 481.483 289.195 481.483 288.487 cv
481.483 287.779 482.091 287.172 482.799 287.172 cv
495.443 287.172 li
496.151 287.172 496.759 287.779 496.759 288.487 cv
496.657 289.195 496.051 289.802 495.443 289.802 cv
cp
f
482.799 298.704 mo
467.625 298.704 li
466.917 298.704 466.31 298.097 466.31 297.389 cv
466.31 281.001 li
466.31 280.293 466.917 279.686 467.625 279.686 cv
468.333 279.686 468.939 280.293 468.939 281.001 cv
468.939 296.175 li
481.483 296.175 li
481.483 281.001 li
481.483 280.293 482.091 279.686 482.799 279.686 cv
483.507 279.686 484.113 280.293 484.113 281.001 cv
484.113 297.389 li
484.013 298.097 483.405 298.704 482.799 298.704 cv
cp
f
466.31 311.349 mo
457.407 311.349 li
456.699 311.349 456.093 310.742 456.093 310.034 cv
456.093 309.326 456.699 308.719 457.407 308.719 cv
466.31 308.719 li
467.018 308.719 467.625 309.326 467.625 310.034 cv
467.625 310.742 467.018 311.349 466.31 311.349 cv
cp
f
470.153 316.407 mo
457.509 316.407 li
456.801 316.407 456.193 315.8 456.193 315.092 cv
456.193 314.384 456.801 313.777 457.509 313.777 cv
470.153 313.777 li
470.861 313.777 471.469 314.384 471.469 315.092 cv
471.469 315.8 470.761 316.407 470.153 316.407 cv
cp
f
480.27 325.208 mo
449.922 325.208 li
449.214 325.208 448.606 324.601 448.606 323.893 cv
448.606 281.001 li
448.606 280.293 449.214 279.686 449.922 279.686 cv
495.443 279.686 li
496.151 279.686 496.759 280.293 496.759 281.001 cv
496.759 311.45 li
496.759 312.158 496.151 312.765 495.443 312.765 cv
494.735 312.765 494.128 312.158 494.128 311.45 cv
494.128 282.215 li
451.136 282.215 li
451.136 322.679 li
480.27 322.679 li
480.978 322.679 481.585 323.286 481.585 323.994 cv
481.585 324.702 480.978 325.208 480.27 325.208 cv
cp
f
494.128 312.563 mo
487.553 312.563 482.091 317.52 481.585 324.095 cv
481.585 324.5 481.483 324.904 481.483 325.208 cv
481.483 332.188 487.148 337.853 494.128 337.853 cv
501.108 337.853 506.773 332.188 506.773 325.208 cv
506.773 318.632 501.816 313.17 495.241 312.664 cv
494.938 312.563 494.533 312.563 494.128 312.563 cv
cp
494.128 340.381 mo
485.732 340.381 478.954 333.604 478.954 325.208 cv
478.954 324.803 478.954 324.297 479.056 323.792 cv
479.359 320.049 481.079 316.508 483.911 313.979 cv
486.744 311.45 490.386 309.933 494.128 309.933 cv
494.533 309.933 495.039 309.933 495.545 310.034 cv
499.287 310.337 502.828 312.057 505.357 314.89 cv
507.886 317.722 509.403 321.364 509.403 325.106 cv
509.302 333.604 502.524 340.381 494.128 340.381 cv
cp
f
487.856 326.523 mo
487.148 326.523 486.541 325.916 486.541 325.208 cv
486.541 325.005 486.541 324.702 486.541 324.5 cv
486.744 322.578 487.553 320.858 488.969 319.644 cv
490.386 318.329 492.206 317.621 494.128 317.621 cv
494.331 317.621 494.634 317.621 494.836 317.621 cv
495.545 317.722 496.051 318.329 495.949 319.037 cv
495.848 319.745 495.241 320.251 494.533 320.15 cv
494.432 320.15 494.229 320.15 494.027 320.15 cv
491.396 320.15 489.272 322.173 488.969 324.702 cv
488.969 324.904 488.969 325.005 488.969 325.208 cv
489.07 325.916 488.463 326.523 487.856 326.523 cv
cp
f
494.128 332.795 mo
493.42 332.795 492.813 332.188 492.813 331.479 cv
492.813 330.771 493.42 330.165 494.128 330.165 cv
496.961 330.165 499.187 327.939 499.187 325.106 cv
499.187 324.398 499.793 323.792 500.501 323.792 cv
501.209 323.792 501.816 324.398 501.816 325.106 cv
501.715 329.355 498.275 332.795 494.128 332.795 cv
cp
f
494.128 322.679 mo
493.825 322.679 493.521 322.578 493.218 322.274 cv
492.712 321.769 492.712 320.959 493.218 320.453 cv
494.836 318.835 li
493.218 317.216 li
492.712 316.71 492.712 315.901 493.218 315.396 cv
493.724 314.89 494.533 314.89 495.039 315.396 cv
497.567 317.924 li
498.073 318.43 498.073 319.239 497.567 319.745 cv
495.039 322.274 li
494.735 322.578 494.432 322.679 494.128 322.679 cv
cp
f
496.151 334.818 mo
495.949 334.818 495.747 334.818 495.545 334.717 cv
492.308 333.098 li
492.004 332.997 491.802 332.693 491.7 332.39 cv
491.6 332.086 491.6 331.682 491.802 331.378 cv
493.42 328.142 li
493.724 327.534 494.533 327.231 495.14 327.534 cv
495.747 327.838 496.051 328.647 495.747 329.254 cv
494.735 331.277 li
496.759 332.289 li
497.365 332.592 497.669 333.402 497.365 334.009 cv
497.062 334.514 496.556 334.818 496.151 334.818 cv
cp
f
301.42 259.96 mo
402.579 259.96 li
402.579 361.119 li
301.42 361.119 li
301.42 259.96 li
cp
1 1 1 rgb
f
361.104 300.727 mo
359.485 308.112 li
352.101 306.493 li
353.72 299.109 li
361.104 300.727 li
cp
.760784 .890196 .968627 rgb
f
343.705 296.984 mo
342.086 304.369 li
334.803 302.75 li
336.32 295.467 li
336.32 295.366 li
343.705 296.984 li
cp
f
372.131 297.996 mo
368.489 314.586 li
367.478 314.08 366.364 313.777 365.15 313.777 cv
364.442 313.777 363.734 313.878 363.026 314.08 cv
350.988 311.652 li
352.101 306.594 li
359.485 308.213 li
361.104 300.829 li
353.72 299.21 li
354.833 294.253 li
372.131 297.996 li
cp
f
354.833 294.152 mo
353.72 299.109 li
352.101 306.493 li
352.101 306.493 li
350.988 311.652 li
333.589 308.011 li
334.803 302.75 li
342.086 304.369 li
343.705 296.984 li
336.32 295.366 li
337.534 289.802 li
354.833 294.152 li
cp
f
375.165 319.341 mo
372.637 320.352 li
372.231 317.823 370.613 315.699 368.388 314.586 cv
372.029 297.996 li
372.839 294.253 li
380.224 295.872 li
375.165 319.341 li
cp
f
350.988 311.652 mo
363.026 314.181 li
360.093 314.991 357.867 317.621 357.563 320.757 cv
333.286 315.396 li
331.262 307.505 li
333.589 308.011 li
333.589 308.011 li
350.988 311.652 li
cp
1 1 1 rgb
f
368.894 320.858 mo
368.894 321.06 368.894 321.161 368.894 321.364 cv
368.894 323.488 367.174 325.208 365.05 325.208 cv
362.925 325.208 361.205 323.488 361.205 321.364 cv
361.205 321.263 361.205 321.161 361.205 320.959 cv
361.307 319.341 362.419 318.126 363.937 317.722 cv
364.24 317.621 364.645 317.621 364.948 317.621 cv
365.556 317.621 366.062 317.722 366.566 318.025 cv
367.882 318.531 368.691 319.644 368.894 320.858 cv
cp
.760784 .890196 .968627 rgb
f
368.995 321.465 mo
368.995 321.263 368.995 321.06 368.995 320.959 cv
368.792 319.644 367.983 318.632 366.87 318.126 cv
366.364 317.924 365.858 317.722 365.252 317.722 cv
364.848 317.722 364.544 317.823 364.24 317.823 cv
362.723 318.228 361.61 319.543 361.509 321.06 cv
361.509 321.161 361.509 321.263 361.509 321.465 cv
361.509 323.589 363.229 325.309 365.353 325.309 cv
367.275 325.208 368.995 323.488 368.995 321.465 cv
cp
372.637 320.352 mo
372.637 320.656 372.737 321.06 372.737 321.465 cv
372.737 325.612 369.298 329.052 365.15 329.052 cv
361.003 329.052 357.563 325.612 357.563 321.465 cv
357.563 321.263 357.563 320.959 357.563 320.757 cv
357.867 317.621 360.093 314.991 363.026 314.181 cv
363.734 313.979 364.342 313.878 365.15 313.878 cv
366.364 313.878 367.478 314.181 368.489 314.687 cv
370.715 315.699 372.333 317.823 372.637 320.352 cv
cp
f
336.32 296.58 mo
336.219 296.58 336.118 296.58 336.017 296.58 cv
335.309 296.479 334.904 295.771 335.005 295.063 cv
336.219 289.499 li
336.32 289.195 336.522 288.892 336.826 288.689 cv
337.129 288.487 337.433 288.487 337.838 288.588 cv
355.136 292.938 li
355.844 293.141 356.249 293.747 356.047 294.456 cv
355.844 295.164 355.237 295.568 354.529 295.366 cv
338.546 291.319 li
337.635 295.568 li
337.433 296.175 336.927 296.58 336.32 296.58 cv
cp
.0470588 .568627 .87451 rgb
f
350.988 312.866 mo
350.887 312.866 350.786 312.866 350.685 312.866 cv
333.286 309.225 li
332.578 309.124 332.173 308.416 332.274 307.707 cv
332.274 307.707 li
332.274 307.707 li
334.904 295.164 li
335.005 294.456 335.713 294.051 336.421 294.152 cv
337.129 294.253 337.534 294.961 337.433 295.669 cv
335.005 306.999 li
351.089 310.337 li
351.798 310.438 352.202 311.146 352.101 311.855 cv
352.101 312.462 351.595 312.866 350.988 312.866 cv
cp
f
336.219 301.739 mo
341.176 302.852 li
342.289 297.895 li
337.332 296.782 li
336.219 301.739 li
cp
342.086 305.684 mo
341.985 305.684 341.884 305.684 341.783 305.684 cv
334.398 304.065 li
334.398 304.065 li
334.398 304.065 li
333.69 303.863 333.286 303.256 333.488 302.548 cv
335.106 295.164 li
335.208 294.456 335.916 294.051 336.624 294.152 cv
344.008 295.771 li
344.717 295.872 345.121 296.58 345.02 297.288 cv
343.401 304.672 li
343.3 304.976 343.098 305.279 342.896 305.482 cv
342.592 305.583 342.39 305.684 342.086 305.684 cv
cp
f
353.619 305.583 mo
358.575 306.696 li
359.688 301.739 li
354.731 300.626 li
353.619 305.583 li
cp
359.485 309.427 mo
359.385 309.427 359.283 309.427 359.183 309.427 cv
351.798 307.809 li
351.494 307.707 351.292 307.606 351.089 307.404 cv
350.887 307.1 350.786 306.696 350.887 306.291 cv
352.506 298.906 li
352.607 298.198 353.315 297.793 354.023 297.895 cv
361.408 299.513 li
361.711 299.615 362.015 299.817 362.217 300.019 cv
362.419 300.323 362.419 300.626 362.419 300.93 cv
360.801 308.314 li
360.599 309.022 360.093 309.427 359.485 309.427 cv
cp
f
357.563 321.971 mo
357.463 321.971 357.361 321.971 357.261 321.971 cv
332.982 316.609 li
332.476 316.508 332.173 316.205 332.072 315.699 cv
329.947 307.809 li
329.846 307.404 329.947 306.898 330.251 306.594 cv
330.554 306.291 330.959 306.089 331.465 306.19 cv
363.229 312.765 li
363.937 312.866 364.342 313.575 364.24 314.283 cv
364.139 314.991 363.431 315.396 362.723 315.294 cv
332.881 309.124 li
334.196 314.283 li
357.665 319.442 li
358.373 319.543 358.777 320.251 358.677 320.959 cv
358.677 321.566 358.171 321.971 357.563 321.971 cv
cp
f
365.15 315.092 mo
364.544 315.092 363.937 315.193 363.431 315.294 cv
360.902 316.002 359.081 318.228 358.879 320.757 cv
358.879 320.959 358.879 321.161 358.879 321.364 cv
358.879 324.803 361.711 327.737 365.252 327.737 cv
368.691 327.737 371.625 324.904 371.625 321.364 cv
371.625 321.06 371.625 320.757 371.523 320.453 cv
371.22 318.329 369.905 316.609 367.983 315.699 cv
367.072 315.294 366.162 315.092 365.15 315.092 cv
cp
365.15 330.266 mo
360.295 330.266 356.249 326.32 356.249 321.364 cv
356.249 321.06 356.249 320.757 356.249 320.555 cv
356.552 316.913 359.183 313.878 362.622 312.866 cv
363.431 312.664 364.24 312.563 365.05 312.563 cv
366.364 312.563 367.68 312.866 368.894 313.473 cv
371.523 314.789 373.345 317.317 373.749 320.15 cv
373.851 320.555 373.851 320.959 373.851 321.364 cv
374.053 326.32 370.006 330.266 365.15 330.266 cv
cp
f
365.15 318.936 mo
364.948 318.936 364.645 318.936 364.442 319.037 cv
363.431 319.34 362.723 320.15 362.622 321.263 cv
362.622 321.364 362.622 321.465 362.622 321.465 cv
362.622 322.881 363.734 323.994 365.15 323.994 cv
366.566 323.994 367.68 322.881 367.68 321.465 cv
367.68 321.364 367.68 321.263 367.68 321.161 cv
367.578 320.352 367.072 319.644 366.264 319.239 cv
365.96 318.936 365.556 318.936 365.15 318.936 cv
cp
365.15 326.523 mo
362.318 326.523 360.093 324.297 360.093 321.465 cv
360.093 321.263 360.093 321.161 360.093 320.959 cv
360.295 318.936 361.711 317.115 363.734 316.609 cv
364.139 316.508 364.645 316.407 365.15 316.407 cv
365.96 316.407 366.668 316.609 367.376 316.913 cv
368.894 317.621 369.905 319.037 370.209 320.757 cv
370.209 320.959 370.209 321.263 370.209 321.465 cv
370.209 324.196 367.983 326.523 365.15 326.523 cv
cp
f
372.637 321.566 mo
372.131 321.566 371.625 321.263 371.423 320.757 cv
371.119 320.15 371.523 319.341 372.131 319.138 cv
374.053 318.43 li
378.807 296.883 li
373.851 295.771 li
373.345 298.198 li
373.243 298.906 372.535 299.311 371.827 299.21 cv
371.119 299.109 370.715 298.401 370.815 297.692 cv
371.625 293.95 li
371.726 293.242 372.434 292.837 373.143 292.938 cv
380.526 294.557 li
380.83 294.658 381.134 294.86 381.336 295.063 cv
381.538 295.366 381.538 295.669 381.538 295.973 cv
376.379 319.644 li
376.278 320.049 375.975 320.352 375.57 320.555 cv
373.041 321.566 li
372.939 321.566 372.839 321.566 372.637 321.566 cv
cp
f
368.489 315.901 mo
368.388 315.901 368.286 315.901 368.186 315.901 cv
367.478 315.8 367.072 315.092 367.174 314.384 cv
370.512 299.008 li
355.642 295.771 li
352.405 310.742 li
363.229 312.967 li
363.937 313.069 364.342 313.777 364.24 314.485 cv
364.139 315.193 363.431 315.598 362.723 315.497 cv
350.685 312.967 li
350.078 312.866 349.673 312.36 349.673 311.753 cv
349.673 311.652 349.673 311.551 349.673 311.45 cv
353.518 294.051 li
353.619 293.747 353.821 293.444 354.023 293.242 cv
354.226 293.039 354.63 293.039 354.934 293.039 cv
372.231 296.782 li
372.939 296.883 373.345 297.591 373.243 298.299 cv
369.602 314.89 li
369.602 315.497 369.096 315.901 368.489 315.901 cv
cp
f
380.628 331.581 mo
322.461 331.581 li
321.753 331.581 321.146 330.974 321.146 330.266 cv
321.146 329.558 321.753 328.951 322.461 328.951 cv
380.628 328.951 li
381.336 328.951 381.943 329.558 381.943 330.266 cv
381.842 330.974 381.235 331.581 380.628 331.581 cv
cp
f
322.36 310.034 mo
321.753 310.034 321.248 309.528 321.146 308.921 cv
321.045 308.213 321.551 307.606 322.259 307.505 cv
331.161 306.19 li
331.869 306.089 332.476 306.594 332.578 307.303 cv
332.679 308.011 332.173 308.618 331.465 308.719 cv
322.563 310.034 li
322.563 310.034 322.461 310.034 322.36 310.034 cv
cp
f
173.96 259.96 mo
275.119 259.96 li
275.119 361.119 li
173.96 361.119 li
173.96 259.96 li
cp
1 1 1 rgb
f
240.523 311.349 mo
240.118 311.349 239.713 311.248 239.208 311.248 cv
231.924 311.248 225.956 316.812 225.349 323.893 cv
225.349 324.297 225.248 324.702 225.248 325.208 cv
225.248 332.896 231.52 339.167 239.208 339.167 cv
246.896 339.167 253.167 332.896 253.167 325.208 cv
253.167 317.924 247.604 311.956 240.523 311.349 cv
cp
.760784 .890196 .968627 rgb
f
230.407 320.15 mo
248.11 320.15 li
248.11 330.266 li
230.407 330.266 li
230.407 320.15 li
cp
f
240.523 288.588 mo
240.523 311.45 li
240.118 311.45 239.713 311.349 239.208 311.349 cv
231.924 311.349 225.956 316.913 225.349 323.994 cv
195.001 323.994 li
195.001 288.588 li
240.523 288.588 li
cp
1 1 1 rgb
f
195.001 281.001 mo
212.704 281.001 li
212.704 288.588 li
195.001 288.588 li
195.001 281.001 li
cp
f
227.878 281.001 mo
240.523 281.001 li
240.523 288.588 li
227.878 288.588 li
227.878 281.001 li
cp
f
212.704 288.588 mo
212.704 281.001 li
227.878 281.001 li
227.878 288.588 li
227.878 297.389 li
212.704 297.389 li
212.704 288.588 li
cp
f
218.976 289.802 mo
195.001 289.802 li
194.293 289.802 193.687 289.195 193.687 288.487 cv
193.687 287.779 194.293 287.172 195.001 287.172 cv
219.077 287.172 li
219.785 287.172 220.392 287.779 220.392 288.487 cv
220.291 289.195 219.684 289.802 218.976 289.802 cv
cp
.0470588 .568627 .87451 rgb
f
240.523 289.802 mo
227.878 289.802 li
227.17 289.802 226.563 289.195 226.563 288.487 cv
226.563 287.779 227.17 287.172 227.878 287.172 cv
240.523 287.172 li
241.231 287.172 241.838 287.779 241.838 288.487 cv
241.737 289.195 241.13 289.802 240.523 289.802 cv
cp
f
227.878 298.704 mo
212.704 298.704 li
211.996 298.704 211.389 298.097 211.389 297.389 cv
211.389 281.001 li
211.389 280.293 211.996 279.686 212.704 279.686 cv
213.412 279.686 214.019 280.293 214.019 281.001 cv
214.019 296.175 li
226.563 296.175 li
226.563 281.001 li
226.563 280.293 227.17 279.686 227.878 279.686 cv
228.586 279.686 229.193 280.293 229.193 281.001 cv
229.193 297.389 li
229.092 298.097 228.485 298.704 227.878 298.704 cv
cp
f
211.389 311.349 mo
202.487 311.349 li
201.779 311.349 201.172 310.742 201.172 310.034 cv
201.172 309.326 201.779 308.719 202.487 308.719 cv
211.389 308.719 li
212.097 308.719 212.704 309.326 212.704 310.034 cv
212.704 310.742 212.097 311.349 211.389 311.349 cv
cp
f
215.233 316.407 mo
202.588 316.407 li
201.88 316.407 201.273 315.8 201.273 315.092 cv
201.273 314.384 201.88 313.777 202.588 313.777 cv
215.233 313.777 li
215.941 313.777 216.548 314.384 216.548 315.092 cv
216.548 315.8 215.84 316.407 215.233 316.407 cv
cp
f
225.349 325.208 mo
195.001 325.208 li
194.293 325.208 193.687 324.601 193.687 323.893 cv
193.687 281.001 li
193.687 280.293 194.293 279.686 195.001 279.686 cv
240.523 279.686 li
241.231 279.686 241.838 280.293 241.838 281.001 cv
241.838 311.45 li
241.838 312.158 241.231 312.765 240.523 312.765 cv
239.814 312.765 239.208 312.158 239.208 311.45 cv
239.208 282.215 li
196.215 282.215 li
196.215 322.679 li
225.349 322.679 li
226.057 322.679 226.664 323.286 226.664 323.994 cv
226.664 324.702 226.057 325.208 225.349 325.208 cv
cp
f
239.208 312.563 mo
232.632 312.563 227.17 317.52 226.664 324.095 cv
226.664 324.5 226.563 324.904 226.563 325.208 cv
226.563 332.188 232.228 337.853 239.208 337.853 cv
246.188 337.853 251.853 332.188 251.853 325.208 cv
251.853 318.632 246.896 313.17 240.32 312.664 cv
240.017 312.563 239.612 312.563 239.208 312.563 cv
cp
239.208 340.381 mo
230.812 340.381 224.034 333.604 224.034 325.208 cv
224.034 324.803 224.034 324.297 224.135 323.792 cv
224.438 320.049 226.158 316.508 228.991 313.979 cv
231.823 311.45 235.465 309.933 239.208 309.933 cv
239.612 309.933 240.118 309.933 240.624 310.034 cv
244.367 310.337 247.907 312.057 250.437 314.89 cv
252.965 317.722 254.483 321.364 254.483 325.106 cv
254.382 333.604 247.604 340.381 239.208 340.381 cv
cp
f
231.621 329.052 mo
246.795 329.052 li
246.795 321.465 li
231.621 321.465 li
231.621 329.052 li
cp
248.11 331.581 mo
230.407 331.581 li
229.699 331.581 229.092 330.974 229.092 330.266 cv
229.092 320.15 li
229.092 319.442 229.699 318.835 230.407 318.835 cv
248.11 318.835 li
248.818 318.835 249.425 319.442 249.425 320.15 cv
249.425 330.266 li
249.324 330.974 248.717 331.581 248.11 331.581 cv
cp
f
235.465 327.737 mo
234.757 327.737 234.15 327.13 234.15 326.422 cv
234.15 323.893 li
234.15 323.185 234.757 322.578 235.465 322.578 cv
236.173 322.578 236.78 323.185 236.78 323.893 cv
236.78 326.422 li
236.679 327.13 236.072 327.737 235.465 327.737 cv
cp
f
239.208 327.737 mo
238.5 327.737 237.893 327.13 237.893 326.422 cv
237.893 323.893 li
237.893 323.185 238.5 322.578 239.208 322.578 cv
239.916 322.578 240.523 323.185 240.523 323.893 cv
240.523 326.422 li
240.523 327.13 239.916 327.737 239.208 327.737 cv
cp
f
243.052 327.737 mo
242.344 327.737 241.737 327.13 241.737 326.422 cv
241.737 323.893 li
241.737 323.185 242.344 322.578 243.052 322.578 cv
243.76 322.578 244.367 323.185 244.367 323.893 cv
244.367 326.422 li
244.266 327.13 243.659 327.737 243.052 327.737 cv
cp
f
46.5 259.96 mo
147.659 259.96 li
147.659 361.119 li
46.5 361.119 li
46.5 259.96 li
cp
1 1 1 rgb
f
95.3599 281.001 mo
87.6719 281.001 81.3999 287.273 81.3999 294.961 cv
81.3999 296.782 81.7031 298.502 82.3101 300.019 cv
84.3335 305.178 89.3916 308.921 95.2588 308.921 cv
102.947 308.921 109.219 302.649 109.219 294.961 cv
109.219 287.273 102.947 281.001 95.3599 281.001 cv
cp
f
105.476 313.878 mo
96.5737 325.208 li
87.7729 313.878 li
105.476 313.878 li
cp
f
110.534 339.167 mo
82.7148 339.167 li
75.1279 339.167 li
75.1279 320.656 li
75.1279 316.913 78.1626 313.878 81.9058 313.878 cv
87.7729 313.878 li
96.6748 325.309 li
105.577 313.878 li
111.242 313.878 li
114.984 313.878 118.02 316.913 118.02 320.656 cv
118.02 339.167 li
110.534 339.167 li
cp
f
100.417 288.588 mo
101.834 288.588 102.947 289.701 102.947 291.117 cv
102.947 292.533 101.834 293.646 100.417 293.646 cv
99.0015 293.646 97.8887 292.533 97.8887 291.117 cv
97.8887 289.701 99.0015 288.588 100.417 288.588 cv
cp
.760784 .890196 .968627 rgb
f
90.3018 288.588 mo
91.7178 288.588 92.8306 289.701 92.8306 291.117 cv
92.8306 292.533 91.7178 293.646 90.3018 293.646 cv
88.8857 293.646 87.7729 292.533 87.7729 291.117 cv
87.7729 289.701 88.8857 288.588 90.3018 288.588 cv
cp
f
76.3418 337.853 mo
116.806 337.853 li
116.806 320.656 li
116.806 317.621 114.377 315.092 111.242 315.092 cv
81.9058 315.092 li
78.8711 315.092 76.3418 317.52 76.3418 320.656 cv
76.3418 337.853 li
cp
118.121 340.381 mo
75.1279 340.381 li
74.4199 340.381 73.813 339.775 73.813 339.066 cv
73.813 320.656 li
73.813 316.205 77.4546 312.563 81.9058 312.563 cv
111.242 312.563 li
115.693 312.563 119.334 316.205 119.334 320.656 cv
119.334 339.167 li
119.334 339.775 118.728 340.381 118.121 340.381 cv
cp
.0470588 .568627 .87451 rgb
f
82.7148 340.381 mo
82.0068 340.381 81.3999 339.775 81.3999 339.066 cv
81.3999 330.165 li
81.3999 329.457 82.0068 328.85 82.7148 328.85 cv
83.4229 328.85 84.0298 329.457 84.0298 330.165 cv
84.0298 339.066 li
83.9287 339.775 83.3218 340.381 82.7148 340.381 cv
cp
f
110.534 340.381 mo
109.826 340.381 109.219 339.775 109.219 339.066 cv
109.219 330.165 li
109.219 329.457 109.826 328.85 110.534 328.85 cv
111.242 328.85 111.849 329.457 111.849 330.165 cv
111.849 339.066 li
111.748 339.775 111.141 340.381 110.534 340.381 cv
cp
f
95.3599 282.215 mo
88.3799 282.215 82.7148 287.88 82.7148 294.86 cv
82.7148 296.479 83.0186 297.996 83.6255 299.412 cv
85.5474 304.268 90.2007 307.505 95.3599 307.505 cv
102.34 307.505 108.004 301.84 108.004 294.86 cv
108.004 287.88 102.239 282.215 95.3599 282.215 cv
cp
95.3599 310.034 mo
92.2236 310.034 89.29 309.124 86.6602 307.303 cv
84.1309 305.583 82.3101 303.155 81.1973 300.323 cv
80.4893 298.603 80.186 296.681 80.186 294.759 cv
80.186 286.363 86.9634 279.585 95.3599 279.585 cv
103.756 279.585 110.534 286.363 110.534 294.759 cv
110.534 303.155 103.655 310.034 95.3599 310.034 cv
cp
f
96.5737 326.523 mo
96.1689 326.523 95.8657 326.32 95.562 326.017 cv
86.7612 314.586 li
86.3564 314.08 86.458 313.271 86.9634 312.765 cv
87.4692 312.36 88.2788 312.462 88.7842 312.967 cv
96.6748 323.083 li
104.565 312.967 li
104.97 312.462 105.779 312.36 106.386 312.765 cv
106.993 313.17 106.993 313.979 106.588 314.586 cv
97.6865 326.017 li
97.2817 326.32 96.9785 326.523 96.5737 326.523 cv
cp
f
94.0449 301.233 mo
78.8711 301.233 li
78.1626 301.233 77.5557 300.626 77.5557 299.918 cv
77.5557 299.21 78.1626 298.603 78.8711 298.603 cv
94.0449 298.603 li
94.7529 298.603 95.3599 299.21 95.3599 299.918 cv
95.3599 300.626 94.7529 301.233 94.0449 301.233 cv
cp
f
90.3018 289.802 mo
89.5938 289.802 88.9868 290.409 88.9868 291.117 cv
88.9868 291.825 89.5938 292.432 90.3018 292.432 cv
91.0098 292.432 91.6167 291.825 91.6167 291.117 cv
91.5156 290.409 90.9087 289.802 90.3018 289.802 cv
cp
90.3018 294.86 mo
88.1777 294.86 86.458 293.141 86.458 291.016 cv
86.458 288.892 88.1777 287.172 90.3018 287.172 cv
92.4263 287.172 94.146 288.892 94.146 291.016 cv
94.146 293.141 92.3252 294.86 90.3018 294.86 cv
cp
f
100.417 289.802 mo
99.7095 289.802 99.1025 290.409 99.1025 291.117 cv
99.1025 291.825 99.7095 292.432 100.417 292.432 cv
101.126 292.432 101.733 291.825 101.733 291.117 cv
101.632 290.409 101.025 289.802 100.417 289.802 cv
cp
100.417 294.86 mo
98.2935 294.86 96.5737 293.141 96.5737 291.016 cv
96.5737 288.892 98.2935 287.172 100.417 287.172 cv
102.542 287.172 104.262 288.892 104.262 291.016 cv
104.262 293.141 102.441 294.86 100.417 294.86 cv
cp
f
99.1025 303.762 mo
95.2588 303.762 li
94.5503 303.762 93.9434 303.155 93.9434 302.447 cv
93.9434 301.739 94.5503 301.132 95.2588 301.132 cv
97.7876 301.132 li
97.7876 298.603 li
95.2588 298.603 li
94.5503 298.603 93.9434 297.996 93.9434 297.288 cv
93.9434 296.58 94.5503 295.973 95.2588 295.973 cv
99.1025 295.973 li
99.8105 295.973 100.417 296.58 100.417 297.288 cv
100.417 302.346 li
100.417 303.155 99.8105 303.762 99.1025 303.762 cv
cp
f
556.341 132.5 mo
657.5 132.5 li
657.5 233.659 li
556.341 233.659 li
556.341 132.5 li
cp
1 1 1 rgb
f
592.556 167.4 mo
584.16 167.4 577.382 174.177 577.382 182.574 cv
577.382 193.903 592.556 211.708 592.556 211.708 cv
592.556 211.708 607.629 191.678 607.729 182.574 cv
607.831 174.177 600.851 167.4 592.556 167.4 cv
cp
f
600.143 176.302 mo
600.143 191.476 li
584.969 191.476 li
584.969 176.302 li
590.027 176.302 li
590.027 181.36 li
595.085 181.36 li
595.085 176.302 li
600.143 176.302 li
cp
.760784 .890196 .968627 rgb
f
590.027 176.302 mo
595.085 176.302 li
595.085 181.36 li
590.027 181.36 li
590.027 176.302 li
cp
f
630.49 163.657 mo
630.49 160.825 628.265 158.599 625.433 158.599 cv
622.601 158.599 620.375 160.825 620.375 163.657 cv
620.375 166.489 622.601 168.715 625.433 168.715 cv
628.265 168.715 630.49 166.388 630.49 163.657 cv
cp
625.534 153.541 mo
630.996 153.541 635.549 157.992 635.549 163.556 cv
635.447 169.524 625.534 182.675 625.534 182.675 cv
625.534 182.675 615.62 170.94 615.519 163.455 cv
615.519 157.992 619.97 153.541 625.534 153.541 cv
cp
1 1 1 rgb
f
592.556 168.715 mo
588.813 168.715 585.272 170.131 582.643 172.862 cv
580.013 175.493 578.596 178.932 578.596 182.675 cv
578.596 191.779 589.116 205.537 592.455 209.684 cv
593.77 207.762 596.4 204.121 599.03 199.973 cv
603.886 192.184 606.415 186.215 606.516 182.675 cv
606.617 179.033 605.201 175.594 602.57 172.963 cv
599.84 170.131 596.299 168.715 592.556 168.715 cv
cp
592.556 212.921 mo
592.151 212.921 591.848 212.719 591.544 212.517 cv
590.938 211.809 576.067 194.308 576.067 182.574 cv
576.067 178.224 577.787 174.076 580.821 170.94 cv
583.957 167.804 588.105 166.085 592.455 166.085 cv
596.906 166.085 601.054 167.804 604.189 171.042 cv
607.224 174.177 608.943 178.224 608.843 182.574 cv
608.843 191.981 594.175 211.606 593.467 212.416 cv
593.264 212.719 592.961 212.921 592.556 212.921 cv
592.556 212.921 li
cp
.0470588 .568627 .87451 rgb
f
625.534 154.755 mo
623.207 154.755 620.981 155.666 619.363 157.284 cv
617.744 158.902 616.834 161.128 616.834 163.455 cv
616.834 169.019 623.005 177.313 625.534 180.55 cv
628.67 176.201 634.233 167.602 634.335 163.455 cv
634.335 161.128 633.525 159.003 631.907 157.385 cv
630.086 155.666 627.86 154.755 625.534 154.755 cv
cp
625.534 183.889 mo
625.129 183.889 624.826 183.687 624.522 183.484 cv
624.117 182.979 614.305 171.345 614.204 163.556 cv
614.204 160.521 615.316 157.79 617.441 155.666 cv
619.565 153.541 622.397 152.327 625.433 152.327 cv
628.468 152.327 631.3 153.541 633.525 155.666 cv
635.649 157.79 636.763 160.622 636.763 163.556 cv
636.763 166.287 634.941 170.435 631.604 175.998 cv
629.074 180.044 626.646 183.282 626.545 183.383 cv
626.343 183.687 625.938 183.788 625.534 183.889 cv
625.534 183.788 625.534 183.889 625.534 183.889 cv
cp
f
625.433 159.813 mo
623.309 159.813 621.589 161.533 621.589 163.657 cv
621.589 165.781 623.309 167.501 625.433 167.501 cv
627.557 167.501 629.276 165.781 629.276 163.657 cv
629.276 161.533 627.456 159.813 625.433 159.813 cv
cp
625.433 169.929 mo
621.993 169.929 619.06 167.096 619.06 163.556 cv
619.06 160.015 621.893 157.183 625.433 157.183 cv
628.974 157.183 631.806 160.015 631.806 163.556 cv
631.806 167.096 628.872 169.929 625.433 169.929 cv
cp
f
600.143 192.689 mo
584.969 192.689 li
584.261 192.689 583.654 192.083 583.654 191.375 cv
583.654 176.201 li
583.654 175.493 584.261 174.886 584.969 174.886 cv
590.027 174.886 li
590.735 174.886 591.342 175.493 591.342 176.201 cv
591.342 176.909 590.735 177.516 590.027 177.516 cv
586.183 177.516 li
586.183 190.161 li
598.828 190.161 li
598.828 177.516 li
594.983 177.516 li
594.275 177.516 593.669 176.909 593.669 176.201 cv
593.669 175.493 594.275 174.886 594.983 174.886 cv
600.042 174.886 li
600.75 174.886 601.356 175.493 601.356 176.201 cv
601.356 191.375 li
601.356 192.083 600.75 192.689 600.143 192.689 cv
cp
f
591.241 180.044 mo
593.77 180.044 li
593.77 177.516 li
591.241 177.516 li
591.241 180.044 li
cp
595.085 182.574 mo
590.027 182.574 li
589.319 182.574 588.712 181.967 588.712 181.259 cv
588.712 176.201 li
588.712 175.493 589.319 174.886 590.027 174.886 cv
595.085 174.886 li
595.793 174.886 596.4 175.493 596.4 176.201 cv
596.4 181.259 li
596.299 181.967 595.691 182.574 595.085 182.574 cv
cp
f
617.846 200.276 mo
612.788 200.276 li
612.08 200.276 611.473 199.669 611.473 198.961 cv
611.473 188.846 li
611.473 188.137 612.08 187.53 612.788 187.53 cv
624.117 187.53 li
624.117 182.473 li
624.117 181.764 624.725 181.157 625.433 181.157 cv
626.141 181.157 626.748 181.764 626.748 182.473 cv
626.748 188.846 li
626.748 189.554 626.141 190.161 625.433 190.161 cv
614.002 190.161 li
614.002 197.748 li
617.846 197.748 li
618.554 197.748 619.161 198.354 619.161 199.063 cv
619.06 199.669 618.453 200.276 617.846 200.276 cv
cp
f
629.176 212.921 mo
592.556 212.921 li
591.848 212.921 591.241 212.314 591.241 211.606 cv
591.241 210.898 591.848 210.291 592.556 210.291 cv
627.962 210.291 li
627.962 200.276 li
625.433 200.276 li
624.725 200.276 624.117 199.669 624.117 198.961 cv
624.117 198.253 624.725 197.646 625.433 197.646 cv
629.176 197.646 li
629.884 197.646 630.49 198.253 630.49 198.961 cv
630.49 211.606 li
630.49 212.314 629.884 212.921 629.176 212.921 cv
cp
f
428.881 132.5 mo
530.04 132.5 li
530.04 233.659 li
428.881 233.659 li
428.881 132.5 li
cp
1 1 1 rgb
f
449.922 161.128 mo
495.443 161.128 li
495.443 196.534 li
449.922 196.534 li
449.922 161.128 li
cp
f
467.625 161.128 mo
467.625 153.541 li
482.799 153.541 li
482.799 161.128 li
482.799 169.929 li
467.625 169.929 li
467.625 161.128 li
cp
f
449.922 153.541 mo
467.625 153.541 li
467.625 161.128 li
449.922 161.128 li
449.922 153.541 li
cp
f
482.799 153.541 mo
495.443 153.541 li
495.443 161.128 li
482.799 161.128 li
482.799 153.541 li
cp
f
482.799 171.244 mo
467.625 171.244 li
466.917 171.244 466.31 170.637 466.31 169.929 cv
466.31 153.541 li
466.31 152.833 466.917 152.226 467.625 152.226 cv
468.333 152.226 468.939 152.833 468.939 153.541 cv
468.939 168.715 li
481.483 168.715 li
481.483 153.541 li
481.483 152.833 482.091 152.226 482.799 152.226 cv
483.507 152.226 484.113 152.833 484.113 153.541 cv
484.113 169.929 li
484.013 170.637 483.405 171.244 482.799 171.244 cv
cp
.0470588 .568627 .87451 rgb
f
466.31 183.889 mo
457.407 183.889 li
456.699 183.889 456.093 183.282 456.093 182.574 cv
456.093 181.866 456.699 181.259 457.407 181.259 cv
466.31 181.259 li
467.018 181.259 467.625 181.866 467.625 182.574 cv
467.625 183.282 467.018 183.889 466.31 183.889 cv
cp
f
470.153 188.947 mo
457.509 188.947 li
456.801 188.947 456.193 188.34 456.193 187.631 cv
456.193 186.923 456.801 186.316 457.509 186.316 cv
470.153 186.316 li
470.861 186.316 471.469 186.923 471.469 187.631 cv
471.469 188.34 470.761 188.947 470.153 188.947 cv
cp
f
475.01 204.121 mo
468.839 204.121 li
468.131 204.121 467.523 203.514 467.523 202.806 cv
467.523 202.097 468.131 201.49 468.839 201.49 cv
475.01 201.49 li
475.718 201.49 476.324 202.097 476.324 202.806 cv
476.324 203.514 475.718 204.121 475.01 204.121 cv
cp
f
477.74 207.863 mo
468.839 207.863 li
468.131 207.863 467.523 207.256 467.523 206.548 cv
467.523 205.84 468.131 205.233 468.839 205.233 cv
477.74 205.233 li
478.448 205.233 479.056 205.84 479.056 206.548 cv
478.954 207.256 478.348 207.863 477.74 207.863 cv
cp
f
473.896 162.342 mo
449.922 162.342 li
449.214 162.342 448.606 161.735 448.606 161.027 cv
448.606 160.319 449.214 159.712 449.922 159.712 cv
473.998 159.712 li
474.706 159.712 475.313 160.319 475.313 161.027 cv
475.212 161.735 474.604 162.342 473.896 162.342 cv
cp
f
495.443 162.342 mo
482.799 162.342 li
482.091 162.342 481.483 161.735 481.483 161.027 cv
481.483 160.319 482.091 159.712 482.799 159.712 cv
495.443 159.712 li
496.151 159.712 496.759 160.319 496.759 161.027 cv
496.657 161.735 496.051 162.342 495.443 162.342 cv
cp
f
451.136 195.218 mo
494.128 195.218 li
494.128 154.755 li
451.136 154.755 li
451.136 195.218 li
cp
495.443 197.748 mo
449.922 197.748 li
449.214 197.748 448.606 197.141 448.606 196.433 cv
448.606 153.541 li
448.606 152.833 449.214 152.226 449.922 152.226 cv
495.443 152.226 li
496.151 152.226 496.759 152.833 496.759 153.541 cv
496.759 196.534 li
496.657 197.141 496.051 197.748 495.443 197.748 cv
cp
f
486.541 177.516 mo
462.566 177.516 li
461.858 177.516 461.252 176.909 461.252 176.201 cv
461.252 175.493 461.858 174.886 462.566 174.886 cv
486.541 174.886 li
487.249 174.886 487.856 175.493 487.856 176.201 cv
487.856 176.909 487.249 177.516 486.541 177.516 cv
cp
f
508.088 177.516 mo
500.501 177.516 li
499.793 177.516 499.187 176.909 499.187 176.201 cv
499.187 175.493 499.793 174.886 500.501 174.886 cv
508.088 174.886 li
508.797 174.886 509.403 175.493 509.403 176.201 cv
509.302 176.909 508.695 177.516 508.088 177.516 cv
cp
f
508.088 212.921 mo
462.566 212.921 li
461.858 212.921 461.252 212.314 461.252 211.606 cv
461.252 201.49 li
461.252 200.782 461.858 200.175 462.566 200.175 cv
463.274 200.175 463.882 200.782 463.882 201.49 cv
463.882 210.393 li
508.189 210.393 li
508.897 210.393 509.505 211 509.505 211.708 cv
509.302 212.314 508.695 212.921 508.088 212.921 cv
cp
f
508.088 212.921 mo
507.38 212.921 506.773 212.314 506.773 211.606 cv
506.773 169.929 li
500.4 169.929 li
499.692 169.929 499.085 169.322 499.085 168.614 cv
499.085 167.906 499.692 167.299 500.4 167.299 cv
507.987 167.299 li
508.695 167.299 509.302 167.906 509.302 168.614 cv
509.302 211.606 li
509.302 212.314 508.695 212.921 508.088 212.921 cv
cp
f
301.42 132.5 mo
402.579 132.5 li
402.579 233.659 li
301.42 233.659 li
301.42 132.5 li
cp
1 1 1 rgb
f
347.751 153.541 mo
365.454 153.541 li
365.454 164.972 li
347.751 164.972 li
347.751 153.541 li
cp
f
366.668 181.36 mo
360.396 181.36 li
357.867 181.36 li
357.867 187.631 li
341.378 187.631 li
341.378 164.871 li
347.751 164.871 li
365.454 164.871 li
371.726 164.871 li
371.726 181.36 li
366.668 181.36 li
cp
f
376.784 187.631 mo
376.784 190.161 li
362.925 190.161 li
362.925 195.218 li
326.205 195.218 li
326.205 187.631 li
341.378 187.631 li
357.867 187.631 li
357.867 181.36 li
360.396 181.36 li
366.668 181.36 li
371.726 181.36 li
376.784 181.36 li
376.784 187.631 li
cp
f
339.861 211.708 mo
332.274 211.708 326.205 205.638 326.205 198.051 cv
326.205 195.218 li
362.925 195.218 li
362.925 190.161 li
376.885 190.161 li
376.885 195.218 li
376.885 198.051 li
376.885 205.638 370.815 211.708 363.229 211.708 cv
339.861 211.708 li
cp
f
380.628 212.921 mo
363.128 212.921 li
362.419 212.921 361.813 212.314 361.813 211.606 cv
361.813 210.898 362.419 210.291 363.128 210.291 cv
380.628 210.291 li
381.336 210.291 381.943 210.898 381.943 211.606 cv
381.842 212.314 381.235 212.921 380.628 212.921 cv
cp
.0470588 .568627 .87451 rgb
f
339.861 212.921 mo
322.461 212.921 li
321.753 212.921 321.146 212.314 321.146 211.606 cv
321.146 210.898 321.753 210.291 322.461 210.291 cv
339.861 210.291 li
340.569 210.291 341.176 210.898 341.176 211.606 cv
341.176 212.314 340.569 212.921 339.861 212.921 cv
cp
f
327.52 188.947 mo
327.52 198.051 li
327.52 204.829 332.982 210.393 339.861 210.393 cv
363.128 210.393 li
370.006 210.393 375.57 204.829 375.57 197.95 cv
375.57 182.574 li
359.081 182.574 li
359.081 187.631 li
359.081 188.34 358.475 188.947 357.766 188.947 cv
327.52 188.947 li
cp
363.128 212.921 mo
339.861 212.921 li
331.667 212.921 324.889 206.245 324.889 197.95 cv
324.889 187.631 li
324.889 186.923 325.497 186.316 326.205 186.316 cv
356.552 186.316 li
356.552 181.259 li
356.552 180.55 357.159 179.943 357.867 179.943 cv
376.885 179.943 li
377.593 179.943 378.2 180.55 378.2 181.259 cv
378.2 197.95 li
378.099 206.245 371.321 212.921 363.128 212.921 cv
cp
f
362.925 196.534 mo
326.205 196.534 li
325.497 196.534 324.889 195.927 324.889 195.218 cv
324.889 194.51 325.497 193.903 326.205 193.903 cv
361.61 193.903 li
361.61 190.161 li
361.61 189.453 362.217 188.846 362.925 188.846 cv
376.885 188.846 li
377.593 188.846 378.2 189.453 378.2 190.161 cv
378.2 190.869 377.593 191.476 376.885 191.476 cv
364.139 191.476 li
364.139 195.218 li
364.139 195.927 363.532 196.534 362.925 196.534 cv
cp
f
371.726 182.574 mo
371.018 182.574 370.411 181.967 370.411 181.259 cv
370.411 166.085 li
365.353 166.085 li
364.645 166.085 364.038 165.478 364.038 164.77 cv
364.038 164.062 364.645 163.455 365.353 163.455 cv
371.726 163.455 li
372.434 163.455 373.041 164.062 373.041 164.77 cv
373.041 181.259 li
373.041 181.967 372.434 182.574 371.726 182.574 cv
cp
f
341.378 188.947 mo
340.67 188.947 340.063 188.34 340.063 187.631 cv
340.063 164.871 li
340.063 164.163 340.67 163.556 341.378 163.556 cv
347.751 163.556 li
348.459 163.556 349.066 164.163 349.066 164.871 cv
349.066 165.579 348.459 166.186 347.751 166.186 cv
342.693 166.186 li
342.693 187.733 li
342.693 188.34 342.086 188.947 341.378 188.947 cv
cp
f
347.751 182.574 mo
347.043 182.574 346.437 181.967 346.437 181.259 cv
346.437 171.143 li
346.437 170.435 347.043 169.828 347.751 169.828 cv
348.459 169.828 349.066 170.435 349.066 171.143 cv
349.066 181.259 li
348.965 181.967 348.358 182.574 347.751 182.574 cv
cp
f
354.023 182.574 mo
353.315 182.574 352.708 181.967 352.708 181.259 cv
352.708 171.143 li
352.708 170.435 353.315 169.828 354.023 169.828 cv
354.731 169.828 355.338 170.435 355.338 171.143 cv
355.338 181.259 li
355.338 181.967 354.731 182.574 354.023 182.574 cv
cp
f
360.396 182.574 mo
359.688 182.574 359.081 181.967 359.081 181.259 cv
359.081 171.143 li
359.081 170.435 359.688 169.828 360.396 169.828 cv
361.104 169.828 361.711 170.435 361.711 171.143 cv
361.711 181.259 li
361.61 181.967 361.003 182.574 360.396 182.574 cv
cp
f
366.668 182.574 mo
365.96 182.574 365.353 181.967 365.353 181.259 cv
365.353 171.143 li
365.353 170.435 365.96 169.828 366.668 169.828 cv
367.376 169.828 367.983 170.435 367.983 171.143 cv
367.983 181.259 li
367.983 181.967 367.376 182.574 366.668 182.574 cv
cp
f
348.965 163.657 mo
364.139 163.657 li
364.139 154.755 li
348.965 154.755 li
348.965 163.657 li
cp
365.454 166.186 mo
347.751 166.186 li
347.043 166.186 346.437 165.579 346.437 164.871 cv
346.437 153.541 li
346.437 152.833 347.043 152.226 347.751 152.226 cv
365.454 152.226 li
366.162 152.226 366.77 152.833 366.77 153.541 cv
366.77 164.871 li
366.668 165.579 366.062 166.186 365.454 166.186 cv
cp
f
340.165 202.806 mo
327.52 202.806 li
326.812 202.806 326.205 202.198 326.205 201.49 cv
326.205 200.782 326.812 200.175 327.52 200.175 cv
340.165 200.175 li
340.873 200.175 341.479 200.782 341.479 201.49 cv
341.378 202.198 340.771 202.806 340.165 202.806 cv
cp
f
173.96 132.5 mo
275.119 132.5 li
275.119 233.659 li
173.96 233.659 li
173.96 132.5 li
cp
1 1 1 rgb
f
195.001 161.128 mo
195.001 162.646 195.001 194.915 195.001 196.534 cv
196.316 196.534 238.702 196.534 240.523 196.534 cv
240.523 194.915 240.523 162.646 240.523 161.128 cv
195.001 161.128 li
cp
f
212.704 161.128 mo
212.704 153.541 li
227.878 153.541 li
227.878 161.128 li
227.878 169.929 li
212.704 169.929 li
212.704 161.128 li
cp
f
195.001 153.541 mo
212.704 153.541 li
212.704 161.128 li
195.001 161.128 li
195.001 153.541 li
cp
f
227.878 153.541 mo
240.523 153.541 li
240.523 161.128 li
227.878 161.128 li
227.878 153.541 li
cp
f
240.523 183.889 mo
240.118 183.889 239.713 183.788 239.208 183.788 cv
231.924 183.788 225.956 189.351 225.349 196.433 cv
225.349 196.837 225.248 197.242 225.248 197.748 cv
225.248 205.436 231.52 211.708 239.208 211.708 cv
246.896 211.708 253.167 205.436 253.167 197.748 cv
253.167 190.464 247.604 184.496 240.523 183.889 cv
cp
.760784 .890196 .968627 rgb
f
243.052 188.947 mo
243.052 195.218 li
239.208 199.063 li
235.465 195.218 li
235.465 188.947 li
243.052 188.947 li
cp
f
239.511 199.063 mo
241.433 199.265 242.951 200.883 242.951 202.806 cv
242.951 204.93 241.231 206.649 239.106 206.649 cv
236.982 206.649 235.263 204.93 235.263 202.806 cv
235.263 202.704 235.263 202.603 235.263 202.502 cv
235.465 200.58 237.083 199.063 239.005 199.063 cv
239.309 199.063 239.41 199.063 239.511 199.063 cv
cp
f
218.976 162.342 mo
195.001 162.342 li
194.293 162.342 193.687 161.735 193.687 161.027 cv
193.687 160.319 194.293 159.712 195.001 159.712 cv
219.077 159.712 li
219.785 159.712 220.392 160.319 220.392 161.027 cv
220.291 161.735 219.684 162.342 218.976 162.342 cv
cp
.0470588 .568627 .87451 rgb
f
240.523 162.342 mo
227.878 162.342 li
227.17 162.342 226.563 161.735 226.563 161.027 cv
226.563 160.319 227.17 159.712 227.878 159.712 cv
240.523 159.712 li
241.231 159.712 241.838 160.319 241.838 161.027 cv
241.737 161.735 241.13 162.342 240.523 162.342 cv
cp
f
227.878 171.244 mo
212.704 171.244 li
211.996 171.244 211.389 170.637 211.389 169.929 cv
211.389 153.541 li
211.389 152.833 211.996 152.226 212.704 152.226 cv
213.412 152.226 214.019 152.833 214.019 153.541 cv
214.019 168.715 li
226.563 168.715 li
226.563 153.541 li
226.563 152.833 227.17 152.226 227.878 152.226 cv
228.586 152.226 229.193 152.833 229.193 153.541 cv
229.193 169.929 li
229.092 170.637 228.485 171.244 227.878 171.244 cv
cp
f
211.389 183.889 mo
202.487 183.889 li
201.779 183.889 201.172 183.282 201.172 182.574 cv
201.172 181.866 201.779 181.259 202.487 181.259 cv
211.389 181.259 li
212.097 181.259 212.704 181.866 212.704 182.574 cv
212.704 183.282 212.097 183.889 211.389 183.889 cv
cp
f
215.233 188.947 mo
202.588 188.947 li
201.88 188.947 201.273 188.34 201.273 187.631 cv
201.273 186.923 201.88 186.316 202.588 186.316 cv
215.233 186.316 li
215.941 186.316 216.548 186.923 216.548 187.631 cv
216.548 188.34 215.84 188.947 215.233 188.947 cv
cp
f
225.349 197.748 mo
195.001 197.748 li
194.293 197.748 193.687 197.141 193.687 196.433 cv
193.687 153.541 li
193.687 152.833 194.293 152.226 195.001 152.226 cv
240.523 152.226 li
241.231 152.226 241.838 152.833 241.838 153.541 cv
241.838 183.99 li
241.838 184.698 241.231 185.305 240.523 185.305 cv
239.814 185.305 239.208 184.698 239.208 183.99 cv
239.208 154.755 li
196.215 154.755 li
196.215 195.218 li
225.349 195.218 li
226.057 195.218 226.664 195.826 226.664 196.534 cv
226.664 197.242 226.057 197.748 225.349 197.748 cv
cp
f
239.208 185.103 mo
232.632 185.103 227.17 190.06 226.664 196.635 cv
226.664 197.04 226.563 197.444 226.563 197.748 cv
226.563 204.728 232.228 210.393 239.208 210.393 cv
246.188 210.393 251.853 204.728 251.853 197.748 cv
251.853 191.172 246.896 185.709 240.32 185.204 cv
240.017 185.103 239.612 185.103 239.208 185.103 cv
cp
239.208 212.921 mo
230.812 212.921 224.034 206.144 224.034 197.748 cv
224.034 197.343 224.034 196.837 224.135 196.331 cv
224.438 192.588 226.158 189.048 228.991 186.519 cv
231.823 183.99 235.465 182.473 239.208 182.473 cv
239.612 182.473 240.118 182.473 240.624 182.574 cv
244.367 182.877 247.907 184.597 250.437 187.429 cv
252.965 190.262 254.483 193.903 254.483 197.646 cv
254.382 206.144 247.604 212.921 239.208 212.921 cv
cp
f
239.208 200.276 mo
237.893 200.276 236.78 201.288 236.679 202.603 cv
236.679 202.704 236.679 202.806 236.679 202.806 cv
236.679 204.222 237.792 205.334 239.208 205.334 cv
240.624 205.334 241.737 204.222 241.737 202.806 cv
241.737 201.49 240.725 200.377 239.41 200.276 cv
239.41 200.276 239.309 200.276 239.208 200.276 cv
cp
239.208 207.863 mo
236.375 207.863 234.15 205.638 234.15 202.806 cv
234.15 202.603 234.15 202.502 234.15 202.3 cv
234.352 199.669 236.578 197.748 239.208 197.748 cv
239.41 197.748 239.511 197.748 239.713 197.748 cv
242.344 197.95 244.266 200.175 244.266 202.806 cv
244.266 205.638 242.04 207.863 239.208 207.863 cv
cp
f
236.679 194.713 mo
239.208 197.242 li
241.737 194.713 li
241.737 190.161 li
236.679 190.161 li
236.679 194.713 li
cp
239.208 200.276 mo
238.904 200.276 238.601 200.175 238.297 199.872 cv
234.453 196.028 li
234.251 195.826 234.049 195.421 234.049 195.117 cv
234.049 188.744 li
234.049 188.036 234.656 187.429 235.364 187.429 cv
242.951 187.429 li
243.659 187.429 244.266 188.036 244.266 188.744 cv
244.266 195.218 li
244.266 195.522 244.165 195.826 243.861 196.129 cv
240.017 199.973 li
239.814 200.175 239.511 200.276 239.208 200.276 cv
cp
f
46.5 132.5 mo
147.659 132.5 li
147.659 233.659 li
46.5 233.659 li
46.5 132.5 li
cp
1 1 1 rgb
f
125.708 185.103 mo
125.708 192.689 li
115.592 192.689 li
85.2437 192.689 li
85.2437 185.103 li
125.708 185.103 li
cp
f
125.708 162.342 mo
125.708 185.103 li
85.2437 185.103 li
85.2437 168.715 li
85.2437 162.342 li
125.708 162.342 li
cp
.760784 .890196 .968627 rgb
f
78.8711 168.715 mo
78.8711 178.831 li
68.7549 178.831 li
67.6421 178.831 li
68.4517 173.166 73.105 168.917 78.8711 168.715 cv
cp
f
85.2437 185.103 mo
85.2437 192.689 li
76.3418 192.689 li
67.4399 192.689 li
67.4399 180.55 li
67.4399 179.943 67.4399 179.336 67.541 178.729 cv
68.6538 178.729 li
78.7695 178.729 li
78.7695 168.614 li
78.9722 168.614 79.0732 168.614 79.2754 168.614 cv
85.1426 168.614 li
85.1426 185.103 li
85.2437 185.103 li
cp
f
76.3418 192.689 mo
79.1353 192.689 81.3999 194.954 81.3999 197.748 cv
81.3999 200.541 79.1353 202.806 76.3418 202.806 cv
73.5483 202.806 71.2837 200.541 71.2837 197.748 cv
71.2837 194.954 73.5483 192.689 76.3418 192.689 cv
cp
f
115.592 192.689 mo
118.385 192.689 120.649 194.954 120.649 197.748 cv
120.649 200.541 118.385 202.806 115.592 202.806 cv
112.798 202.806 110.534 200.541 110.534 197.748 cv
110.534 194.954 112.798 192.689 115.592 192.689 cv
cp
f
125.708 194.004 mo
85.2437 194.004 li
84.5356 194.004 83.9287 193.397 83.9287 192.689 cv
83.9287 191.981 84.5356 191.375 85.2437 191.375 cv
124.393 191.375 li
124.393 163.657 li
86.458 163.657 li
86.458 168.715 li
86.458 169.423 85.8506 170.03 85.1426 170.03 cv
84.4346 170.03 83.9287 169.322 83.9287 168.715 cv
83.9287 162.342 li
83.9287 161.634 84.5356 161.027 85.2437 161.027 cv
125.708 161.027 li
126.416 161.027 127.022 161.634 127.022 162.342 cv
127.022 192.689 li
126.921 193.397 126.314 194.004 125.708 194.004 cv
cp
.0470588 .568627 .87451 rgb
f
125.708 186.417 mo
85.2437 186.417 li
84.5356 186.417 83.9287 185.811 83.9287 185.103 cv
83.9287 184.395 84.5356 183.788 85.2437 183.788 cv
125.708 183.788 li
126.416 183.788 127.022 184.395 127.022 185.103 cv
127.022 185.811 126.314 186.417 125.708 186.417 cv
cp
f
90.3018 180.044 mo
89.5938 180.044 88.9868 179.438 88.9868 178.729 cv
88.9868 168.614 li
88.9868 167.906 89.5938 167.299 90.3018 167.299 cv
91.0098 167.299 91.6167 167.906 91.6167 168.614 cv
91.6167 178.729 li
91.5156 179.438 90.9087 180.044 90.3018 180.044 cv
cp
f
97.8887 180.044 mo
97.1807 180.044 96.5737 179.438 96.5737 178.729 cv
96.5737 168.614 li
96.5737 167.906 97.1807 167.299 97.8887 167.299 cv
98.5967 167.299 99.2036 167.906 99.2036 168.614 cv
99.2036 178.729 li
99.1025 179.438 98.4956 180.044 97.8887 180.044 cv
cp
f
105.476 180.044 mo
104.768 180.044 104.161 179.438 104.161 178.729 cv
104.161 168.614 li
104.161 167.906 104.768 167.299 105.476 167.299 cv
106.184 167.299 106.791 167.906 106.791 168.614 cv
106.791 178.729 li
106.689 179.438 106.083 180.044 105.476 180.044 cv
cp
f
113.063 180.044 mo
112.354 180.044 111.748 179.438 111.748 178.729 cv
111.748 168.614 li
111.748 167.906 112.354 167.299 113.063 167.299 cv
113.771 167.299 114.377 167.906 114.377 168.614 cv
114.377 178.729 li
114.276 179.438 113.669 180.044 113.063 180.044 cv
cp
f
120.649 180.044 mo
119.941 180.044 119.334 179.438 119.334 178.729 cv
119.334 168.614 li
119.334 167.906 119.941 167.299 120.649 167.299 cv
121.357 167.299 121.964 167.906 121.964 168.614 cv
121.964 178.729 li
121.863 179.438 121.256 180.044 120.649 180.044 cv
cp
f
115.592 194.004 mo
113.467 194.004 111.748 195.724 111.748 197.849 cv
111.748 199.973 113.467 201.693 115.592 201.693 cv
117.716 201.693 119.436 199.973 119.436 197.849 cv
119.436 195.724 117.615 194.004 115.592 194.004 cv
cp
115.592 204.121 mo
112.152 204.121 109.219 201.288 109.219 197.748 cv
109.219 194.207 112.051 191.375 115.592 191.375 cv
119.132 191.375 121.964 194.207 121.964 197.748 cv
121.964 201.288 119.031 204.121 115.592 204.121 cv
cp
f
115.592 200.276 mo
114.175 200.276 113.063 199.164 113.063 197.748 cv
113.063 196.331 114.175 195.218 115.592 195.218 cv
117.008 195.218 118.121 196.331 118.121 197.748 cv
118.121 199.164 116.907 200.276 115.592 200.276 cv
cp
f
76.3418 200.276 mo
74.9258 200.276 73.813 199.164 73.813 197.748 cv
73.813 196.331 74.9258 195.218 76.3418 195.218 cv
77.7583 195.218 78.8711 196.331 78.8711 197.748 cv
78.8711 199.164 77.7583 200.276 76.3418 200.276 cv
cp
f
76.3418 194.004 mo
74.2173 194.004 72.4976 195.724 72.4976 197.849 cv
72.4976 199.973 74.2178 201.693 76.3418 201.693 cv
78.4663 201.693 80.186 199.973 80.186 197.849 cv
80.186 195.724 78.4663 194.004 76.3418 194.004 cv
cp
76.3418 204.121 mo
72.9023 204.121 69.9688 201.288 69.9688 197.748 cv
69.9688 194.207 72.8013 191.375 76.3418 191.375 cv
79.8823 191.375 82.7148 194.207 82.7148 197.748 cv
82.7148 201.288 79.7813 204.121 76.3418 204.121 cv
cp
f
68.7549 191.476 mo
83.9287 191.476 li
83.9287 169.929 li
79.3765 169.929 li
79.2754 169.929 79.0732 169.929 78.9722 169.929 cv
73.9141 170.131 69.6655 173.874 68.9575 178.932 cv
68.7549 179.438 68.7549 180.044 68.7549 180.55 cv
68.7549 191.476 li
cp
85.2437 194.004 mo
67.541 194.004 li
66.833 194.004 66.2261 193.397 66.2261 192.689 cv
66.2261 180.55 li
66.2261 179.842 66.3271 179.235 66.3271 178.527 cv
67.2378 172.356 72.4976 167.602 78.7695 167.4 cv
78.9722 167.4 79.1743 167.4 79.3765 167.4 cv
85.2437 167.4 li
85.9521 167.4 86.5591 168.007 86.5591 168.715 cv
86.5591 192.791 li
86.458 193.397 85.8506 194.004 85.2437 194.004 cv
cp
f
78.8711 180.044 mo
68.7549 180.044 li
68.0469 180.044 67.4399 179.438 67.4399 178.729 cv
67.4399 178.021 68.0469 177.415 68.7549 177.415 cv
77.6572 177.415 li
77.6572 168.614 li
77.6572 167.906 78.2637 167.299 78.9722 167.299 cv
79.6802 167.299 80.2871 167.906 80.2871 168.513 cv
80.2871 178.628 li
80.186 179.438 79.5791 180.044 78.8711 180.044 cv
cp
f
125.708 204.121 mo
67.541 204.121 li
66.833 204.121 66.2261 203.514 66.2261 202.806 cv
66.2261 202.097 66.833 201.49 67.541 201.49 cv
125.708 201.49 li
126.416 201.49 127.022 202.097 127.022 202.806 cv
126.921 203.514 126.314 204.121 125.708 204.121 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Blue_8-Template_227250351997.eps)
%%CreationDate: 12/9/2022 9:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7<+3o5/.X;MF3*g1COHpa1Tm=EXrBSnFC>8.65ZDZjL-e=/Jmen03MIfY>B3a0H/q.e\kItLs`b!-3
%5Ph.QDh%QEbHJYUp!^DMpFkr`SrS!goA8e=Q[bf;5QC)2roh+GouktEh);>.]alqOpZYdnYEEDtSG;I<Wup32roX*mIeWQdlgMQ7
%Gl.0gGMiAYmbp)X^Ua6"QbSj$]Y+-V?@VqHgOHb\qXr$5s%CX_nn7?J(LMUhqSh35DdImBfC'4Wb83;:DnhLBU]^Oao's\k]b/Yq
%?@W!ggmdqqk(!$H5CIjlUe#e/m-fH"qU])&p\h^jhgb=mS,`$!B_pf9\p"%QfAF<l5=fG%\4^l?9`B;2m.ETWr8Hu1opU*:Q2L7N
%5JBK$s7u)d^4kW0T%2phM8s%[r^nsLIf)=es6XEZs+Psc]5h!G3e.+[cZ"lF%Jk'GS,>;$$0fh@+Scmn&o[8X?GH=0l^-MDjql8/
%\=]VQr>bhclfaBUI[YWnrTJOKpHIkJPCLXRYeTXfr;*&#HMoM3\GNJ5?[hhISUJ[/n%ShP=9">/ZZ3)D;X3)^rB@,>mI.gfiTo+a
%rq;hb^6c=,='YSbro3=3YJ6C$h>P"]qB`oGl!a+3]uAmAI.usYhoeQ=qt1Kp*5B"Qa'jJpb9,U=q9.[.`o,$`Oh^bdof%Blp:p-X
%IpQa7_)n-HApG-i0"!1tp*e0MSiepGDgZ!Z*ds_0^W%,c?@OO/o<7#!p$8fqq8LZY5BOW8,4EA1#DV]>^AI3=4aKW4S,.X0I/!7)
%s-Nb8HN8=3hgb\&)h1:*J+<"EVg37:s2D0\(XKklo&8sTI%]rto;TraDe*m9rV"k:fDU>OP:h=Zet.eO0E1OESFG&fkkObqr_ibS
%^\I,uIulnol+=DhI/@R6r8ZPX5Ps,t0AlcHlb!2jqUP=YhoR8Go'W^\iIB"25JI"4kNLaZ]R0HHqN0U^k5OIDhu<07kYRlBh<R0$
%X.7A*o"Y3\s8A>VAHIcBfc@$`q)A?OqWkWJSiRA'bAY,-qsQ2qIJYais7Ots^NoYCNdll!s88pIQG:(s=13J5ZB+9OL=*L$P'@Vo
%gg&jJ1cYHuUFu61qgT7Gqtcd8^PgtAkKV8Pn70'-eSj=B_qVB0qX.("Ga?:_5P"6VJ,Sf)^\UE<oA'r7rR9T[]RB\MIM(;Lrj4o\
%]C5E_IlA1#`p^Nir:/Z_k795\rq`[&^O,eD5CN4iIJpqDmr>$3SGQ0YkS<"OqlY2B;dA\Z)?6;2j+HRkQX>U?qnTT<X_iO[0/((i
%ohV;gro)\VG@/&_*HMgbpE.0H7[E&G?iBKEpTO>cHMci/(iso9qPT\;6B%3`:+^\)m0d&>c3qG6J,\2hL3!%\RraKPIJ<<UY@R%r
%`SJl>p7#u,^6)FSf-ZZGooQ5e?S8Bd]6jD9kF__OkF__AT7;%B^O4P+*F_MY:QC4j77sPTQ:>'BBmN=ro8u\K\`]6Mk%FL83D(a&
%FBR@jQA>%D*];JO>93CYkF^;&oiZ_"Ng<mdXc9dCe+Tjb4n[TGDgh9.TCdp<X?Z/,`\Go_UQ.8/(h8OQj6:e*cc5R%bV\o*X(%At
%j_/_Z3L:^]k0s,[T?ZQj`I+qNQ'U4Z.]]_lUT]5\CTSt)4I+qmNb<ApQfH'JT</pq`=mOL-V9=L8)[<j1`i4.i%aV$EVP#Zp%\G@
%q7dG`4L=)Dj`ob)e)PJEpE-#Wp,"upb'T3GJYQK]l1$7f+*EMQ+4B2)r\je!L\1B3Xk1T5dc3j*qtT1^4as?Ks04FR&tMogX7Xag
%cU=rV.An)Qj_9%,?ANL@U0UqD152@]L\s9L-qX&(2%:cK70`QDdkXAa9S]3:/Q6#`e>/f%RGOf7r?jA)+54'pSGL5_Nq`j-;X6F[
%^%:ahB<$;Hq`sn?cotr5C7rp>EkE5BW/71*8n]F5NnVSHOm"26PgE%K>Vf59*RmlbTi=O!/Hn<!a0\56P9*HKq!3?aj-^q6j*9Mf
%FkRFrm;e#Cb,;#IkGTI^g7s;S;0qRN4N9l5F!&ijr&p,6gCNQ=GI7-nO,r`!U]6N!5Oj7's60!^BU#Eh;4^^YW227\J3TF'P/:CJ
%6@7gJfINBdAB4m[7942+/`h]MPAGEc'RfNpg>nnjWRN<UXA@OXC6K;,jL8h;f.!_"VJ2<n^Jh2C?5X%.R!*aqd4EUhh!13-?_CiM
%7E_X$&PXJgASW4aD\(I#Sp>K>Sj,97D:FTWBUoZJTDX9#7K^c"pc+9*]C]#Adc59AlbDHSm98scFo7rRJ#aVD)W_Y3pKMu<G%;YJ
%8#=8VWQipZH:"1"<mm+@[AIiBVVRP3,5>Wn9Z(GhE3P`WFkf@::"_Y8Y*oiDP?UfAR>GAdlY1Cf4G`t.,4)3Wq@48TL,eh]1[;T*
%Np*_W.M4WCcfBVB91+">4U3Ptkd`:mD@b67nD+T>[77>/#Lq$$&(+d^]2Vk2Q=:)n;=m*'6I[li;-[W+SG-se$HtW;n@kKn[j>Mc
%51fM0cCWM<)nPl!\(9s25I#n3hm<%scej47*5D.X&,.5soMIj8O<-Wdh*_4p6[J[o[f;J9FH,kN`J\@^T#tM%?F1O17=+smq(qj=
%9.!#i.@?^?GkOgcaHB!)5HE-$ZfC#`_m>,r1<cZg;]j.LHMTrtbCbbU7Gk\7%prkc*`&BNBRVE8d1gB,ak/8PU)pW25*J"t6tXW,
%\^P*.04G/+@N.Fr=nYfGLF!_SO;V/3-6eJ5jrp&2F.&k#`?&/;/Vd$e-FQMYRjF%]/=>TU^E5GaT?)t`1@r+k!)X]0$*n5tUWEUq
%4nPh4e\eBX7&DUaq@F*fs!flu(<r#r!?ED6RQRka2hWJ2Go+[FZ+:.NV,jVUfp+&]-l/4!4fHCFY7]J]F;PL56(G;9$WM+2_$hA]
%;nQdP2b!bi35jB@4K*Gp$QdW>4L;r'QA8UJe[S1.j.L,\q.KW_*_/:4olQGAEVj+sL\-E&4WY^0`<VFd^\)guX2hQ-4ruoMO<-Wd
%h$:f"ml@2aO)Fh:WQ.5:PWriG5A69GBTu<Eiu^,#+#M+^1s-msb,=Qf)Pu<hd2,U9IK%o>qL?WehiIfthi%8Yj>msY=hWEE$NAF`
%'LFQEC]$[`g77t%s2]EO5gC;h!jVF;Vs<a8GB0UsWg12^mLR]^EJYX>\*W?Caa\N2hY5ObV>9N9r1"pY[+t-@EF88TQZI'Ek3"Qd
%kfsVd^gE]tgUI@+%X^C1+FaAeOF\c--Tls]%smU;a#-?Wn@K0;X\Ouu59>9g,C7eZd.P02QFV:*Ab)FaG?HAq./a#@OO[6p:K]D`
%M<(Gj(,]J`iu#8G.0A`ONFl&'ae5"j!hWY8kZJnODi]CW4o#6#B[C[DNK;`uM6D"!C6pRpD;L&]GiI?`D'NtCb.E-I(OD1Hnj74A
%,PW]pCr^tcZcNl:\KXg,jV]!QE@bRTiI8X%=!^oD<*_:P"5m1dcV[mOr3W?,+?<V27t/cKhP\:U8UjPDdT8L1HBt_POO?=TOTufu
%8A,og=ACB@46OQ(V]5I1:U[>'kU6/4n)MHha>2YR+[mrQf9:fnUm<CU4TXsQ>?-q_"<VNIm(:-)qB_OG5c6U)H,-28;i5OdmH;ZB
%IZ>^=2%f=c8V"\9s&0=&(P_h=M!NEPc=TO12\Z#o:$6C`1X'Etb0U)^cT/$L]Gf%iC3X*Z9cEe.Y`pI;e@KfR#P/m+"9ic?!p"=(
%]nf?C4bMXudJ9b4AX_n1E`l@2[+oN!,s,P_CV'/2l\+oN1HJ>Cr3kg$0h!k^:>tF7RW,=sFVDL_go>L(VnMh>frrE]]s-S#?8J`t
%cC8'3Y._%%=%n'C3d'u+kV-VrOY?e!0$:dA=&Ig%*5s5u<TX(4>jjt]!9^RW05q<X%Mj$di<1bND,!Kj(l%&F4d44#A3;afPt>4C
%EU`%oVMnW9No\eeQ7=,l-kTj?FBN7nCg"pI),k.&--[-A1utp5&CgK6!.fb6!Mn!j;eH(;/:rp(%"8>p5fTo$%t3io>b`ol+Mfi=
%$Q(;-;uRleJ6*a^&>b=pK2:>(-I7dp1Z7d3>7@04BZ5"CDlj"A4D`[$#BfF9[XE\7h6><@V"FVYdN6^r0&WQ+\e#:UTcbR&B)<W6
%Ut'DVq?E)H[l=IM2Ip;b1EHX+:G=H83s4QG$QRJ+b"O14@/Xc"<Y2'aji]DNgmB(1?rFKg&WHANF/F=8'>-m$,)'6gVHlm0,,pH1
%B\XU15Wen]i(jK)2!ji5'kH.'+UmTt,=q#I"$)S(S&V*q7[SqhR:crK4CR_j0Z6j,6:hTB4D3%#ko]?]8)E(@OR=kG1@;\q/D>=H
%39l/bk"KLYhF2:X1>_U5)L?2UQW3k(Gl2Z3WbL5R+aR"S[%>^!FY%H,hQ6XMUnRLf\El*7p\][BomFMp.d)0VA:9pBrM-,14l'U^
%rhPYkn'g.R+V%MiUP_t.o<`V(`QrPrWR&5q9:bPIa!2DZ;tTcF>_M"@Sq@cL=u3+R.4;=9,\N1T7<`P'Y?pMMR.n#_EgLRT(W@j'
%8GujaEp!P^4jj<*]77Zsrh)KgN:lXgUVHh)q=jn'l+`$=GkW"uJ,_`n].ZD3=hd?,^QNegpBK&9f=UqOMqILacd,n0=*X*4`@YHp
%acgr+5Ps^\MG.Bkqp!qM1lCrR:Z&nb)E#G+'#)^:ShH\LI.b88IBnn,MdNb4o"X+ArseuUT)1bNTY3J:L]/eE&@m\iMQ_IK8b<pU
%CR(=+C/c(TnftD='j+81Ji.,Lh#6&%mHaTq91nqKl2@cA-91'SI8TR*=Ve``[dLc/D0KG?UJeMU[371GaU=KaIcb\&g3jT6H2!3Z
%c#tbO=M3`H;[DR2EaM70hUQa%b,UAmh^?gMGI?4ao#uR>\j'_J]dr[*_=!(b0@0N]`='siLAb<?/rtA,k/kmfotCja4*TmC\R(Wg
%*2:ePf%YeL[(5U^4@qQ5SL7=_7cR7Xr"R\Eqma]#Iokb%0ZS2enpT8C+ID>Rf4ENka`:J[4cm-s=l)qXIGWLr?c;lQM\`.G$MLgS
%]f;THDE[`KR"C&.i5YM??dl$!WQDW7DdfR:qisdg_^3`9]I2rB3h*O7rbgiS65Qru`*'M5Mu.e2:G(ObQ[(6Q.c"*MPHq3F5jj8I
%c&@624&K=4a+m7(*i0qPinI!/o',\%j`cDJ_1uCsi<gob]N0;aITCR.kos1DNA&&II^e&!j_"J'Q#nZDA2n^W]qThZS3N2Gl<`TL
%a\jIDWa&"SmW(>``-.^\^Eg#ODKMt!PHRkbhMUpC]b>rj=7N/`UFlX$NBP!deo^Ngj`so;H)N"k?rm*]o!r9LE&c&1Pf;FlSD9NG
%?[;<")Co,_agdj'h3?BX%'LiWO5kRt*IrI-Htb;o1RG6fDkZ)0b15SHO&ki-UKPXdr_[>(1]@06!?doLM=]jRQ!oF"*J_qWg*L5;
%c]S#ENqdH98T%:>e(mRW;O%d-HSL(Y/4R6DALt$FB%E$%4?d(VblrIPigt<LJ!T<^k2H$oQ\7:A?YC/$">\3X>btGUR@"I>RcSsU
%5Wis^*28OaI*iMX#F&)PA?tQ6<Nj%sEe.NBc?!^6cXIgLm>fVCQ(`0.SdFaG^TD232]a!q4PtV[s7Eeq^OQ--X<iAih%tS2;ASJO
%\)72IMmr`-[Dg9Ts3$0nq;pp\?bcO<op9&^\6X4mQm)Is^OKVlP0q_S!KD/Vk#no[AFp@W:KVm1=cM4^/!"pKZ5ED[;lA8=9bp]%
%VJ7?%94@IT?D5G6Pf6b3?([jKjfN;+jI4$0f/K!`nRP1%#jHUi<tU8!)bmpT_6Oi&SkB`a-[9+?!\\>89&1be+F@EBM4Rmfn_Xde
%5\n8IlFhm>%-tIMFK)2^:4RTS$*C`**ke%5qEXsYGqC.iaRXdKo=VV+`I`YI9;4>F\37"H&f)hi55*Hs6e83mG8n3;,)]QF&d#\r
%IcHZMXd^Z?jo$/[MrS9eBia[aMH52PdEg(4h+ifr6!28a/"@V7I`nH+e:o_td-)T07V[?,Lb=-ERPk;TXLNYk9qLtgc)+)JF'BD&
%,X,e!'n(5GT>aC4lPO,6jptUcAGs:q+3CqU+j+'fKfcFhctZ.Z4]]X(AOW2r@`hq_Z<Z3;=Z+,'Z1G21aAX]g+L4i!E@mCYCPg.Y
%cDLLT<KY3(P!s#clmnGo8"7*\LhaNEY`+<!j2A7Y+HZ:q9GPr+8#^s/8?4l'SLg"]s6t&WMU`kCn#S4ADI:QH[0UgXMm?U"*HD[/
%Y#7A?eo5oi<XZq_L/A^tR.0\6pT&PlA*2T<li[$:],):9`U#FJb1@\DQUO+@n$r(>2&FnjG#,`<hfX$_o5M160ASeep(M,S"?TT6
%>$*Cd3nX?>Bp3H^hc_)Z5"unVne!5R20@*)YoEho@U`unO>o+]f@e-Ug)[`>Y%Qq.FPJ)nI^_BO"2)`hf[hp1S`dHsc2>SVURUF.
%]gd)%oJM)LBq/`#1`4RV6_Za:<PnFEMV[AUM><T.m>E^C4&"Ylb9Ril,bGINH==\C!0M7+Pq4Dr@J#I0I@i7AA6SUm-;9k!`Ut2P
%I3\5(?oiQ`R8-`OV>/bP!c`q>.tL:2!pX&j6\:k$c!Tj#Z)Qm$$6n1aQ3-PgblQ*5WZq-i`n92ne^QqBOt8u3`i1*s)]N0@/lE)7
%#auQ<=OM7B0iGJK:R+@o9c4AOU"ndD[;q8&@s!li,I15=;dE)i;Et70,D;,.\_If[%Is.6SPAs_oMh68KnEQ0eIENi54X-$=IE]A
%*XVa;b?*OW:9Q)gnuY=SE]DM'P94hb9Pc[Bh%+iOa#Yf[*!Z20ks.("/4HN3,lT+(_l,?FP:Ys.MA%+iH611@Pl.OemSOtbJgE`a
%1jN`>/?D5-i-)Ik?J=A&E6'A2C:Ii^`@s12iB&mO:aJC:T1#ZR5]fY.YZ.\,VhS@26;OMn6=AEP1IE_^UQfkEl:Xh)0(\:K;3TY3
%EHfea*[!MUIFA'L`;eB>KFr[?CmI:LoP@>X/f&q@D#"/G)%<QO,X]7)q_TJ9A=MuSe="OBKTEICC(`V9gh5%.kD$8l=")YU=\,\s
%%<:00F;BpVqlH^i+;9P!8/u5&^i-ARH->\u'Dr*JmQ/nU:Z?C/$qhCiR];akdB$.B_U23dm!>j_n>We9G_*CF*G'St\=O"CgA>_U
%1V[qukk=h$LUHlOJmIk6&!:4N>>TfgjZKsT#GW"ON#p_G<=Cj,j0#X==LYS6Y)$qo$R-M+@p:X0O/(9AC^[p.(jmCZJhlH\4LULl
%1D(XJM/?+^67I4s9-4*S=Q5-R6'1\4BIi2EAtXjdTRXp'8.jRMC(rnp)VUot(&KdR>?Fqee^XqB7>k)X$VIhX\aMXlZ(`#/:)_kZ
%=f0*J7^aEY;ma&)[_d:YfG:@?/9>*,>L:Wsbd:ka1:("N(sbNQQt`kG>U*H.+kqSBB7VX3$SmgMa0ju@WJjNBi`].m"h7#0CIoVE
%o]8q%dI$M@`\j\@p,_d_*n+:LZq#eVAGs:D^'(gA)V7Lld)$0D($b<?\b\I09@nDhOpc?"Gs!V!fG.>!L/02NQp^W]cV!\d`su`j
%V*/Fo&^F!)l]Ai6Z`p7Q2"kmS>Zk*H\SI7=4dp&F(HEA!"('4uSeY.a6t'cQ-?cbMW`!HgW*SCc=Oo7o6>r)"5=NfBHZ?kJ^9j^P
%L5LFB:_d'D`3\HpFu+U`n*'K(Y3K99W-XG9D5i5_TJqcG)'5[gMcH:c[BAI>kZjbu:<a9^nF"=#kO?oc=qk^qA9"Vt]lQ.`mODE9
%D+?fL:\XmgB\&4M,_uNCPD[KaKl8SQRHf_H7^bZ"Hl60c1.fLt1f\<4eqT5`1LgDr*Ct4lM\h!ZkI"b2;m,$+6<9IE@p##uEMY"^
%-;k<4ZZ)e!_N?q+.0Pq^J@Rmf/&_FB3!=;+qSNJPkll6f!)h%)UZ4OLknBo#k]5%36&[etPJA5YMYk9dmHrmB-B"N]I]&5/&`_62
%.i&OJU+?Y[`M,K6.B".mAr7gG94C/9p6N/*hB:5mV4S]=c"NV.F,=6]U?X'HQ;rmhi0*Ul``6;RVu#dL_u4-&fqW3Y#n<`P8&/a)
%IFXfD+FG7\qT&c5@EF$3GTm]2DJMBjHBnl%'j`F_SEd)h,\JAs%bg9b3[>c!B;.L+85le_)T/]/Y/<9JJac.IW/?FBq*92PI:-$"
%64c2>[hfoJXCA(-S#6Cog*M^K8.(6N+X<\fSJ=Ps6,nD%:.tH"eJ!j]m(B"8%CnT6VRJk4VRj5J'/lH"PCmtrjC7<=@*rf?2*FM%
%'qE46+%/`(b-`H[QtWo&/+Nfd4a=IpOW]>U.]ZW7AI'emMOP,<748P95*b::_.5*K&m7Q@2-PmuU881doU5jP4<]:V.q?AAV@[\9
%W1b.n<Cj$%iAj&&R#_:^FmW_5W)tdDI//Y9@:hQ5VO]@#WHdRH(F$l2a-#NmdGZ(Umt;k$V=]*YALK(&(j[6"MO\,#E&M9!NML!;
%g.Y0F]$<s(%b#4I&2>T%Wh)/&j'(QHh`[R0+3kk#$0U!2)tB0C4Kk;;7+?mN'`#D'>k<`KL6``?FVYV%l8=>&m4]Kcf[^o[A]C5"
%WZepM&Pikr&YcVdB73Q&1!;Xoo(Hs!M$Wor-q;W;-Wu[(g:9?_>]Yb6RB9DcSjHnQ]OhiI\Jso&h%q'%PY[W&_)7dnS&NWB:Ua-q
%+2e:T-#)9o'uVGIQt-)jkD6m2",b(m5c>6C^:[tNbD_$O+rZW-E+Usb."c\$)DRu].q1Z98T]d2`AI#H'(a/$Ag;Le,R`iU5io?V
%V.jZr2(7ZJ<Epk4<Rrd/<DG[ai^F.*@d/42W/oc8!f%4n\osSZn<5irb(RJ?-:_$[,q]9jKHOgj&p&A0AsK-`)N&^,E$]^8>B66u
%d2'oXk_^IQ<DaPme^IN(o#a0Hmr#W+#Dg)84mDF>M`s_X)X/RYM/1NXd:N:3T!_%RiBY7/dah!K-q#G#o%&b-o2O%,6a,^X$V>'q
%5o/JFK?R9G\[`(?e9+<bWU&Be;pq)?U7<N@S4;0Ij0Q18Z5O,.dHkp[?djf%f,80Xn=OW:`5kj;^,+EHd!AkU"P53uDW_>kh:ItF
%7B`+q0$"G<6t\3^);OhA]&9%$5.-:RLq[c!oI%gp6_fLlQoAnrLtrN"^neT9(ab4*>hi/S(\&Md\=rECdM,.7DC>Q,$sd2pd"j*]
%)]E-NG;'UQ+$G[c)[bd!3'"#Fe5[CDmY1N+M\GBmn3IXRn&S4XDolg,=oH>H74<"Pgg2grpZG<8j#?h+864>=ajg^R@eUfZ'uDX4
%h\,tQV2ZEAP[UIfo;Q/e)LpP5L#h5'T#BbMm`sUsgfM0KU&4P,_g&KNm.ORHS/qW,Jbn(/K7fONo%.et`5DMP>!9pZeMG$`4(.f9
%,bjsj\t0hW%R=3;G8:h'C1n@r08j"%B<l?1T'N;T\g1b`Q>;J7nHdOqmBceFWUbucbWN55)0?kJ)%`-F%>(Xd)BH@Be397Y&G(!@
%hiGVG"99o%i%$QdQpX6b5:9I6C9P^Z(,%3PMm7<RLM!255TCXZ<35$s"X:#M1D)ek"pQVaIJNA)GGGV.S<Xh2,YqY^=6O5ZWFPVD
%/2;e(Gf0*lI%2FO;"/")0W9bf']#Pf=`oB*f$HB'N%jcfh167n;3mQeAA7&^&)*+M//>*7[QcMK0]Q'@/d[COnT8d>q%-Z(-Bk;I
%;emj:[P)mJj%qtqgiMg>UlKJI;i,phOB"^L&0Z?foYbo)$uqLE*d2%JU@QU,IaP12#9&onW88#=a3J2_MNbkJF]?D6Dm>'H0S1-n
%Q<,k=3))>6i<:R5nPU'OFD<4^BU\>D=\.nZG%uhk_1[#F=kD6R<V'q44l'F$N(8]LDP-SLZm9^6XMZbfQ=Pf&(80hrP<fA#@cF.[
%d-ct].2e)Kfb+$K&>s8/K%cKFT*VWbktLUU[ljt[FjR%;3N4_CpM&R@\0IU$iAau&1[3QJ%EEMUjO.g_S164&?*)+e,DN5J(F%m=
%c/+Q'>hW6>(6@I@.arjfUSEVnF"/RnF'`\M@:1$B*;+cmhllrF000Vj<0r9d(`0GH/[:<YC7,nAoZl%@/V@NlrPB;r7pYh*J18la
%F*JRVk`ZW\ja]S\e6nN2VJ98iKl#3V9"*g#3$e[-EN1LUOmX+L4L2YahE7acgsaIp\!JhU$53JtC.A5e];/93N'G+GecBd$heKYl
%HDh5X`\>^s>TXLSa%?R='NdO]'#Sp3DT&g\c)Q>\?Di7[MVoit&H)ecZ0<EMHpG71L-nnVVp7V,c9]?"DQ(';GGi^tO[>2H^8ack
%e@<2*(lo6!h*1-R="(tR=ZK.U/no6A`(OU?!9Go,LIajD\toKM8mm]O%*"DDX)r))F#^X%B-FO\`i1:+(1W9JOS2,uF^NZFG,jHV
%DA\EGS_ZKqkrm*8=q0f(plttr^:B-+O:Pq9%ZeroUN5%X`--eV'Z!(3_epi;,,4S=YE8NJmF2]bA7Ej53s//eUjYu7D$n4"c!0Rj
%nr=bSk'dJi!)Ffq!.uqr2a3'K/80_fMD;,f&6e9'dcO]PQC(iB!!U2c(DG08>P$-8'"b07)WGQ[iU.+W$D^/b<DE&,DqJq\)TF"(
%B9/\XoH">PeQFV3iWjbK0>n.a_3TkN4>7CZ%arE#5.V^aD94<;A-cI#2$Co$=j?.\,_".F.84OYP22P)<^9=P787/=%(eH:[3*OQ
%HM!Rh=j/#HhH3XBTt>p7Z)[KPg.&ngZ0Dd$/Vh.eqGCk##94![O$Q\dNe@XP]ckT9;"uT=6X)A6Y5r;NCfOS:NePLmdql+<iR+s<
%81,8lSjA^slUJe@0ESm6i:,+'A_k5^nT;]_"We]c3P3f.)g]hfAY=&@K3m@K&eC>-W$c-NF"Zjqg]gM:,d65+@pM&O1s#Qn1RIl:
%_lY]ae@-<DagIMNh%t3*=HRoR]4!ghpN?A/+-$>K&puf_FZD^k>HCYc5b_bIa^A9kYoXO9N#8l!eBl#"]<;du2=8U!bJN-C4-%%0
%`MN;ta#SU^mk,Nu"%6e2:O5o_#U:QkM:d@B&]^/i=Nmsl,SXaGM)I3AQn/>c**u=&HmM5^H.:\H%Ei2Le`\J.Ia(\m.RnLj+Lg/E
%``HI/X1H6n6G9pC(:PAk4aPDG0Er-iCeQD^cS#G(2!,X_oSN[nT2q>MZ]Y>K9rBI?Y8L^h&dfh?#%/[XOn5^o#`4s==uNV>GsMGs
%G)OSVA>P1hAR_ZD=Op>15eBtN)lk!0QJH/!'Fu>\Y9&PP"Q2Yo$Jgl*5Xq7^@^1QGbd<9C%fja?gd)VbKZ#Dh.j!=P]d=j4K26<?
%LH!*613'lQEnY:61:'hC4a?>o+@pq<YLa7,8"p#FY8omnUQ"&Qm/UCTP;D7,"+Ugl(D=+XoO1?E]6XJ5DeCDs#6:T.E6!kAn0+`T
%UNuq+%>\TN['K6'\G:QEap5/FnLbjnho?mSa493k-Bt:<\Ija4#8W="l1<<SWIhnh0jk:`hp&5Ti7([rm#lO(LtuR"^46sAkGj5t
%fVs=<]4'KEFE[PS-a1?Pog$":'Et@oq%%Jp"^jAFRrab"F61U],@6+@jmEO(45inR<Kl(7LA=%k[(:cdB-Ffl28jK]d9/TKmB`D@
%K*1HpPX^X7qA,!4,M^>EqI0WOgkJu#R/W2#dN\C72tZZkh:\+H<F>P51i]ggc0jr&a4jZQM(+"c]kA7Di13#Wf&'mpJ!+Pu.nIt/
%#m)=fo`Ti.Mh6O27P6.t![AL-"bDeoeD1ia(I\LYOc-5k^rSrI_%e12FTm>YMo((]aE_@5'd=Hj"TaaDidu^%75"':Oc/4MJB10-
%5sXLSRgVV:P)8]G;.L4T\Yq8C,NPTC+:rS*cG2/T;.spba@2dg@-"uI+<Y]%BlHAZ7B(h?jLj%dn8VcOE5fkC\O"$k]\XdXEF*X(
%"iko16"&`cjrg=:<ci9a`^SED!9:`Y+E2<tGAtC;7GU8fihGpMVr>>]i/3Hag4Opp7I`[ZihH;-$B'i5K7Lp0rB]B$*m`+*jD>@%
%J&TBt`!0c\]RR`QU+YA]Mi7F_h9\e'G%Y$"7];lr#%`_<!q$h*^#J&2p.c(W&\PG?c[&k=R-V?Ci_ErMZT7m>nSV2KE.Pts.D]n6
%`<N6#6?:)ES\t_EgO0srD-uiBMi/O4<cRHQdHr`=aD9UW:B^M^H$Fig`/%J'2:*7abs3#&"aak@,W1F4(jm@V%7Po7Ra.IX`3-\H
%'.T;n#%`;Lb\Vs]<R4^`l1VdKIK]-+dBfDkacH#LDu$s-.[I)sTE/Wnk!klJD@(ld!Ve(WgelR/VKi`9M"m?U((HIYG]mF;Z&??e
%=J:S0Q3s6FCG5nFq5PdH;uQ-Y>s(CEFo.utGPWPS<obinU&KsPS8QSh0`l*#*!%6*b;k+JF<T@Hm\rk'Q#h\FBZS'0ek_iRM-\Z]
%^5LU:\EMb:8B-5oMQ=>,Y3NL*)u:fGc>K9IUoio=gB9#@k0BG81#B4pm8e#BqZ;_#@Ynl(>@J*FXO#,RL9`'ZC:cP8M-W!)^C\^d
%pnDteYh_EI;h*P9IV[g(oM!i\m8JJ6R<d!M7YasLI7<[)Df3M/I_hFBka'?IRZ&YjT\L$>;O?bGeT3o5"Jqif9=2$efMs09'OkWA
%MnU[aLecQ$6"gA42fEkc.dcHn1!_NFa*7WoW_QhdQG-P)kaNMG+Eg1Hc'9G;^@;1KJ^-K>GaFd"GUT@5g._eT7pfJ0(QGN(M8`=b
%1m#@'7!d*kY\T]gPrm<8F3uZ_+SrZtd[t?;+r#YL\+gMB=nUjB9<54.a?n-OdN.,*W?)n!Z2M*Y'3fIt25=%#,h)2#"a70?rDb<\
%]J>?4r=#ecfiK-U_YL^>i?]q%f@J?ELH?l6Zhi8]<C)cA%&pnJUMIlXA@[tZ&R7.%9Foe[VL"Ria3b=*MQ+mSFqb"iSt5%B$l/!,
%kQmAeXjcr:&/eukX_?iUmN(+IhbQ*Y\LPMFJbR$gesdU5m)*^07i@^E3'Ki5"%5`N>S:5CQVu*<nIekaG8:h'C1oU@%gBY=3h'`<
%m&SDF(!>e7U1$/NFE[P_T?%)EIAaVi0V!;JU9ed@@K^k9cA(4Xo:aPmg?I983@6G<'tM&i:<a9nlCE6AM-n]V$utFih!Mfm1b/*=
%9paM3IW)i,4B?QIqk-0=R1.X"NUnM$mU]%t+Z,9m-;$%n"bEi@AIH^</GD=#90:?[Ej8#>+gGg;;e]\dD$]Thc9QNAk38TeYVY>%
%U7L1kFER2B5Ks1>]]ZNaG*t/fbRUmu:\,St2]@V($;%$q=6Wpucc0g1f"'bU36A-Q(YCV*`5;iD5p39',SKXolfjQbM%?<S[N!6b
%7q]:AqT0L^!1/So*4#Y;buHfq2kjO7OsO%,K?@TSh\%_9Wfo/,6SZs'&p<Ij,^.RkqP[M&*SL%-B-Labe\8%V?MXQbmHoZ%"M:k,
%#Mj=f;qB.jN\\+?R,eB2ZrlgCj1KqcX-f%[o9RE\#1-&(ncfH'5p'Duh@l/)ZYbZq@!JeiM"e^:.5q6FR1s*mjGiU4W@&PJ"5_kM
%QpJCZ);U:(\;p%>i,/[6_-S28DIc;X-o]Lj"MkTREKSP7(sT@;h2O,e)d'RSmbl-0<&[HJF5Nqa%e'RklP$:F&@#7pW-^)^g,(ac
%S&RAHP@mEFU<.3#^+nH#O@uI%/aZ+T:g`MmeI=K77VLRCh([r*foYVlTD_X>F!:l"7<JWQDlL_*6,q"Wl6pK`fU%_<d+ea!M8$E?
%a:1mh`88lWS3b\0C>eF6Ol<Y@p!,PbI9YPZDVR:!oR+Cu"8(V=.es:`%>dH]i?/8>HaYG4Ha)/""C>;S3I$MbX\DihI"Ts=JgMAi
%,,*^E`&IN2UE+bf5h[uu(ZOs./YE>2!O#A;Fc4NtB@3t-fuFO;qq*$-i1hZc35]-:GVur9D#!66I@]b#*)[54XPRlWf9IV8>6o-G
%Cf"?QY,h59!F6XHK7]u(2Sdm/5EOFgSF+@I*3F+SosC3.S2J=:;:5otH;'h!L9ehR3Ff/4;;?($etQJS8n.t)&Y8?<_lMt)%sbn,
%7)f6Qfc48AiTI`9b?0-Kl_0H@Aa21JH:n\L:&67\Tc>BgL&D9ONNl[M8NK[%OOEQ0$dPF-/N*%hm`=nFEOdlaHJarYpMF,!O.L5R
%59b?S[2TDEQ9+5tdIIr%)H@1*(-O6]lU^=MSsDgST=YEG'ft_[#<R9&JVU\W?")3*:G1E]D;@=#[f+j4-.aO6nsbQe6-bj;<%*cZ
%/tdS5r<=p7TNdk_<`mY7?hJkQE'Z*pW?IeF++li!`Qga5\0Z&-:Z@r#52(I#cu#Uhh12<1e6pOGU$2uADCk?@6(ug[5^<M2;/_2b
%.c".o-j41Uns12eH$<edkC($"2L=8H2iAXLNc(J-5<?YSNI7sC>]`LWat,>\'f$C>g)3bk_=[UB'eRS2k&HP.2g_nF^,cB5JF]!E
%O?#?WW,l53N/*F_nj`.#hTP<(I40GtoR/&(^]cC%`=?oV3H(p(SIH^;XOc%:lNT&"r-93+9.*iQf*Q^?JdZTRUlKDQNZ80>f=O9o
%pO0Sshn++*p`Y,*BB;XGHcV1/s'.JeHN)0UG5gYHZW#4VIa;=d,,>n!p$k,E\R>WEW?C:b;_](\s6$[lO<Kd:hd(m$MVeBQpKT>O
%HiA[XmdJIt?+a6`mGQlDdiaB?74F'Kk6>=m!ei5-]3IXV]rW^DWY^h`V?FaY*3?t[%OnJ$OH"lZ'7tlE!G%YLRm_)iQmr@e:F/%?
%_E8\j4KS8`L+<_>@&#VR176r0\sgJRc.js;?>F,tXapFcJ:dktW@SV`+_-mS2.A84_>l7tdUh/o&D\T5dgdRPiY;LA2Z#U%$c,oq
%RY$%o2gm.;U0pOo)OQ,>pX:Q[I6jeiESX@r)$<^8;Md1nL1n(FGC;GR)AY4u?U0^9OsXm@FHN-%W.5S&E#!*f%+!qePFbqB;G#n]
%Bur?C%`XZ,Vm]0nR'CFRAj`s[dBHdPPd4VjqqCuVK$53'!8%OWC%3j/3+/3=8cqQO'q?Y"gI!AcTY1[jW35cgCmU/+Q;gd:EsKW!
%^@<TPW:/P#emR0G:DQ>DD8CcSPSREf:*ICWUnIVO%QdGR>'@Oh1A2m%0WRdF8s!Q8VcJQL'"3Fq(2,"B0aP:LAQNF\'dPe%G-'NU
%4h5C$SMfOD%(._u^5g/!,Q\I>CorkY<e`J$=8r9hUh71Yh0@EZMsTXU!]G!3rQo+N-)d:JTCtP26_U!GfN'<rkS>X8R]:,%e&YXU
%8Ii@SnK"-sdj>\R4mj-E1HVkHOYT4ss4.lOb45a-\2`2V#\bD"JknT?4/bi.#P(b`p.f\G(';P)p*%__i^YTKgFMQk*8i>M83AC4
%MdSZ3o@G$@BWt,qG(MCW_/"g,])^_MZf^IBK0m)>BAY-aOY<AR=aS1#-,`Ibm1-WNr*:OoMrZ8tK(@.j?7:tBi3cc7D,pR&AI6<t
%r#:f%TRbK.OVP&C_H`S+kHG;V1+']CGb:4Pk6`rEb_hso<WYSp,W8E%Uuf!Nd*nuPLtR)F6/3j&#BJ#OLO_PoC/L#M:``fId\sLq
%;%+]\L:9aCj2=@M[+H(7Jj!CJU)jg!_;_c"NSmW/_fF;5i":j]lPG0b0[4V$Uk=3V>!rT2E8ZLilm76)n)QaY]_iYq@crTA>#4<U
%jlc-)?hlXBFe.L:KJ/3Ygm\]iKW@Sk,X18@A#WO=:RC^"!u3*75a/E_&YRI*i["s68O108_>X]hrGY$bYVk0D9:H2TQYOm!*C4X.
%N<GXi8OJJGcqHp(19F@`HW-Zr-sm*5'k.g90X0dkd'S^8AlPm'Aqh4LL)p>dJc.*<0n<A.ClbgLi3m#*r_/t:6k"+:1J"j2bM)WS
%1J4*Yo/q"BLB3YV"kX62C]&b*#q85r]dmM;c5Xk.]Nth&3H)mK5a*YsgZ``$#\tSUZ"Z&fO9`WSN<(2&.eqM$/tQ19Q_lLV-K#\X
%%$gRi6YrtDW;4:nC]L;YdLdWfBsU7[e1*h.-%8H=jCTYg6p-oe.cZ@qeKMZg+J]1gl-=46;E:.?LbM1%`Q$ejIWCj9MBF+2Ka>g,
%#]t.mcM"5VjXKe^XJgHs9AC.BKm4]iSkWOmNYIWk%gK&D6Rm+S==dkK:!ul4^A7&*=[UULU!?#8pLKI+ckp&F=t[hUUSnn:"i,g)
%6Fj?37b(DJ9IM7tJ@km.9q]ha>%k&eR5EH>)]`,>.r#bZSH8f>6)d8q$3Jed->;bE=Fa>mi"?gLW=erYHY\1)?#>.7cui=(/,'8U
%k$0a\4oo3cCs^4$f`i$[/Fr_\(H'J^PZ'0)nH;gtU_R[-Q0o;2Q2t(o5^bSC+`OZRJT=Fb-H5Gl;S/t!Pq[$]c4`[sct6Hcb3`ik
%7`q"(-DHQ*T_Q)r7%noc2>+q%CbfLa:VX046#,/cKje"jOCer,@Cp+;=<PVdQB"s_OD&O9h.:#6(%J#a/_gEq<=%f"_kt9u_.cDY
%l(\^tgN/MP`kjRfgp'2F.W#7;@]?q<g9XLJZsqN@*n*r2<Cg_?$7BU-&T`;ZPGPau(i0*O5Oh$)8]p7(LTN\LTJ@]5BCXRMnn6)"
%!Y2tLf;sH(pD*nP[b6Fr/s$*4h;EX:ab.hAAl3]G>:NAW\j!X'TCCt]I43'h*jE'1P#Anl_ol,L4Q6M?H&!0cdAJAs:rHm6m8cE8
%;cm$dd\*2rJ>pb>O:I">VAA&UcnGb5;KQ#<0n)dLk8aPO@VoT8#6H$Y'dKmS)$qYX3;!#?^En6k?2]gfQ0fG,`S#Au4ME1:``5@A
%),?b2BP+tgfNjBdC-6\L]/5sAY9m1pTi*_9Te$m.(f_2j"p7oI6(ABUDD`\3<^%,Y$8_ldrRu(!,[FC3Q5q91(e=m0X,n+DZ_=as
%Et!b]8HgZF8"nQp`]fH*HF;HSL&`1`nDtqWa((Mc">bT+8PQQ]!p@R*+T2o;%-DlBDX7HW%51K6V3m`CW&8ChFD0h>T]o(P=ef"Q
%%X$Ubl7u.A%78?70IL8:5VSb`1A,gsb!V$s%\2o`RPd_PLp`p]DCFhimhtR,liBq((rl&<nUX8C/H_NOc5*(K2jW9]:3.S8a2`dX
%ctZ$)Po=K8gIALe<meu.*!QO:=loeRj:[/L-:N:amYnHF9'6q\+o1MB=B5Ec`b?*P"YpRMC8su*b0dKS02*Pi2IUGil/8DrRm_:"
%DA,@A\CECbXa5ca)3/EXrX?HQYtnl\*1aL3*ZqWipa19T!4C-,#e(-C%g,L5,UAFgfN%9a;!:u[`B\!#G08eH/460QT]!OKCk.(B
%2Oc.VfgXH0BMMeAEt24QU,h&iWY6Z&_p$]La=VDg$E3j,Pkks>9`K8Jo`RnZ"ZIL#+f^1CYg_Z)d)4N*e\f%=[c!@$mB8#i9'O[u
%aTK=;-\<]V\)WY*Ok=4m.30ni@rA5E>X+tl%A#6(j'f<>`9([O\25X>JTqadB%?Loe<1jeKX27T$'<.AmhTQPL^*<mg$.IiWHDBL
%7;9S[1[_'Q,"FaEc4a3J.HeSd#,!n+019Du'X\Ar^):4Cs'ogYQ\'1"<X%0#j`.b*a21F%pbFGUWLT.3#mGt;3*_aFEL6ra5W?ka
%[k,h"US&kM7QATFrF'Is(.[pY%2`4Kl_bbYfS;"a<bKK*4H[a,>J?jr&*8Xe+(K<@C(!j(28u8fX+YHQ;Of:plWk'n&Yl,5g!V8e
%i\R%%1]])0>#a@4'QMa%*/(Wsn32!Ah:UP]F=O5ZPV''%pbO[N0=4?Bi?d!-F3de%]!1a;Wg.1,U=7mLf$/7@Kq&hq"TDi+Gt29c
%G7\Gr@mcic+<nb;-!_?K?5k/LL"$ut$oL>Deg*<W,Y.4k=HS^2om/):q=PY):X-IZ'e8s*_XJK!a,J[gg[]kP>Z`(0Q6;iG#oA:>
%_BP[L>,G<OK(X0Kc3R+?!EhDiq!:G'<$ftag6GtXWeP4t4pB+W$oL@C9tE[opO0oH.nF1NrkP>-\8cEl::4nKUIDY8=`k3]?r,BR
%n7Gb`O*650KXV?h$RMLcp8DHI`_K6C@]<MX=PQqR,>1a:\FDk;EN/HLgbtF2Z03_##=^&u\RZ0TnN'u7W*1&R#%_]U=]#:!RqZ8)
%W2r0g>%n$E%:Z!529JW;pjO\QdBG4@[9IJT,IViY[M7Ch\.'^*q;YFXM%I-"Z;Pea*MH"J1pt8^K=#U0L`klup.U7iRHKlqB8?#"
%%_&UR5`3tp<G:7dji56U]#-3I,%\h'-B**PM#bPJJ!IV-?XA$%9r#S))^5K8'eN!p9rMX?]Np0rB0MkgPo#fB27?E,#ss5()eC9h
%f;@"@!`Srd=WW?bb?[#ml43s1:cZRM$1jn/>d+dnYh?i5(GRAS0ug3oe/D-6p*N]=kk0`O!TL%/=lGiYAJq#+U5QL`g=W!\Pu\,?
%lq^lG@^p3k9\Xf[c,FgT1m;l<_mj'Y\fj@,6n:#<n=6eUTii'2!"b$QO5-/VAia%d'sF9)c$ko;cr63ZqCl+Zd5m#)jXi0`[psXr
%S!#CY!tfc':Y$`1XU/TJh=lfKI2LWG.TWLMd1'U16tR<:A^thk^'>2^&a69pOTA3*cAQ7+#P4Cu.R-dKrd5iY-G@TBB\3WD)\n-d
%HTl2T-^Ok.X[;P$$,^NT$l6(EFl9\](;2X65b<Qoqr(4)PVVK`AWOc(:]aZehlH=VXCDYRUsn+f9t0!)o?[_1Nau:EO@9;>5mrJP
%&(t@Yp>/ngUX@qGk_pdRW4`rTaALGn0dY2rb6*?V6sll4*Vp]]5utuMB>Z4XfQ7Kp[WFP<hF/e*)?FQ&i3oX#oo)t&2IXYA1\Q;D
%Yk&]V2HZ>C'%:;C/4)?f!Ddg+I6+-B7uVQBG2Z]o&4J1q(+maD?7g1D0ULb15^IC!T:p6.!epGk+N&fGkAiVAL</;u#J0TDP*$&:
%>`H?kOFATYA]0Y&#T0hd5ci,"ZWN\Aed/!Hpa&CMC^)_=]>oM?0cSl/0a,u9$-"P"+T>W%1'L#cV,MSW6`cLMT\9X_]G!SeMkNOC
%ZVb^&r&Jihj?^egV-uJu&.7eGnc5ed%Eq#))Jo^jlp:L2b_:L?1REp(?-IT%Lq>o5_>XjW6WU'%s7'9]X!1_uH.`d90nmCf+IgQ.
%"J(_nqd@OuU83"f(KpB?4C,6*0/+JY`Xe3?'eK\cFPr$q54c'BR-3sHs(,43UPt('&BK65"HdO-c3`F]^.[p`HU"/s!XYYm7;#B(
%,LupQ@"^Kg?r9B;a<C!cD+i>F6c&,HbaZsuHp>+fl^8pLf0h;\fh12[@BNZj.u;j'9&r^`X>MlXC$&dO!KRJ^pS0f[j_Xqe<"^Y7
%YQ2Mn:tJ7Dl^mAiB#S:I6kZ>8\oS>C'*G.,Be3i@T/Hgg\cX9;WL^ULR*pr"Th0tOd:H9Zln`e5Q3;pUN&4'>Lf>)Mp"1-A3==-s
%ebs)-Q,nu#!d5*)IL(beDe@p9ZY3lD3f5FTT-lMY&Cj^eT83s;DL-IAQR`>60DdRm@j+RTarp\AcJd^Q2tLSYjQDUh!3(B7ITk.S
%UfJ..28kjcPidZ]5J+VG0J<N#abg'7e7(pi_JBe.S!cOD##Lgl%Tf-NM?,B+__TfK*u=$lpAKgB.&;+"m8/`iE`![?mEff+&i1TA
%o5OmV=&7?21L<&HL?>QP;gV&XU">93!'(u<(Vgk*=sfN:`kr\>6K'Cp')QP.OR;K!NC[ac:h-fR&Jr59N7SY.9E=)Ui'K$P#7VTE
%#j;W-^g:MZd!W<S>pN3DJ6#2(ap$FjY-%Zn<JYdIB[m`XQN/@D7B//\=kCs-6HC#T@C,kpq,!3b@o3R9GgY0=kW#3dl.%GF,bZFs
%;IcsUj:t&k9@#]=ZtEB`!2Rj3JP%V9lgN509Ff!2OB/XaLdi*ZU4QZV4h(R0>V(aMb]aM"bm`lu&Y$KC)U3K;;.sSm7]0HK[-k.m
%+<_Skh/?F33*RSJ/C!U&_+K$C`2_b.,JLujX.o`B"NrO@8\1@FGZo"M]+h"2i+''%=J.'>YBD>0^1;rI;6Vl:IKUDgaT<<Ri'$F5
%!XQjOGlre!dhIdpkB/hDH"+_F;qH%2_?*9gV*@D*Ze&.4YU`47.2K<XSt*$\MQG:R2p9MVB/^HR!;V-_MRf^(N&+:?9O:`4T%kmB
%>>-on?.&pDQF1hZG976mbA10uP8,ZY[-qkU+bf1]`?Jaa&AWVB@Zu-+W6rAelWHCdH,d:W[u2-%@r$b8OZJ7e:"m9U7D:p$ECXg_
%(l#SaS%qu('I^L5Xk=WX`.>b)9kE(Ta!Ie5-rFGE@iYSRc->c;MVGtS2PD(Vju'XW7q-i\AbnXl[+XlD9It_@N1$t_)qGgO%&)ep
%g?+S>`#bo`S[b"HA(DegQ=l^G&lIUCUa'0DaT4OodcFs%DOcTW[T*OLS4&;CR>.KX\Xslb!qP6F2$OI9L1`ji`F<c\Xa?kZiaBR2
%C9A8K*Lk[q4?#npUMWA]2P.pbJA2J[iaaI`'-A\?#_ZbG6t,FljQRN!0Mi2t(o!V)mAHF]j@$OU2_%jS5]Ab2pRiZrNc/XNhA>6D
%61^gD,WFEY^aknh7HbH@9C>+g7Ou?F]"9[%&=ZNa,2tqB<AqW<P3>Dml_.F^Z0Hmd4'Tj#9K^<B+5&gg@2?PK]N[R=R`]`&*Tms8
%mu4j'Srm@<VH=s(nChkbZu8JFL=X9dfm*:XlBF%-g'q3(:gmh>%`QWti/F;e/J:qa5\I8iVTd<n96?El?nlAPq<tJ*dQdm)`KbgN
%k,k?XMWT>lXi'EM,)a]a.YSmn&eZc:.^1=tE>-nrOKrX!#Q2G0\$C)5#p;cE"k4D(bYt$o82g*8(g0a34%=d0RNp46]G';`qq91m
%KhYFMNCAP>&-IK'6&c&?3V;B8MC!tk&aeafC;X]p\?GPQ8J\4Hi/k7`HSX:3YflE3W!3FP+UE334fm7HaGconKWmUm1W_%"P\Z2;
%QqYL6kQSoZ(k?.=PRN+CRt3MH9k0A0e`o0c$Kr?`5K+%WG\p_"7QNI<V/RX$VOeu'A/sQ%Xig&hFk]eo#]'MNPr\:0kr`F'%RYIf
%$fBqienWfhRYIJgho;lFpU8Hd,70mN[4qeV`K;\<pA;Oh5TpU'eHu2*'cQcp]ipXQ&fuZ2(@QTaC/rkI'`K:-LJNOV(a,sA--Un"
%_O:Mm,sb5d'[D>q$4q->:aU]@3sV6+h-FgQ4'CIV$@JkRBAt.O\:]M*gk<-b^m0L<b&2X`E>ioMpqiEYV!)?GBJQ4iG-jR1"o5YL
%`YZon<9B'c"t:t;QRM;HenA1X&G,L,-fEp6-l?T6=,I.#-8F2ak)n#`YmQJfcTVkT*oLL_qDna\(=PAW0I9=WAB2\d6P;t$_A+D,
%L%5gEh8uC#eB3;M*'3Q\iOI]%19!tM9ZYLR9IOH1!<bZ2NbCC;m8@a9$Y`O-T&pfN`'_=u#g]O61":aiYcQkIiY<T,7e]XSY8>C-
%5l`ip(sjsJ)lNcVoeAaM7(jaP7A=Sg!S0M4E8oXD9hbr1`M#5a!5Zh+G_35O84)SHJG'Yj/CWkIafs@k^%be43o.qfHW"q:c759d
%!PNcYMUWiUqL"lJYH/a_n7H=(]ssRA\*dQhbD&G'6PnlS>o#%gd]9cj"h&rK+ps2!,g306UR0i8cKA:.aZ8[;FCng-[m^ZqB-R"V
%bBF,6S^QH+af,QlY)Sh,%)aLr6]p$gfUG\Xk4'P?!/l:<D)t/Wkj_?C?>*!L*G0#c?e-fbWB9#]<n\9:8rPM&9B_>?F#Qh0\54d$
%j'gOe>TXji!s\n)66M(4o)XB?gbXVB<ZMt07mGIGO6V2)^3@Y&R]?QpNB%&9/Kfl24uKBcOo38kS&WAh9oK9-U=M2[_GAHR(fqUa
%YdR<;F'+5ZHp#o--okEqT<hOrY_orEH':)pg'o&-PMcG(VGB,g1#!TO71UXfUo\'XPfm#Y;6Q$Q.2>hL3Pl]H1[Op&;ZZD,PVR=;
%<3%<4-q9e\3$sQtpD>Dq82IY93A`KY=p;!'M,9qKqe4t4!<O^^0=JMN$O/`!'mJa,I3iPkq`3p4A,uPth4OW1qfcCqoBX#\4am1f
%eZ0eKr:97L0@BR'p<:!8JRLi\#(j&bO1]K&AGo(\guoZrWKReq-dn;'rA4S`!B=ONNjoRTB2t^ZaBbqCYpokp\Ld,>]7cq08eDZY
%as]KXar2D4Qcju;RKPL)R3'Xm]GiJo!Mo0\kK=NJfTU0*iRm,&BP*A&K^KZJpXiI]COq4"QWDE*P/D323kW"3m\.W>)+c5I-6^V0
%p<5l?=,;\5U82pk<*Np)dXi3)(tf1u:Q)f]!i,8c1g,q]`@1B9!74*^KRI)+,acMI.8MW`5Y00XqjrFo0&qDmd(3l`Um,gd#k6C7
%45&4sR2/Pu[I)EM0Uq.^X*P[-$]#JGUbs1B^WYP!p2k6\'DG9BqK,0D.Dl8Dcsb;9=OK+aKQsbS;jQoY2P]QZ)Ejkr2([Q38@Ic>
%]8'A+3RC$J*H`:kW!u2Z$nYopV!lLWUT%i-WXms$2aS&2%9#&t9G'LB1YdtmKpuTl$\h_hCQ:<8oWJ7L+/b6GL6N/bb4Lf3<E<\,
%!K\q4Spm2>m):*sr@knk;\@t'1um1u3i(^.4G)3&6H$aF#TcLDbt/i`"bc3o%4p_7o\o/D_d7UE?RAt`k5`@2p-%b];JH1q4[$sk
%:^'Nn0%EVfTuP->Q6'S2;\>O)Vcj5ir.3"XBSFF7-SeM3@N!`)p'<rY6WcL>"$j4)K):Q)LWhJ4icGJ2/NrH1(>HgGTc='(nau&P
%duMmn=I,Jhj=D(fkIo[eQu=[Z&/jY'#m!:"fU\]Vg6&ZCFnHq&P=[BVO?52p!>Z&F=lW=?#V!oINkjS%GR+Wo5V^D8?0(N5@99?F
%'F2Etgf4RO&@6,;>VB0:)P4;t0KfHJk$:u@ePh!3%kNSI$ED;m;lUBU2I#5T?lY_#=622FXMW7uWp[t"M73sO*\mui".2MtJJaRZ
%pXjaD/J^^P<_e6`.0/JR"IUe,H^E:`haK=RRMGFk"u4$e,X=)#\>CmL9p5aK.>hU`S,dWHa!PgM.lP9KiZCV0#S[n7ednTEKDES4
%2g?Cr<0ZfZkTcl+Mgbo%fZ4>A2<5Ul@p3e-I_T/Q_m,8>m*Qd,aHYUQmoa9-Z&e['>DHY80.*m'cSCIt+!)JRrITm9(eT;I0.nSQ
%@OhRP)?s6nZZH82]hhZ!gEhH9qZ\6QcfY;cH=NYF>0*eEb"TA7.eHELC9fW>`[LnG$ki>7m&[L%K=[rk?MDgkkV3@*/L97JMugo#
%!H2>BdTUI*"5d>QN<`QR](.8uB#S'fV<ORV>aH$>LL"=\Cahti9q1<2UM6SFeN8#jKa##uMoE,k&?nK`,fMf$2-J&N3?0=P#Vea8
%4IeV/2nLul$;m>Y6rUtC/69YUaU&'j^^1=jQL;1dOr6AaF`^QqeofLRZq57bP^uC3OoaL4\&sb6=C/*`b.t0$(F>*CUmW//'HUZ$
%4ZnkbUf:-$q@rNW+\#cK--BTM6in!LYD4So8kq+PTu$asRpmhs.?t-p;q-lLRN/]/O1*YE/^?j#O3[u+*jL@53#^a==d<9s")\Oh
%HaCV/'oAU#HBu@G=S#M\C#X"F]bl;#dj3b;6*9+HZ2X"d!gXR?F.9/(gPF=Af"JmV-34*Ce-&,Q9?gnS)<1[rZ6uX3W-)gAG?QN7
%X_R&D_,$W5$U&>0>mFijN36C&BUP\P))CN$E%7"&&:U-I8<ePRl:a56=[Tb"]Q4f-9I+K8O]Q&l,s1!n;W&HiS4q55Uln)96Zi0H
%!7jq`JYRL=,XS<UM((^:WZfrNAXi=,/1=c9bFhSj[[;ct4W?ZldcptB8&7d'bZHo.e46Mu-H39&iups<-fn<+MQ7KQ*=G5tBLI[-
%^<(('AVWaBoJA+?goMG)\rra907oN)U@JP&"@,:s_%6)@fFqk")$Q*If^B(W43#+@,n8naN.Su^eX3e,FZ>TdEroE_^m`9L@A@rJ
%gdt)BX88ii5u>1dq*T]4&PGTj3,190U+p:UbQ\X=I3LDha;Xen=/M8."VHmu$3Lidem/uGi#JimT-*g=5lq/e5,;"[.2NaeNV6B!
%Hi&I^SS9/]aQ!b,<j\d$r!5`_i8qP*)E1$l?lM]Tao9[%1IOOj7`u^KNUm>o,.NQ&i+?pjFf30F`o1>WUH@8NmlI!(,ARc&V#hoE
%Bsrs0U+e-9=ZQ%o2M+SHCP]D"eu0bc_`""/kLeVoKTnR9>4*Hi$/H+m_;,g@o?N[@$(qbh2_@@MQ0qC:@M\2!@CqV@]Ohe(S@42Z
%bSVt9T/DX)Y26T#'R3ed><hnlA,Qn\fofBs&dVDe#g4JUil`X?HtOf)!D%p/V,kM='IJ$kku@.=B=+6RM&h8>U)ZhWWllfN0-19<
%7\,*i'2E$`Bl(;$j7/!Fk+_j@erR[_ZP^D??X4!XjF.T?(Ig,g+g._Fh(dG>2G?5n'CQ:ogPV?a,:8C]^6j8f(4`.]!BTq'KuS=B
%QK"ms4iu`MnY)W$=XINZb,)@Ql7f.DQKkPI8'@l6)Nsdb;f`J&K%\c!Ra%]N8@I84AmR8K!.Z4I$8G!4&c/3%)[K>EQL!&'+I34(
%'RZ0\Bd9uu1[jo@8V^:2PDkWsBr[3.&^b8Z,8t_DiZb,")UZr9*34;q-i'a]DLj!;)"I=e0[l*`d<Ze@_U?DZ/s`Y<FoJgh%fIWs
%6i,'$c8,S34@$^Q0*m[-JKWrgOO>OCDlfEt\McdU&GYo4r&,6!q9#$rHCYd=,ZD8!Fbic?[1GJ-/QRh?6;L7M2-4Ls_?<:,aQ^(/
%rD"mk*'8?K.B52:aH-HIcA%\/!f_`3f[)'ak7&_>^g;E;\@WXR,>TiU>eBG!_Lh'jeK6>PXTE<L]$,p]i5KJ]]4/tbJ;Wh)9g(nl
%Om?:bq\B(3\MO0G#Z$lkN75:>"f`BLEhK&HS9!.eKM`I7'/UXU.1?Q$8S/]91Z2.hWhsTdB:b7o$]]<cXAPEi-<(n-rRP4)EPD_\
%QKRoGckl&8OZb"5fZ&In<m4T*@Thi:S1?lCHtC9b]1!Rp84HB*g`ceL>@]"NO1(@AC^Vj'D)eEVX/1YTb?e.\!]agM>h<DUSb!]%
%%Eb$pPX]*1RND;,H_83P]8a]>AgS/F<-("-_47nG16J@*Cf_dM3Ybgd5W.qGXF*[755\,]WN#JC:9.&^CWuj/F2L'%ft'&qIfdpr
%=rL<]Sp8A^T;IQ*N%8f1fep+YV0Fh0%m(2'gQ^p<(4eh)49Q$pdZ%WZ9^H)nJt/>J=Q;rf2,68B/8KmfQnoR\7dnS*9_>`VO+cAH
%6pN[.3,CqcUa\hd:B4p'hCMVP"D!5nd&s`tHt_r7#^)"i9l<G,X-l3O[WLF>=_MZ[L:n<R\^c[PE;?;,^rR_"ELq!k5r4I76il7I
%U*9S+D:ggngC#DK0HO%:E(;gL5sK-S!Ak8^$/>^4HLtR!\X_HM&@%7(Zns'$`?I,k4>gWKq%M$"!>9PY).HRW@+NMH-7/7ES;F62
%4E)5b:7nspOUKCeRi7HNB'[f_1b+Pg<$$YOKKKY,FG=/@?ia2p`U'jDbTo!:1WQi#k*Y6'0]HPY<CbY(&6RsVYJtD+o"pfSgL(q]
%$'7bo4BudfGroi&]-7=[U]C.o*Y*nUgg%E0g(A#kBfR"NRNR:KMutP<cRR)`>40p*A@:!!5]^FW.)g#@VkSkS!V5R/fTl:QjG(`M
%OYB#^lRJ4I?487qVhl*6IZm0?'uen"T?UhV2@Hfc,YeNp>@G[Ug![BH!])5<BL@a'fec+Y[<&Fa_FPa/kXlcZR[.]p$RQ>H9O%=<
%*oJE%gVX&HJ6(^;](7nBH#H69).nla_,oJq[$e=TL?s6RPd&@;Uk(p.CG2_DUL4Z\0a1o;\*qL-I:@Ocj)9QP4f%3=)'fK$C:PH8
%D@l^O#e8aE>S\!@R`-Wf"!s0*OVQm!5fq__\ZBRjb0%M+k^[F$mQC5"1kBM9hD;`n<#Y'`F'Dm"%7$c3@2%9L-4d/!Xd6bUKW59M
%O7j(G*OuM_@X;K#>@o]["p]T#/M3]cVL!9meQm;c=F7I(C\>]8C8tH8:%f'gl=JQp)#;s`fBS#Sb;$U:[uVjLkjMW5SECb8K^uT_
%ccP7;]&ZNYn"DDL-0\Z2Z)(U&eVA/o+m$nF+u[&Y)%lutqJ)-i.h#@GWrn\FL`k7)Bi`^'M!C?TBTgoe=6&"bA#6Q$E!ho:>,a*k
%W,$3Zh1efGUf@(GN8E#SD:jTthuW`&[VKX!&&aKnV5u>P$:f(e(N(G487ZaGM@#GH3'\Y&)<C03CT$h'8XUq$f(Qgk8J,:1<23G'
%p6]Tl)'(k\4(rkZ.\tBc-2h^GI0S3q$r+_,Zu-'UAYq[CF)GU*>I26r$,`D9=1=?\>:]!tP8e9:l%:hAs-hgDh/HCZAkW,)dNh'2
%I]huXkSMf\9]\*CO="UXQW8Vn)51[/^ic>E/k^8X:77's<&$J)0tDAOP("QJL7aLbm<m%FFQLY2QOL'6l@t+a/NL/YVZp9ZIcG=:
%.iH+&;CladA=f#h0I<LW0iei3B,:MSBp+%]1qlCj3t^@=pg-OTS&*Is*6A2;du62BA/(=RC?#`EeZ`=\K&j8&r5c8_l`S\]f:miV
%.m%c'>0@K<aC'Ut>NX_^e^F(kC1LrVno/4%C'Z+17W,[(??hT`(ff-nUIB@c\R7iq?q>FWR1pNiO^,og7-<o&F)=N[!XD?.@75!6
%.2.BUXXJcTplHrgm=l+]'k=Fd2IpookN5*K#)^#j+_*k\-%f#@A:Q`LPD_n`$qF+h.F(&s9[B$=BolIf2)Yb]T+8b"F!/AA-jI9B
%C-.10C7PACbI29lE$dj4o%r]p5A"2j'2E&[H263[rRbnrN;aY_FE;LFo;C+qmfWY"ABi:9o.`.sd5BO3O%3b4l9]h[//[BJa4NNU
%CTEX?!tTos[0u0fZCO(InouJCCn0u35Ik<pC$KZ_Wm5e#OtK6oFpuP%Nm<@EG]lfF3n5tI1d"oR3l\:'4a@\]"(d4cNUn-rQl%X"
%H&fE\P#^tf)pO)BNo2q[3ba8dj>f+`>e0DF'+]kDD`l'._^,J4Wf%2bZ'k4#+4f!$Fe3*UrkmZtLZ[li#!]F60AGC)=cRW6l_[dc
%`Si;,8D8d[=J^'B))28I_"ZbH4&kBKBT>)hLbLcVA(iq2QCZ<2[.?V*]SrlF=cPe*O`Z<hBoCu)VZ,?43*oakjV5bt9f^&[RK`jU
%o,C&QalW07#[*f%hV!m.,HY4\N<'Pt0Li%$0bY&aQLJ42rs7@B&K<B&rj<HQ`Z.M!=cK\V_M:6p)M:o<2ATb4\1P,6SC+i`]"G/3
%RXl?IcPSbU\?+-s2aoH-aGcSmfpp2%[F)LE1E#43YB-R#7&C+.B]h,<^;lDu6sruYE?R()[R$!r(jF/*3e]9imMJ)'#%L[WpYc7p
%!*.]'ct+kEG4@n+>ckHVfo*[-8'I]i(Fq.I\T/Kf,B7_kibB2i:0ih9TZt#$(Iq7j>g-.TE8F2l>c[E&>^20bWD09B7M*4um]=A]
%\D#?6XMo:c<cQRIgiW`ZBCW)M[tC=XGK(Obb7/#;C-rO91WEmCEAZc)-=Lo#bn)OU`MD?MB$_8O/)tZY@[r[>,sE%a_f=*&/X<@R
%=6eSg?9*gG<[Zp$<(t_s':j,#H=Nj%7QqhIXtr^*CA,iL5uNZaG6Y:2UY*%;]202oEYS]#(l=aL5eDLYr-.*I"s%j>m)1J[En/6f
%nXEP:B5Z^DBlKssk+kFg]J:/@cSI:qSXLUA@Uel@Zt@t#ELIV>>\JtVKa/^#dh4U?UMs7CfWKJp(K+]Z4hV%G0f0:p.7Qmf5;slD
%hMfC_)tNnE+YaUS.%k`Ii`6pZ]W_u8`^sca`;#=Ymqfqh.Y+L'aG=8uOjMXgL]K4u0ZU_[_-tfW21MeN8;U4J.haXFQ\^&L&M^gg
%9>0m-'7:t,b%Z[4"WNtc(pq+Uh%p]50OLD"Lo[AdSUhWZTq'qO!oh';ATI8NP9a*sMUN*rG?X+N5+It&l8eZZep*rg%qcNl?\sPr
%D2rGF_hD7$*43V;f[kL^*C_Y7CHWMMZ9bIl\#-[3%O1[jV&VrS,]=T1!(lAo3oMbH&0t\t&e<+K`CDl(@4[*.V9C=f]g9>?)b+O1
%)k1X\Nl*S0fC5K4q^^2NkjQOD9Z)*D-_B:LlL2SFN5Z1DX3NI/5\JK('=DSYdT<qT%"fuG$V+#%,<qnB^re@DPg\eg0T;OY0nNdM
%KgM873#fHuZLT3[RZt7H&-t0DGuG)(h8f1\/WB$Sb+"o((fc'&D.6rRIGkoaU!j?%N=?_50K<:qZ(FUA;1XVlU:gk=LDlDonb^NY
%lp<'67MQX6%6e2>EYgdq`R=W%Cr5*TJ3i4+_?\n2jWiH/bQ(-nRkSe1U^M0#iIeqTEl05_q+?$mZO-Z%GqO?L:+(FndT@rh[i.TP
%CbI.o@@1Kum0%`@BE!TX)"a#"EAB"P))kNT5p]25B=VF```dhe+;+m6cpZ[=M1hQ[(g+<[$$5G-3B*)i!B+kl#Fn@&/iGQKKh,;P
%c-k_d5)e.?BnR)2.J(\+N/0?#<_ahIPg@a7EsP,P*@"o?KX'NY']U*a0W5ml8`f&$#XaktjU]X2(C&n1AneajIhNWKhc"`$fZ>dg
%<8%WK?mNLP`5tiT9nPoJl<m_3?0dj!S]*1kAe!a-J0tra\aTg8ctS,`C7-j]CG=WQq+XWRGeg+/Cn*9ufEEZnV[UT&\Lkmj0c7dL
%m?eTL;lghmq1=/&aR.+c$rd3eJW24j/E<N`Y$d>&>NPT3GH;!_EMd,W4Sg2?!8NGU$SFQXYkAYBF<P+HU^&`B@/kWu#nEYK"Cn@g
%K5"p<;R^i;2M;[(2NG.#7BgZc13ub"VeTdT5nOP'KMn#)(kP\k9QMljURAF+)B]>"LiJXe5qp:B7.L_:ZG\dgE+8KN)`R]15]!Zt
%rH)f+]c2PFR$*l\%6lOm,W%=PJX,5;Q-Bi@=IsP+&5;Ba@bDHmi_-^"M%^#Uold-V6P)qr;T0P?0`JnQCCgX?+3\t8(kS"i\BN2/
%bU5g6-Q%I2Ve!H_RnYG0.kl("?tR>:7[tWh?\lpK(PZ>YX>E.R%)I0k8"F3I"R?V,3pt3'b]Fj-P0OV4;Hf=J4%1jt)dnWs64o/L
%TF*(aJoOGP[W@12p;p/"Kcufh/OhOe+da2jAD;rD6)<3/f<,Ou$L[2K+IE5u*TI:=O=2X/Kcui-\kK:g6SO+d)J4/I?q(qiqfucZ
%B#7=+Pq`CtI'i6OZ+=j2,r`CJ"G=la!S>I)%&uqjTK>:j[PH<kp!33FX*H_.nH6,Nf^-E;B3A8YP63$H`%UK4^^PR(D2E67j&$)\
%\oInVAb3d<JQGah`F&m><[-'5?=6/GFe^sl"eJ0IhguR[!k>@6;W*skO$2M+L-US7N=o>L-fp'p(kqB]Dek$AN6_N5&;7j;*jdY>
%#_Dg,q<4:ZR%KJHdKtK@>Dhq5Kb&E2dAG:l,8/"lK<YI;GO62!@#0Vo0e-T'E+o009YdGoQ0EE7!_rk(U_HM<)On5.#0SBu4t>CM
%R0f7\NSN75"O)'sFjMQ:"l:$erIkTG;>d-b@Zh(c!lX]#$CCmi&DgC%RKI:bW.6`s1Ik7BC\h\g.hsaURqOaY!bVBCX-.n;:t4Z;
%[Tp=m\Z#`T&'b=eXj=Oj>ek_AX<p&N!E4lK]l='/LQ@P+EreYDm)=Yd(fI7C-5S?>#hCsO0Ep7Jm`Yi.3%"_m7L%'g@A"1%$lCIJ
%!/V(&YX1JD$oVKO_rBfp^aWL!jMD*0.2*ZG"rp01AHP\<9H*<@"q2qt%VGm@!0KT\"/^V'"J+4rU!Uo'Ch1>mID\\&#0^ArTuJ^4
%^lYk1fEm*B\R*Gf6=:.&#(Is&<[mSb7L74u=I<fU^^uU0s$@"8bqFSUE'dqa(Wji,J[qg4#P=Dq=R1XUX)!C(fXlqI]/'Kjk=tI6
%Kb9^9Ddru!,B0[&ctnZVr657kV?Eb1L^'a[<YTi1*#1K]GWipE/sO-Y)qUKQ=:+_R>$<XP7c49"?Pn?."LbDC:B@QLF+IAQ1BO=t
%i(1>1^lTnoNB/:<,dr:F^<qAb3R:D+SG%+@7L@;a\6"Jb!i$T_nBia40V23[18b9;P-$0CUWnE31i=1^$.iYZSML?-7'66*7UWk;
%-&T2d!X#uO`;R[]N%r=$ie5+Hfs[YW6=?)h&]s$c^tbn`PJous9EQ?k<#7mZjJhns"BNXA"+G(]T:>srfgF`gRgrPG-ZZEl6gG?l
%DJ[*L"BN+^!E0?Kc09c+3UthK#7LW7XU?4)1\c"o*ADtQ'luQH(%cY1"30Gah0(hec4=L`UsXm=_eA!ep^W-E<9lLa0[lhs#L+oD
%dqnVJ"q3Y-Gtn^Yn'e:9^`@1QQrbVB#S3]sS_Ag?0ZjJ+#kGX6!-@m$H$N-dgoZ%Rg>F@.`.\9&gKq_A!"@ki6Nb\k4^f"5/08I'
%?S^lKl8!6$gj64)qX669Dodn7GM9q#UqWM4A^/Ykq0+Y);+ICU$nP0OlbCcY^EGDe?b(Xf30!TT*_IDq-N/)0A*<c\L[%""r1/W1
%-[',"`CWPSbD=J$W/L9Gc9oYBL$j0;Sk.0#b8d'B^W?*VEX"9;T#lH'rE<fPrAkar;uIoq/_]/MoEuQ!Q4s5V2j1Mmo/i1\pVQJ_
%%(>:D^VdLaEK4DG`,i[kr,skBSDk@VDmIYp/\^2U6_#$CS[loMI^&tfZE):>gTs3ScLei8PoT/)3/=#d7d^Yi-)P3KjLu``.jM!@
%O^(=)>a^#V8]Imul8?W%ngEVn7C&<5)PcsGk#YkkICVj#.rpp)\#YGJPePs%))$r_]U'Oa^>.7dZh\daeEW=CQZ[3`QH&%@NFp_?
%I%u`9O`.]sU\"6j9@t4=YDpL;KHCJ:JA`8(.\.u7VsfdhVXO`pNR!MB>3^#dJM.>MaNT"jmj/nY.dT![KqFoS9%eQh5q4MR^!ip3
%S\,a]J(A]ZG;&09;9F,qmTg5GQQY^Me&ndUXHM:eT4rX>Aur\=d-8]b3"5ON-fr4u]8V9\.=:$rE<\L90,Z"'mO#@kHQcDYZj+DR
%5[dK(GTBT3-3)3A9.Hs85ts4"J.s53egPmuJq2Q2AM4fZWcY0*Kb7L?YBLc\oG>)F3*IG"E40*0d%RSK;Ap=i1kOOh1]aWYO6^o$
%C/?>/Z#8`jC_u(=?*@BG-0TXuTU'Z1?4'g2IAZ>,?,i?m\mBDT5Tr-pmj$lR+mbMeP-:3<3cHHPpj+AX1t28H20)c=&G._!7iq[d
%@kXT/5fu&r00(lA]e];aW[$OjfS`7t^[HihiDM^F0B-a%1A4&eWuG`PJO@F`$?4`WU4us5L3a.E.Lh1Ip1hsW[ik$Kockp]c\/uj
%>90#/;a=;`jLd;B1+^:1qO+WJlq*u=ja]0=K5qCI$3l+?9\FcY1=i'Km-^+OjND5*.,'p!K\-BMj-766SB3brAZr@jPUg;uiJp;W
%(hKl`['^O2^%diaPV/36W)J7/lAWET[3?'g<WOl.=lmNP$TOF!L"#%90amC,FM3W,<S]!Be+GJRdWP"pV0"\5lW:"MV4_N/j/E`K
%db9>VQQ768l?'_P?Ck6,?3UJA&\#%<d^-$V6Xf($"'FW;4H]:\_IM>PZXaEE=`?<jWg=GG\R(\M;+X41?R+hV;p"[%Vfu8Ag4cC?
%_P6^mK_,d*Z?;>e@<:HqdL1$M1/;-u4-eaR)1"g).+*aAG;S>40Rhk5[!('RGnI\4+oRh!(RoP4jZ5D??aa+;EV"@3k?Y$3626,#
%PV_oSN>"?+0+"@B]@-7j*uQ?FPa*%j@'hpC0DF<Ej3#KuX^K]FJ$Fo'<Y>BJp#5&l^g@q(\^P[Q6-.5aopgYq(OTMm$nl_8Ya2WP
%(=RHZB!UWqOGpYPZ/gUs(N/H`6;&5oFU!IOEt.mRqu&k"$ht+P[@N)>HRRtg1q]KA"jlDK_M_Spg?V5FgR:$@%UK-Ti+l[JGTh_f
%i"WhSn2+_%V.0jgO&>-.1Ak01)r_"5XX_cnF;!o>0(cb(X=&LJ0nQn=n+=4?XMHrE@G_6H#Hm.K]5>Qba'90P'h!Z71\WMTQqC,e
%gMHP&k$?b61#fpg+9V(mGb,N9,/6,r:_=ZT7<-/5&dOK0X?H]]ZZ)!s:10U(.'Wq)f7e6hR>9jf]?@X%ElMB-Q:\`5-JSb7Q3Eo#
%\'(M?[=W94#])p)c>:*"eIJb<A[-<Sg;S!F:,)&j,60g]R<C`6mmOc9Foo:oKkD3uN:^V>Ap5-;U9j2=M]Z:sG*.g36/jV8.suOT
%XtjbRE@';7PT8'TrCWkKbr&%8)+01=HQh)([d",Q3ls"?Iq*CBa):Hb.F&pF].`3sKn,CPcEYQ5"b\oh*4mnLHt[3%%+[N7Cc@A[
%9,Fc^a"Ha9megK5]1e#i<H=,U8+taKLOEWlh.7Q$>Uah.l",Eu1[H=6lZF0=Mm3%*A),lOS43!.A)2h_JO&O6NEm@`0oL)rf4>Pl
%RcU?r>u$IHKXi"e4&PD!5_d8!&l!;"mCfC-392"1q5#mP/e*(m$Ck4b:)!6U:9;WHU")5BG$IKF=\`_E]"Bm7S-Q5M/Rq\P4Z]oN
%/M>D0[94;&a'I'W;SnuR0=8;QK,$[AX31agH=O=nnbYYRb9/S)%uaOjl^DGq>$^:==B9F=eRdO,q[3m(h]7SUF^AA-bZXa]:F2C4
%[;lUX>m1.0JRtpor-M9Rhp&1ES&5&D<o)ik7l[P%9,=100<DaLEip@^/d9`^`i;ZpLRO&-X"I+7gq0oX6GU`QB@V]di;*h^/q$^%
%%a(eE#fb;cP[5G8@qoUjZg,tO`Og1p>mtb<.QFK3juZ5LZKdUX"&'<PWiHI$e:Ua;R/ne,$`bnJ;jrm3WhKV*inU?@RSZg\[TR_Z
%[m2@a=`l/Ab+aeB),I:O(HTqG!7JhfDQLG1%87Zu*(mo2oIX?NFTK`P<7+9[RJWJC;]!LqL-mS`]&5JVp,ne[arln%Om4.`_NAj^
%eV07Bs!k!#R$_PI32nO96ju@e89N#Y#Og27FWmE?kG5['!"aT&eKm-e)%qm-=36WdSN<`&cXXf;R8c+&Zg=2](F?n>9:Ss_pPoJ#
%oSHP63Ad&W(o].V];jOL;I-NlOaH'2W=,D+brBhZq138i:0e2<PIYYt6:rF]kL='!^'*KGA^<q,"k]?V84b9?LiM_>'9br13H[].
%iRH[]j4$Nl%!"=1DBaTlcRYnG1:]6jU01M5a=28lpR+n1KheS98=9\'KG!Lh^q:6D1*MSPFskdNXYk.^:8l@+RVd>S&VH<#[HM^-
%,GPIP`X-dU(t7BS^4X>;l8NB[`I0/d#0AOf=#coj5$\e\275P([9];TcO"_3*1@[-?*Z@0=`H\oB8Vi\31hhdQ=[MN>DuN=+H0)4
%^H5>NcDM$N%AO<'/u2/R31hf,[aQi(F=B2VUO&@i=jsk"W6;P$!F!dI$d9Va"g<lrptjiJoZ:Q7:5#<Fc&tnin2&LuS-a=pB#r,9
%YB(]?\0dZ(:_s4q>D-9"FWi*`F"llWJhIe%\s*bjGG3MtO*)AY.Yem\Ik9K"8mOt)'g#@ZdO\s1egPZ4,rURKEdj<bXIa'"h%0dg
%0%VR>9q>4L05QqY;I,*$F;_&1"H4B)W@jYOkAqfsV3kW48Tg;XD&CO#19>(fKND&W@K@"7]BZu9G1@X"W_;IZKcHUSFVu?78[joK
%Z:L4)4(HIq']?<i8Tj:jUb,icLRs\dL>]qI];<MbKM>.)S&P/E*uX3*JI<U(UahMIM,%-Qnl)dW_U,3Yk%)%/*VXltV2HH1l]I0!
%[k!D"Quo6H!*kA&76&A4CQ,bgGp"U$7(R?TZ$XrR7i*4T5G'`^[gWmTK<\`CFAXTGg'FJ#`C;B#q4\;/LlJiBY6;E:Q\20Npi@$R
%6]J?Ldt/JTLm8?r/qfFY]#pV&=Ptod3u<SR-lKTmk5pI"l4U#?`UAKpK/)QK2_(OTbdjMlQFYtu\U`B9D\70u#Vhm<'>GJb19d[A
%2A\(<![V7)DI<oYGY;\t>[W<-*3SS8/CjbqR9M_]A3]\I_V3(M2N08T]Cm6kfQ'8>=H@_pQ<T4J(P4.R_"U;n?)n0\!4>d-VHcXm
%L396G_As*Vk/f1\gQceHP?X>^ABC!m*%dRTD9O+;cJ:5#*4aUus-t:"EOI`V+Vuj5HH9`N>XU_GU#XP)_[%BD*k*(`m)"bj+^n8<
%Nf0*e-;69LHPhsaR2WOP7a%3>S*aPG`44&nUD#@7TJDJa)_irF*#Q%PM[P/XUamlH_QM+l)(4i+@NVMd*NXk*'&k*,T9\f0I(7(=
%Q(/=#kCCe8_M/GK%eF[0L5U0rSD(u:$Rcl#1sT(1GXedsc@h+"^tc)H64p.aAG<rnMsqdlQqi:WI(Ia214e)Cmbks5gMI`3Vnhu:
%C1k?L`hRJr^u\l=AHi*N'ZV-jD.,kW]!C3oiu`@5>L9]#;eOmpXT[VGVS4?88$9[UgMGn!-baF%]Y*aj6<KJeQDe4)Fn?ZT\#nl.
%!Z0GBC,H/iH4.';g[/,f&&hr3)"L@G974Z+_0?=t'MKbs]Z"Xd54l^9$fS@:d+s:*F"2!^Cq#,/QZOOcFg;qK\h,I=cVAV@T,CFJ
%B"GrC3>D0TU>(9.W'iAY+VaJdPUk!1lCV/dVaVmXlg!IT\#?JS2=HsnQB_uk"i[ULOKDp#7I%7@/&,rh>)DP:[eL;$(2(+qn"[$9
%\SXe_k%L7=(=Z*j^%pUK_j,<C_JDj`HkV+a(5NXb*1b^t,<%,;mH1fn@$`o4XY#i7R$,a0MpTqHA@S,YG-U0nD,/j.ZIDT_$[&<k
%lGRAjPZT=ND3HQP7VI]G;:CfU(8D1jM6kk:%Z9n8Ze8gHj<L;=Cr&+4Y_I5P,"eh;;_1=e!p"@EA..$cgI/K+!U+)cYJVAd9>7+)
%PsGTYO'o4M0Plj'!kMX[%>QN%)Pq<Y>HBAe'A+MpRedJC/RmRPDYdOq>OE;9m'U:E<%T"OOk1@+FI]s$g\U<e[B,##J3#L<!XmFH
%nCGGW+]G)`etOMV8@P\.i;0WC>)T34T`u?u.\.ZUJ^9jo$E4jg3,9,*Zou,<luK<]=DcDZ>)PASdXW9P/HiWmJ2&31ZAq/_!=kqe
%bhW`V>/1r)*-9D/kH&^H>%H'YEm/F@>'TcAGWK7bWl9O-EP>V^2q2uHX+c.W@:<u[c)<LjX;8Rk]Md9<9>Wbh/Q.l?pcD>)kue!f
%54d:4VM$QCS-CneC_Q!("egf"b;N#\9Tbg@&H4UqK@Y3t#7)CMKq]>L]ME1=?+.:q&_)EV;uaGnBb<VNiooa9W!?f$bShXeLFh&2
%Rs%Q_2:ea@SWhSQB?/M<ab?)t;*7r*0'lMFY"hXU^Fu[q/p("F@EYm]c&Sqjl%P<:i6e8Y1^[mD:p)V&`pY],XUC\\Q8H1R"s*(b
%8r<uq/KhE2M_QtjE6BE5lt!KaR`ja676>>CA#H%AL<sr"=Uaqca-DGr9WlBB9?>gDb''\V"`DWm=+c2B@D&>.8Ob`8]5/6dL+Lf=
%K6A0,O&OD#gPX)jBPeRI$i_b&Uoc]V/<d9[=iD+QPI'pK53kU.c947eD%l![ZdWOHQ$IO.9<(66/(7t4Nt]k!GLd>uk+/>&c(LU2
%@kRftc8pkM*LL[[db2#eRUa;U$%5<ac<6IEj=B7A311=iEl(t<5:m^+^00?0qFW\.SMJ[IAsYSA:,^:)Zo2j4ArT\JQtC>2X)FS4
%']6,mnNo$i#UHt%1Z+LaAN7eJFE+1FSY"=fL=p9T*p8a[fm_nH"eJZgCR&4L-@L<Y)EXs=_-P])]+_lh'\ON_V]*#q@FDL=:s0@'
%'0V^o8N>/A-C,[m0%LI7o/Lp,XqKP2[`aT8b)/Fl=>-JUh'1(Z.GG@d0XX7/&=aVL[nmBB]<U8sPNg.lm<%HR-.&OG"e.'cCReFd
%(.bijYUc&V?!^9C<3cYgGMel__=YG^fM5m"a-;Gc)n#G)N/5JT;CshW-'<$KC^:MRjO[QC#2.sg`YS\ZA2Jk-GQ(]j<7VD!Zm;S,
%L:Y0JTKK4kr?)K2CK;!IE6$P2>FSls@k4'lVkV0-L-Vf]NB+Ec3:T<TMbOlXc7S_P)(2>A]es:@5.RBZ#M.PbO#<68FqGPlPq1#0
%!5bScY/mC[m)aGB>2#(U(S1p8pCm`C)K<$^;L6UK9\(^fFkOQuX9?bJX/fs[9sR)HQlAbDVGY,nf0&8BplQGD@R]^)@UW(7D@d#h
%`I`cQ2'jk>P_MJJ3ErjkgZd2iM.JH[_ptHaC4,\g9U.#CpThm"s3'8e\$^34C]FA1>hAQf,d?eGbeD_L@MUVA-,s.%-]S`>A;#U^
%Oi7(fn(`+epWR$2_6G5AkfGgk1d+K-Dq28nb-j-K'7#uK*$]L"ELLl-i3DjgXc!<>6o.3-e8qU$Qgbh/N))b9F"Ac]-1!L2779HH
%jkRh];!a%aa:1$!'I?-SclPl8)+o:cE%*5c/.Nn58S^3tS9E:nPgEPJ.e(C=AdC933>2e\8<"rmO2qaN%b:N<XKKcVD#FO35ch[n
%2+SVd,J@@(h4/?>+d:OlU5Af$2S'9m>eZ?jg1U7?KUS`"L8KQ[AZdA+s+@(WcX)d`.F@'VF"u&RKG(4Wq0O7!#8W3=dR7!GLWlb4
%BkfPj7%m0_"jJqu+ql1K$-%@<,_N&JpQE24&W!J,W>g@mC<^l`WOPjR@=f2<s*@Al*l7k7?jU*@0H,P]i4Y4uJiHtX(R4)R4s>kH
%CfU[+,T9g@n&TBJ;ht4^o(,IsZWM@WcinLY-9AD6in>3'd&7bt%"mFTWP^(pWdk^u"Xn@BNWBf]Ja)BEI6o1[GShJc3W_/:7,593
%U72OO;K*Oe#&MLA$$GrD&u84dXnfmhM;lJ?mjP'6$&\gjA4b!X7&5UC!.qc%pl[b1V'@_V-mf8D'/Y<rMjd,]d6t!4@`.>,NK$B3
%q#$7FX6C?Ei#Z`e&"4l+77JT_(uK8e;)4A&+iD53=KXeYO7!VO&/RPbMa<:j0aA1Y&.OFTM5O#iY9BO>itsoa1U8f@BIkVd<g;q\
%G_XDX(Q*"+)^g>nKk\I;7F!/$<)QWPJ4]s8'Q?X&Q":%'"4disX&%Xp'6,.V"]n=07/;5s?;?AW@WJhk;K56KH$F?e2*)=4nC3QW
%`H)R)]Clmul<*BcR&h)2;oW(@TE9K+VWel-C2f'(UMX<K]IW*?<'?r2,Seam2U^,Gilk)Z(>p,\+e"AOdI@@j#*L?Q&[2f-/4D2.
%e8o^[E`[qGS)_Y)Q^brrK1nrnZa^Y/KOS%/nPmVJ)Ump<ZU@2\]$R;I;GSG^E%5@`]%#>2%:B]&ZWlE.%]CnD<*d^)1CM3l(_IXP
%(sDL56NMu`5gn#6;/mUE0qC<lEnTup]ES!IdV'hIFCpAJ2fV64nqb4n\-,3g+cs1-;NcBcH)>MR(m-0m4I9M9kD<e"AATB-EM/;C
%8dlr2aD"e=i^c3)RFd0b,D\_tV>%<#V0o3M6"hM$3htGZX94EkHtJ!biV]s`dI9<B(0Bm8#QuW!i!=rPW`U"W.*4@NB`Ud_9H]]l
%d]"L6=Eu2e>jZq:J-&5r6hXXb.<.B=IHjf'L[#?-S:p>Q.-V".nk^:@E&s=81t,8(,fhrc'lakb'0O#8/2ItkRDgQck]P>]TKM,)
%Qsi-+EBOn*ZP>nbcB`"m>k+ghbEP1Q8V]dZik?iV2]!/U(ia(jH?)u/l)Yh<7Wt+ISVuKdjFB]Sq%"l^BJGSkPh])%;:uc@T"-\B
%X93JeG9qU&OIEI2HQ)](DJ3&j/Q)$Gi0qS7<.s+o_q>Qb1M3q''&4&<<n%O8k:tuF*6iX>&jO^<ELu;NKC]d>jPn5b6c-g+_\A,P
%m&S2=Jr1jb[)o.fUF05$&tcdP_3:2\U)ZH4;A%$L*(:NSP\V2jfI(JC\Iub]kn2^=6H-,D8eQ^K=g=DT&BlKtU4t"530)u!PB?X6
%i'O52@\)@"bufV*n1!t4i<T!29#t+m1s6Z<[$-A%8Be.!Mf":s^(d@_H]c<=8q(0;>V.c@1aZ:tPH%3n^^p`HZKnAm@q2qBk)5OA
%rIKa3!l)p5"a_^T_Ks@fMoes,ndD9'KYonBKIBDL.8V3[@HiNiOt]*^`&[r;<9B"W*IXQBeL9ng=gB<hH__F\'m&`7H`RX^5gmq3
%n=F?;\54rUCFZKg:)"Z;(=lJUZgXa/B^sI28M6hR.5kF7r*7pUU<pJ8dQEJfNU4:\ID?Q?]MQ-`W?GcfjZ:XLmh0cJ8uRSj-+e8n
%R=2'ViM?t3L(6A=14a4e,19C%_6f^]d.uZ4)gM5<,&"G:F2qAL&U/"T1,E,M:E%41.RobA>GC8a5eINrME$f>T*3+]E(!PM,:P)L
%\E_h7IJ-WQ(0":u2s<:pBG:>J"c$UN2f)jNa8oBV)pDW]oG\\paa8'AaC&o`r).M`,US;(lU2'=(fCB[3+2HV;SmL,?E1jd>\H5i
%K4Z!M!g&)U3#W5E`VAA2;nal4d<nO;jLasc@M^jmPc-JXktN<F?[ACM253O<fL(B_:pf`)cl`_6US7q*9*,]<i]sc)U=UYN3RKZh
%Qnb<2G3P9SY*F*58D*GXW4@#qk?HRO,`/qP;-odV_&%u8/o=/"^qCc&THZX9M2lm,iT1gICe"4-`q;Y)SRKa-VDJ\b5ttr7++^uK
%;mRLU@)>1[clRle!:S+lc(P,t,5V7ab)gX#0`jRCR)9%DqBoXqW-D8>S^(pZM4]Wh"?E+[h%rUp&_8HTUenXi*Y9k/,*`o72%\P#
%MWf0;:F&=pF3:>:E.q?:=(7F6fK=\gfFt[u^GqWpM<)#5H0/Ln#hLpfM0"pkjsMGiW`#h=Kpt.dSlqeSAce2ZdL0k,@%:uAO9]ke
%'p9<A3%/b0c\F$MY9MFAT4WUI0gNMhH8r7m7Oj)%N`m0,9$)VCf]*=PVdg_r.T3i-fcl_*jGN0c^(4M5DZ^!5XJQ4_Z6@>e!6$q4
%/tf5$a:=r3-N504iJ/UKKX]<.JOOkl"#4daZE_ON]\#8-UGr`_5\)'P?cNa)7Roied0HBK?)K3dUIu,G[fUPpB/k[l#G7Jc*3$.S
%jbo6Q-4>DHZ;<nVTh_+S5FZRB:9dgQJ6TqmLLS:;U73jTkl0g=YK;'JR1ekt)]85tj3Fq%O]`JlM/<0M)^4:MR/;a#SR2W8mY1d`
%MgRQfj7K%#NlY'p41-b,Uo"fP%sWB)XI>UX.1e^HCkL<o_@h3oZYB9CU,CiH<,WRFi0fs%<r02B:dS)IMA;e:GY*q=UF1]lm,0&4
%490!oNeSCDRS+)Z0T`4&\Y**s%+3>;hLWArP=_1J%X2ni!!J24o6b[dnM&u9E^`;4Ze:QS6,E/V>^_LX8GFE3V2u/h^2lJh0G9e2
%JcLNR('NbETU6eqV(9ZaitG\nh4q:c`#J"sN!GFX5aP+,-8="LlCg=[F[eG8YsT,HD+9s#4B]mSOFc(5Kf=:!\\^_meV,DE^-l@6
%5>`t:$T8&9&l=UV6JGT*+A._rLBVre3-]s^_"!0#PjLtM)YGMR5uW[S`'^c&U%)mV1T?o=6eO7lOZCYHFn+?SgaLQXC8:DnNVc)`
%LFuk1+Wo1,229F67R1XC%B2%sj\k*Wfdp4EVWS,7Vh"@`E_:UdA<qu4)J0I7Tf]&Zr*Tc+lq']8E";sm<:OJc%#ipAMFD0;@]7^P
%,3iq(gjt(m$>=tJJs*_@PnZQu5]ag3?9!5)KYa((W1.OQE?Xr;EJq:7>d:;-CJW[d`uF]jZ,E!hHS]*%eL0'r'gioa3^B@R8V<qh
%b8838Pf-&V8#b^i&XDS,4Q-[fOS.8(-ul)9+tq"jUeX,g<?Wki!tVboW9enS1a_S,@dkBGk3sZOKrCbF=[#_3WMo4H&4K[@`]Fb>
%m`:bOLkTDlCFJD>[1,8IT9'/7DbGJcbqn;c0pAI'oOPCA!hW<+boKPQ"@kbjp+7("ISB5QnL1Utc*dsp.+-fcXq#&7s*;a@dU&<j
%hNL<q-ZJ'ICfES\9bF6(k9\HUdF)!A!MWeK>m`^)<#i4b'qL`$fC?eR7."NfMbISWb>Pr$)26W5'L@PA]Z1kc&-MM1NoHEAJj]Zu
%Gr&="@gt.1O^krMZbqUP5#SCN.>mWD"NK/L[>,u\UaU>M@pDtq:I0%YG<o5`%md:V"6VT9RA65Pa>Kr&!KmAC8p3]Z_Odf"XI/&#
%QRdoHj/6o,`J_^rjJ-iHbr(O@mi7&BGtatMa'.I;Af<J3o2BpPW^\"SMaRtc^@Hps3-1JZ?PmDW#"L'^-O;8;F:q,B?2a;QR&ZIR
%Cn(8='@53&iZ:!LSXWMDhb_VUJ4;!_!nplj!1_/.=2QsZqDS4KOU5]'LM@Oa!6t39E0l>*SXL6SnD0e`03.*FQK6,L'nU]ZZqD!&
%^kD*KTY!=\emh\lF!(&)FN.tUp*3r?\"YFoU?S.h`[HB_,YB>n/b'3WYUC9D,nYVJO'_(>a5&qDS/(1&O6liTf5r'El!'"L$J?tm
%^?=ImKC6ik45h-[f-,JR'6]khWh?BqSh>a@7P%.u8*WK#,X@5#q/FPo_0a.`P]5a%'16,uR22A3L^u"P@]>8?$mcOQ/OWd"$kZ'O
%::rdVW(`J4Tn,*1LcldcO_T9<O@A_4.VjuY<C800r(,B]`fHf=FV6Pad]/'`BrDu3*CBtu5YAk4NS>"CW2WoT_KcY<;5C(0H=Q9;
%l7\$(-LX74#ZKb=((_qX$-tkQL;rilktrj5E#RmT#-A8e-nHu)TQng0KsBtXOdB^LK7B_`9#=pr*6;I1N$p([BeN4S;$Y0L(Q3^3
%H>_Rhj<j$1)3E2:.'O9R@%J5c7fudb#&mIh'ZU;MR,]o.=es4n<4+2@.fBSK"V4UtCq,-Sk7Il6Em4$s*96E(%qVhC4u=c,E2`rE
%$I81G^3`iX@U(,^a[Gfp1ec8%ODPTtiDK9+n0Z`8P*cUZZqJ,QDY*)IiCV"M"-2HC6qXcVV`_>6Q7/7ZYRq$3KUrWh3G0Js/'s7;
%9JhP<_S0DE&.oL\!&PK\&h^/a\Z6$Gj%)*;Q]YGGSRLe3i-*-ZELc/-3fnMe*9nl9W[@jj$7lbC@8o3?iC`r::pHUH@_`]d#rB9B
%GjYj_,gbHhQ$s?cTqi%Q'sfl0j'asD>:APDCJ-4?jl$_$[Vo)!%a5/E<[F\G@\q2o.j_F">nlmo,<!irM?9"hZ,_uid&7iRdfPE;
%)bUfg0/b/e6:Dg@BE=&3ku#,N<*0O@m&;HnXC(2U7+hcn.!Hn7U,&&g@T$Me%@&+>f+dqT/HI3>[:$Y[f[5(5W<rZbcKCZ!4i+J6
%.FBg8McCn'k@kim^r1]U''e[4Kcr)ZR"sEBUfh%WL0#oa9i9;m8\nX`k#T&[Bpo<l0XV#m,@Vls.OF`;"g(^4Z84k-*GIs>mR.@;
%5LH#Eoh:3BfI)5ZJAP8@2pif[3<=\oaC#0=#^M0OFji;qWXW';W/D"B\d'O<^+Vk&k[HgC&0-TZ<@^gUntH5K3070?.c'&fKRM"N
%$(qkRBI,g.M5"MEHa3R%Q9lN=iG-*>Y+u]HblWg+MFFtID2_U:BZl+db)\qE7E[^SM52u1%)iAiC+`;RkQje7[LW:e'%+C%fQ_SV
%36GJ1eK"Q$X@T72ftTp(9p]-"pr+c&if7KHS&h$.Ko_kQjTm0V(PHm0"WM6Q$+C"D<GTh>mAf]0*`=nU2Nkq%(8i3(=Vet[;9sbD
%8R0Z1HfCP)KSBXD)&+ueC!)&<SSJL'(^(qW8qV.U]Z;s1WSm+FEA1jYD_MJ;\]&p+L!ONcd1H!`&adTXr^L&//M8NM7%-_hQfdRQ
%V4qEiKZ"47-c0Q,\sO+9<"stT=%m*5+=?.Xmf?dee5ElpHmR7C#enqH=X"+Yr8<A]KsXggIsWKP:Qbm3#?9UA(@orrNmIps6`ac6
%1*isZ0nMP%H[>O$I\DF@K=h1P?^nO=:n4Q?.eCq2Z0IL#fq2`K,Bb7EV2,"Ea;rXp`M&lC\V0atB?.FTLI`,Sp,o5:Q;i?i&qrnj
%>%!SNaVf5QK)6=/FhAl//<o@PgiQZ6[DE#@c<Ouq;T2,WiX=4qML)eUM<>ek,3*c>1,6.7&qIgY!8j<e8UbP,Rj%eS"-tHd!.f&D
%`Ntf2B8h<_Z6F_h=G!:lIGX0e-H^^#^Js4AI2Q9@i2R184al?QFap6S64hk+3gu`lE(i/T[0f54lA,s[=WgqR_V2JP1fMprIQ$fP
%)SQE6`H3*!.i^F>Y,dRO^+)4.r-*M;(!ePCcoR;&D"J&'IL\e"-K>8[*R?"pVBk@Qim!t7p7aL0,Br4j8_bPh+VN2)TQ'TNi/'qH
%PTUBEq@9VO2Gc[f/1Y03;0(&=MFf,a#WciGA/Rj$cSq?qPXJ84SLP\;N9GFR=Cu4P5QDtRZ]Ylj4s4Rr:a8mp0/Jk)Y%eT"H/Mlb
%C$K])&b0b%%jW`%ACk8sboC].@;N[@W$`_DDYuK/<.[>^eT'!cQt]UBO&!XB=B6K_jX4*W:5rV>.oV;]Qp`2DXM[\"hWFnPFV=!n
%i\<t+Ou9Ya3%>kf*rXu1bA]e-(IDcq8nU*qMET24_['#hOW)YY(-*"$.1T1O:L+WJK[Prlcr!05YH%rpE,?gX4Xk(%1bYDpNkMU\
%YA(UD6@C96H^)JBlq-#K/FPo".i!6SA[3SU:+TGs"u!CM4b=/AGrnK%6[n1n*+))rQI=,jf$aalZCN3%P$-ppPBA:11fDTMKZau<
%6'jC2T\OY2:l?S&?UVXb!a'm(.[Y_8eNcG:f\PFSaSDjbTj(cp)1Lf2lj>:;qMnih0,9NJ`]hbM,o"Y1963fM]>*i)i9Y"0WtN[5
%'Y*E8&!pb&$\4q<mddW_;_a'kcYLj%%MaOgMo#"_C2?`kRq_5g(G9kEcUr:-k%5M7g/'na,;faci+"=\.*9`"ENBd*m$F;igG22-
%%'BU3?jI."eT]-?4UP7Rg.Lm3*[ku^ip7&<S\Q=8r:OToOb]Yj<&[ITa26h-Poi/9e^6XF'r&XUH0!mm_Gu9GQ_&N,;C877Y<"J\
%_1pg]f%V1"'jtZo%&^QYr>.UeI2EfF&I6<q7DV(>ejL0_idf#^:ulE2LuDh.:.?""lkU+-Og8#=cD+#r$;r;aa!nY2f2T[JG]j?*
%l3etX'SiB,f1@U0ihaka-?mcVFp2XK1+&+:!^52_N(g^H=LWe%<+=0hY!/';RFD7NrYN`GfUo*LThAT@CI$@-#+;:ZK?#K2Al#3E
%4:L@3GXUh]=7@l!,"Y]NX6P=A3LrmGUG#5KFkLu@[)/Sm-onN[q=8V>/)`u=o"^R,kKqktXgkIQb?20a=R=!?,RMFWR-s-"0Z-'2
%$D/`C:MC`g+eSH=^'$0$N]=2jW[&n$ZtpA!+Thi^GE1BI=HRb;mP+K6P*YHt:!539feg,S,E5?]@ite[BbH;Y&O2"&]TEEN_PNOF
%%Z\Z")S)R`j9EU9(aZ_"!X)L@>`lEo5cYP;pLmS#8WM7Z&UC$`/3FPj)lo;MA.U+fY=b'c6#R:1cTLN)MIHm[M\D(nJ@^nPZZl[1
%<g/uG\'L="Kfb$P=IZlm-^6V_KGPm::\7M`31QuH_M!f>QkDTbpPHEB-WKgp8[5>!??oo`j@ssp_L%m#nBL)5WRg*NiAK5+IUrX>
%jVXV)mo0ufqkc?8!2n>&I'F["=V:mQ'-M6$QWe;].P#4Bo,LITc>9JZWjtKVAYIJqd'59c%>r*m<4\^q]NA[N4FU")[t\X5@YkFO
%M"1)2@R]B\1BL;]Lt:RA6uf1@>60`l<MK5EFU<^[`Zlcf'2\k4l-YCkHdZtHbbLP#qg?)E1379]^96Uq3-)!np/P0WYunm0,V\1M
%TTQ9p:bFP.kJpI0*/qiuSq!'E)NO#rD$^:nNUJO''Sn'ZF$0E2lA7s)D5t8f9)qsC=tSL04K1,i/F^Tr_VRdKW80#pJ@I@kh#'bk
%.V,fb`Yib/EBn-&B1`4P7ieb>Tt^(<+XBZII8q%/`]SdJNpARR)!g0KO$6'+,I%6HB'U[!9aV^OK`WnW>UabfW3p3pVjbU<,s4me
%o+S*bP]*<ZWQVFXkQ9tfP4]0>0R4,/0_Cc+1dV(t4hO8tVX)ZRk@sW=-t*b,d"l[H*?%hoC=k%j/V(cA1nT&^9\<pj""#DcF_u_F
%0XjmR`ebbU>[n@'5\3gZBID9-,g*S=Yauj`V#h2I.Ad=W@TCiR?--;JJ-QN,+8*?X\foGlQ"RskiFr`)-CoMYeI\MB)!iam=%)T%
%/]!^+;lpD+"KT>&-/'SBU8BJfH5>e^W"cdOmL\tR6mGJpYB-\c,J>'Y5O9`DP2]e>*6Y">*BdA*LW^YL[]'NRiK6;]dhri\R?XuQ
%/Ki(I4hT67'Yj?>d@^S9^b$?K7$Jf=Aa7C^AGi1?8aKA!H8<&?k@Zn$'gioCF\5gk#7KrFNl:Q9hj6&2M7C32P-gTERF2t*0S73<
%LLWGVBcquF<]PcA$ko^4UGY1&jlHOM]3krq=HleODA`/#'Ljh%[&h;$&r>@p2jZr`&C$,>)/>UXXDh\r_L[l)(GJNjWj;k#/8?`L
%dM@20#RO14&r9$HcLh5tp]&R7[bt^CntN8MRr_n&VFXN76-Qc#7bcoZ'K_5ngm3&680upE%UY\!r6UnR"3F4FNtV!XMo[#s\<'A!
%AOLI?5e`D(DP\f5f:J,DJ6@G&A9?nL3"DcXo:RY[O<g-PTfsDABb6/hlHs;O-1kW"aIBAcLe4:.*#W+?=OcWCSPm3'fuTqj>)a%C
%Ai)3(ODMD/\:Zj#&^`Y_fnLAYr$Cp_)N'_D*DIe7;q,ijPYacgaXQqBUKc$'KcHKD*GO_,8XbO'#'YJ0E%_L8:2_($ISQm=S'mOQ
%r]rZNV\;PZNhKmi`ufUt;UC!nJKA^u@Wh?kON(,gqAKKriBd9.Qbh0^m##q&n6L/H5]Qrf;F(s3M2O]^$YI+bW'bPQK3.EYil^2;
%G9kERilg9!q3Bt:"PHRU:(oY\;ta]oI>nVE*LisuE\VZ$Z56D(P?`-A3b&Za^.J>_MAC@uZGj!Cs3Sm0&+o8AU\+L"R6QaBnE>@l
%`9K/%h+2DT<9&!NAdBTo)M8*AK#R(0\/""fJSn#PG=%.rWBo-*G<`8J?:f?@;?BBKG3/0tBWt&UEes8(r(8>DS?2*)0";39eC_!!
%IcIsNb34N81N7eQj%W+J9Q\]L0jT+DC"F/q6XJauU'oOFD/lAVkjT+'A+?X^@JSUHi9R"'(hY$lW'gj$7$KH2;(+8>@9NY+(t.6s
%;d1W>dHNrJ3j(WaHC>hAW@m,3L8Y^kU2WI5@2,]riTgCc-[ik&26F<?rmG^l;@^RAK#Sq)-J]:g"XYDPm.1TpaY[Fu+=3$n,0\Ta
%I&:#E>WJrS&PTArjtKCb`&Et>$`Y5DSM8C:&V-P_N^VGj54M`3c;:mr)c;cMgIT%D6aYMN:P*Bg6]r^P^9;VsR&Nf3EP42.H_RFX
%EBc:W7*C8jR3%m#N3/EtT#o>94Gf?Adk6.#6p5-9]q%:#K;7EK>_:a!<0F&-+EU]%=bB897$&?1%i5TZ\I!LNM6T@L31nRs:uJ"j
%fKn%8^fYS"4@9O#Y,ec1`6q%g)l>/^SLk9]#/d1%)YY6d#I14J7>("hU75[6%XE<%\V3REO_8+WUe2GaTRI+ljNn%4Ent[?a_f*a
%"Slf1(@s>6]j0"oJ`__h-s'XbhSa<-ZO5o!<D=)\(2AXR;KrM;/1a1+0W::(^1T9X;5+@":dU3VPjjC?:pe[E;TVddF,f]>&DM^O
%)D"Q+$le?DENO!`FGJ;tZ%:_UC(!LA*f37Xm!tV=YY_9)2NZUCknT[9IB!cc*"t,\U[oS4"M)5Z&[,Y:FiAb1/hI2C0k7!T\1g+r
%0?)2O!JI%)K\q(gmn-E=CO!k3PiLGprlM2)@3^USbZr&tIEAAR&s_fSe2@sI\Rr*R0mtO&?^ObYN%g*o!`_2.#D-.P^agDs7<(tQ
%XXE6Pn^(+%(p1g;9G31B432%oMOEsb#dcjg+TYJl;1$@+P@7$k,e9oa#KN7VLckCfP>e+W1o%[2[:Vs6)<Q`n&NHN)@fd@uC;EM]
%25FP:"N3>+-)?YJ6"Ru4^qGN7jZlV5X?sC,]#NG\6WA]YidXJUHTm!XDZDlGeHO@rTs"WF.N"/q6*]_[dSPg4SAVT9I:r+G^lLd*
%5ODEG>m;,Hl3g`e->I(a(N=od3/nJCR'/''*`3NVj`22+l>jfsY!>1:(t`eAC9baD(kuLVEAI`X8.D+@Tire#74k:$,52q^UlOSb
%#W-BEPK(u",qutJ`,jlGTq,pRQ@p1"`JWF`Tu#;VDU/&+/t,(6C?7/X`CZk(Ru.ll/u&b6fp.:)=qr6=.K-K<+od"aWat2#P%Ueq
%@k97;9sY;PWL+508%0rcJVj4G6.*\`0MmL^>RD44KT!k8&*6D3%6pFph(r@nJL]C?Q'/&b7(8%H<@B.3bDk;?1a^5J%-XOmJjnT%
%Nkl+,>cq?L-]UehNZ%T`6WV%G?SI&/DTYXaNX?)DDaMqu%8_Sgga\e\CP>dl'GDDd[B(."ajJX<eD0_e]V1I`4lA6@p>K>7`*1Tr
%7%Y.EeIig*j14I$L3TfPol[GEPSZU_R:jATNBP_tOMZ'J!*h"im69V[L9\j\/?o::Ic^GF2JQ'4,tp4UFmF3[%?h5&Z^E<],qK6I
%99osWC(f4DAJX286FN4j>hS1?P.+DD4JX$<4^WEC<*1JV9d?%AQ\@@QJJc6S_)EZX?JdO#+q=i/@D%=-3_"1?^'um8aqOK+(j+_j
%(2CE6q?8RIS<;?`@rmbBb2btbCO4n0$kN_"J5Qgak]M]Egi(FsShN^^O\g3Ud<gU]pXsQG)]W#!pJb,sYsu(J/Be,"mlJ1@JJ,gn
%W2)Vtpg47-2pi)R;<\^>;+FodKoaEQBtaQKAEuWT:?;KIKlRia%7!D2/E(3?,59ST)AJ3OG_Z!D5X?0A1UY.f,:Ro>7V9Ke+g7d9
%Bqcn6;EQ3N5buBZEf:-[OmkSoajd`H&<t[Ri7D.HCd*qMJl<OV=45T\UPZCob&JSIF9b0%%XMeLrBMtM\d(iJYlkA-\Z;V4EY!5o
%-oSIW9=R+Cp=AtlT7I6K7$#E&YLkZF`AtJ&,cFP?!oSnDDa,dPAA3&<32Pmh@8!8?.pO!\3'KjsPDR?n@Oh)iln$ij;kh]P,.<BA
%+tX.q(jNojpq'Jo*jin&1&!lAZ.#lb%]#<k'1;(W]qR[H!8(H@CXc@[oj#!LZ%/d-Zn,2R$=&1'4jo5IHBu,LJ&"E]]em2COGXii
%8>^pU>\2MQ=%t"M**O6WOK-8l7P7itU@&`VPsJQ*J',Z>l7"WGfR(6RVhW'S0L;lPIHlqnfb.28%8Tlam$m-ol77sRifp("p0En2
%mnCBeE+OS<B8!$:&[E&'+p^U!<qbTIM(t"3.'-nj/-hlIh/%`lirL$kjV!X;Wom-WVFl98X!%PD$5U:=^-F,7)d"4,CT>GYH_n4d
%^qLDY&j8h4&n];;GVb(jn`F7Z0`3[X%eNI6/0"pL#g+U5=9L^T`9OUA+O5'X$Q8CQlObc"K-VZI)4AJ-<lR[!H-CfO*%VLlk`^mj
%"A'i>k<$!7dG*D3$+oQ#PQjrX-ZGB5cAAW-2YP_W/?ti!9oXE\E"lrLW_JSkh@paMP%%(kWNPHA(tQuiR'r%=-:Ok*Cjm``d1ms.
%_QBqrm>!S'#d4s%)<;?cpH]kg`b5YCFlCR2#TV8)UL-]&%5/E!5[91+89/<mS;=BpdTTBaPkq:K&3]@3K,G4ne@GDo;C,KL`jmTP
%+YW@X&NY3B.pfap3D^APRmgEWd)NhS8aaej=:_Op`*c#?%W<(*.b%9nWe]E;i$tUKLHptW39CMT2irtM$:RQeZQ-OOV*o@.fK;NW
%]UgmM=@[Ccq3%>pmbVD.E.'#5!l[Qt!TYkNr:J8B-29#%5]IN;9.DEWPu,p0Gg)Kl$V3b>YYZ*<V^*<Hq#TtBGldtO9]G4-`(<4N
%:ToIS*&.%`8+MT#*>(>)]SL]fL[*hkk6\a/nuudG+hIemQ*COn1@X8$7(2[:Kt\u@rHoT,'3nDSTL0mc`aWSY7MG'/.XVq^%Quj1
%.O>;1T;l&H0[PCK:Et^0@k7rIA`aIN&^V-.atPLQTUWT)Q@Fns+O`'1nE4+-``u/$-^0>6Jr/G^FWDs:cZu'3nN'VNiqBWL,G_nq
%WPn:k\EAEQ\>P3IL]3.m$:?reeJYS"4ZDV^/G#A\$e4lBf:YAllcR0;]MsIFJS&;t]Q8TI8`hG[c@M)bHsrLcpC;R2"'X?&TIp^c
%eiBk*Sj[[A0aWe/Qm&#UAqr!jcJdk8,]6Vd)k*P@S22cA&1"S.)MG@bYoCbE6Hm"4)TFen/q![)i]P_(.SD`k*^3A0&We'ZQb^lZ
%hjh7R'S9)0D;<*'Ek$CnmYGG_3?`dDT;0Z)kE85l8iF^u1=gZnJ\JKkqbbWrB.TVk$u+@Q''&XcKUO.SOfpBTgl"H2G%-;UU(.^G
%3e?NAU,b1483#c8RPS,F!V3#lR]+@acJ6>?>+Rajcnu1ekHCk,;3'@"YalW0'kK!gCdDp"A0(umR43."A(AM"N-TS+U++AcbYuam
%=b`=(eA6O$L1-ZG\k,7C:L,u$Q3$,i"HnZkRc3*CJqdU'C=;B&]KD&#BPc>_TP[(BX=LkE:5*gk-C:WejNb3lE^o*bSqKj8Z-3V#
%Ju1)]iL*dn&5R!`hSYd4oPk&$UI7d,-#gCf1#+W-Zcm;r&d9.l3D7:n2C[VX,!B-LE&g\TNcC#4.1PGfg-nZeE^W4Ab\+0A8AcYE
%%(;Zt:oNS.EQb1<Ok='H*'(/k35g[UF>P>O`%=K!/3sB\/SB[&8-;*L6IF,F\E0^,q(9&1A<\k!EWiFrH8Nj>jk*7)<>eWbXbS`+
%/5Hr>Iocc=UQhWY_^gMj,kem>`KfJ36?-S\UVDpc>kCA*.SjP#^D_=_1fjKDM,]K;1lY05<1\aU:i%iILiQO*C(;\R1j,-rP_Z5o
%HPTI"(8-leJekAuW<13C3T7jbT0*f@dk[IV<%XbOPD>"S?O`GD"nl*M*XoXlIG53uguOJQ>]MlCb08#-j>;tFnPZ(AOYQ#;-@$Ho
%kUIat@@%U$Ql9VqaCZe.G>D9lY9b68?p`f\N]_9>?`A>e+Cm=Y&=+;**[oa`_T2fmcXg5>.#>dN<^r57G>f,7NRP/V1-.9K9ShVX
%!f.ho`'f%9GkurA;kg-'6Oq4u+S-5#gl(`".T4>NDKI'7MF5`f_(f$LWn097"!M1k)<;&:idoT%aFTujPrDG>3<TBJ/P6"`nn&lh
%jHIb"RNOkJ*tL`H:6t,(3&HctCZ+5t*c8Rp.F-.umLf"LE@XIEH!l`qL-':Y':5ua0`QsJ=fLFIC@q'(*J]3-g=6gW**@9B6N\1G
%>D7sf1^2m.=TXTc5OZe?(ds5<9aEGtd3oQd5nQ!r(j?&!)Fo.bQPe4s?;Mo,1M/I_F4,<sBILInNJAjHVSj>_9d2C2)%TG$NPUR/
%RQ[oD)/%HWPYhmN';a?CPVJ1*@N7!E`plt)G(q[\<!T2r%:D:,7/:!&Mka,2VXh]'+T%&U`N_>K25inZ-gucQAVH&['pM=/!uD40
%8V4U4CiNR=AS"rMGS$m1Xs&^5P1+e\!fPOL`=\"[K0038MHHsiDt`0'<?/^S7Ab<;S-TO$gc(Vr&lIFCr\+O)NdS8JgSm;T-Fd%t
%M&[o2+W/7bl\(?Efc;Y;ge1'n<?d:s['bcM5339H#"OMPU<_Ec't.AcLk@Z0qKo&pHStlSYe`U6Emn3[+WdU3c4i<%Vg8E\d*jk2
%Xd[b65S3)b0?aa^Obn&lI^l.b`%jM]UNgj+\>'fp$P1;C+*^</iJo#rF*+pu:^2\B$?M89_m)u].CI-L#>Fb?OTQ44)Mi+<`!fG?
%rsig)1Y`Qb=cNnde[e[+L8SdV1rO@)IWA[QIZ5$8aEI$O_n1VVZ^U=t=Q)e7W]9MM.pUVV()7l^n9n%=[fn'S\1KS.n5NC.LAjo4
%U`8J#nsZ7eI;Lj,V_',U0.7s[D4r,+HT!k7!5d!b/FgOg!YLS>/U24S[?t=Dd(p`;5Mb6'*?=hC_Dj8pDui-*?B,92'PFH61*53o
%4Oa%G4SV%@J3i8YHuSQri^C'=q)S^?-)/;._1O7p_pZ@aK,cP\_/Wk\]u7.k;[U$Cc*5$h4=,ID#T=]R"*"<5#']jh5^b:.`$4\7
%HUYWrP//;."\E/W(YN\_"cWgo/K.k^#Ou<Hal!FQ"dq+NKB%<hl@8'>Pb<)G)%5j]f"k8#I8?Rq//0(^RCGU!RG`%)M):QR/ElR:
%<*5!qTnVc;<!%Xb&f[g*WAqL_FJ%ZGUOXC:,oeo4k(b.$+]\Tg"HiNuLsp@B)R9t`*5Z6^3DbO6@:4L-m:DA)q7Nt6.tbWSWSrBF
%JV+Qe"p<0>j9A+&i.T2HE=N$D2*T2=^eo`Qjq7_8V<f0h!/K0Z'.5d?*">`*RQLokNSoD"khgh=A8)GOVOJW<ciX)+0Q';`rJc=>
%St6A;)sAVpDj8&p31uYOW[s,Lj`qc?X=Yht^[k?WIYXo6M\tUNB9IKlX(,R9BOR&!/U<cD-te"XkDoY'LA=Q)7tq3^Ol)P<<%V55
%2sL_Efm&@)5>;kjOnd1![t*k3Z0nG(q!Bh=2iNdt^G4A3@jkS"8JW-HIe3;%_9u'ZT-&upXTa0k[o5tj#5Bdq<;obS2\?r:]f!`H
%3f6gbBo(XL.+-=I,(?k#f[!1fAj=73QkR7!E^Nc5$2I:SS'Xq^ns^[Y<-0#=2ljG\8M<@,&6(pFZpB/i$eG[eMu8;7Oe<smaD\Z[
%$c?,0h_'c0%'<@e2[64RMG)$/\o1L`CQRF%+\fg/^P,.R[.?Ub8QYJ!=l_NSVo56BOPf\`VOkDQr2,r'<Oi>0c.".@j!sVh"W[+[
%jL7,$760n-"ZZ*Vi\sIH;cuS=UKPIp2TTf]Ul1,d+M[/9-$J5kns_Y/c*UrA3n7\KVc;_9'HNlVKl(o3e8eM()rPoYMANJXI3T?!
%U^/RA^=1HII4OfV[Gi2#NSBQ*>,$GCM<SE%I8c\,*OC<FUF#P</&T(5(M2+mA::AY&l9&&RuCka8[>"-kZoKAVK0E0T-N=PMYX-e
%N[H=DSFVZ0n<,A&+l=[ZN2eYIEF#4Sn/Us-NM&[^/)ct$7s\V]_D`.Ne!sPbI'_Lt,K:G&M)h"UbS%W%*ZP?'XUOu"2$DS&]pZfE
%m4G,01;gc/[r]&<$@Rm7-efU7&`p?l]pX-%&Kn&!Hb8pFE#!45fnU!=etB]fT@)G^3SI\fI(j3uAJRD&.oNpG!*d72i2U-nH_X\Q
%`g,r9&u>:WCi:(+.X984AhaCq%,784#SKMqL($k1>+3s`Ci:`2l!%iSh@/Y10R+90JhV.=T+]qKJL'm<2K3R;AdCND^qKQ/,S%3f
%pN?][OObu<S!i*3nMbE*`cO14hoXj6%'Hj?E59.i6KOA]Ha?,'E#.EhoWf2J/#@SKWDofnVrC,HqF788Q9!f+4E&?X=1gIB&d;k9
%hUnkSPC*]*:&.;B@Og4rGL89mDj1A/d[fF3;(TS@ik8J["fT7aZUE6'(%L/1o.bDhl/%TC73.bKO9FY[Qb3shRn#!?Zl$Zh92r5E
%2\6H08qbJd,^`6>kHY`7Gr(<K'uDm:,[X&unBJ$oFKdHPD`Kp.o32^SI[h)AF2GBhP(hm<Qq1JGYO[30I.OG'-o3#:I+'6E;?SE-
%Rm--n8JL^>&t'1t`]&h?,@VMI&fT[W9-M[RRmJ9UN,K"*O;l?9*+DR@f`d3,[LW:J`&D6u-3Q8`DgXM6N\lQ1d>]+lHrE<T@E=?$
%VK.>OTOE5+\g1/nMIh1IH28FjI&j\%aVj!ccm/gNP!:g>WQ919nP,-CbjFQBM[fG;`&A/<iqm1%T+!W@86I.NM8jTo20Y)UVLDY\
%GpqYk,E=;c6hkglPB49*pgtol]n6aPS*;0:]h&Of'`U<T3(!C`XXA`EHqR&Vp\t*G:cMB]?$8o#KB7Ht(.m8S_0`csM)^*P&nqnr
%7T/tQHuBeLoi_+IG_11m)o+C)`!a<_pdVN5Cb+D4"_+$%^pfQTi`620j-e+iB)(5eOO=,;nD5iH)N\EgpSL6@&R1"YSOVn\BrKii
%q2?%@VgHIuYn(VaAC=Hs[WdBYHe&#UBQ'+rMVdL0K*"=W.G,U=ie_?gne2%&YgT"GWSWaDa#2DA5V6XqVK\h-eLf32G1Bu45i'N6
%c4-]ToHk&0%J!CD>n=mdSiCXm:ni6uV$cfhFOR^XDW%iHTWO%@N^M@5gM4HAKe1@#(6h)@H)Ybqj%/!@%E9??%`7m2'Q;/P2\9mU
%\S7$Y$uZhNDSm[8)qPr92cWb4nM2j"n&3VY?fH:M-Kgi6G6<pOfd.Bj%2b%C6]:SS&t;nu7h(GH3#d$bljDm\8FArMWXaDE/YO<6
%>-o!^MU3ta]48l`Q^-8FCK;tom7%+DB1pJ:8-KdPm"UOc&Ln"<*Lg2:5^$A3SKW.YN(5\3!HnS+C4YL_.*YXs9'I^RlNGe=[-k"\
%^l]pHGN=W%>$9ZXqpO<9TXpuI;GaYh8q`]8Fi+>8);:>(*U?;+N9Oq0nMJ<9h2r]4/>G9^#h0K]Rr9&&J8TaI7KFs0)o)8"&;Pst
%"K#_fgl^P<)`Dp!2E@0e1+$0,k)PGsb##V8dSRf$K468QcV!<=;Wnl.gkeV'=^lD!OZM@RC8iu`%?VTYLnTF//WcIcd3QeYgaJ!N
%;\I-A(b_3gN]SruE'rYTGR)KG#0%,;34$+1;;<V.k'g(b`eg0s2[+3Uhb+sW]MpW@i8p>2eI6"^I,u`A+P`r);AfZtNh`lk(^@HB
%7t/^+Qnu6L/;G=Bd%d'A3N(H^O0b+W[I[YME5a"&bTODm&i4^J0Xt8@;np-+`Z?XWLLG/"!AP&g^l@ps7n/?MSMcP>(5q)4>O`XO
%r&/O#M4nMD&N#S)flG!f-4_7sPdt=tFA57!&q?CAaoE%8Df]lNMYIqlD--ZjbPZ4S'fE*)[5oR#/oV0Ur`io9Z-q.2"E7<28@hn0
%^s-?"?l/mQ-mX3o#B!Jf-ttu)#]?ZZkg3iOgur9sL*F-Yb2dLj&\.??,QuR-\FXdH+`PUu:LoqHBRlL0=Cj*>ms-6R27/7g8-P?a
%X;D]!N?rP=5WfqnJX^)VP1l[%i'pAY[E]>n0arc"AJ!W.#/qC]`8JoE?c1gaGW">'6H^M2,8MM-cJU;h.ta>%TP8<u$uV;c@p=f+
%9m-_hU^Vn1,op7t"Hol.0#Ck:8doSG@J(F6"udP1,udtagurAWi@Zjp&[OutRR(m;G"iPC)OR+2QDZKg)ienbEr\uDOMA?%)#cDt
%%*pjYr\bK]>g3_-Ru/Ga46S02P#-dB$c-=(ekFJ58`e26>Aj5jI&JDf7QGpeg/*N6)>lC=SpEkahbFi;8h\Q#&QL)uCkZdTYoK8c
%H^dl%I/+t4)ju3ZjfRT\\:B`b@)1O%$&U9R\)U#G:4qA_9uON7DT??='rfqI)5W5CVPYY?(pQAEK47@PTg[[r6c7q\i-$)U1qDVS
%!GJ7rVa0!+c60:FL:0gk%q61d[N2?!Zcq,-,)p=tKA)?5c+^!HD)0XNM'C8+gIuqT#`kHL_gOKa%:qWl:%Fr$A32P4dj?E4mY]/n
%@,NFO&i]r^a:[1rTqF?>+`,&$aJi_NgE>BNCb>1b@72Blg>KAi@\C`cd'WrhV-AOe_p^.0NB8:''oa>Md+TaKUrH9^\3e(nM/31p
%en,7Kcd0/U+@"<mWeAnl['CZ*Pc>aY>0T=?ENimPAr3LH;P%5(;]EGOTjk6O!/EM!i%'^VD<rFi2dhHq@A#?rL$L#V\&?bXEK2ja
%V;g,pLZ)sbrIqk/$)`b`n9Kbc*@?(.Gj[DE1D:=G&Z-Sg3qEbQ4#EFr6##A=Hpq]1VKqMgN2\NWD/<0k_*9eN1q?0aUCFb@ZjB@P
%`nLf?6Qt1Qb"CHrbg9,06-h6le'K@S<.oE5WA2"Ud"[Ic"<B!X4,rn&L7^%O9iI/7hTqA=9B"R')B^Rm)[5A<3BEWF(*5"83nr:P
%/3+ZPBk43-^tD:qP%H+$4#I";K?[/Nik7n-L5e]X:h5Oc#2N\B[!@1ra+&r7c!iuVWsbOmDR$b\Wl,c'+f7ZP7WD%8JtZe?b,$=N
%r&&<]Rh@QiE'o=kUI7p]#+Fqj)?<loB$8RN9lju+/`?8o2:-.?6E!CZ+mf9*7XD!OBK!!<h"(q2qf@<E<uZU"BQgC)aND`n1_jJR
%7:q06^sF2kb_DYH.RH5kO+KNNAh1dB7Y*sL.kVdmd7RH6AM]E-aB@2qiE[B([O<a9ltd^$n2P!8Yc.jY-]u`0P[-!$'hR(@>gRW2
%OKs/9UORh<AQ,;&iO1c6RT`^bLFXdB0..&@j'7)6XMLZu7LE(kIhE,7js`3./Y7^P'KOhT@ZdTFj^b^^0r)sWPANrbS8;FZj;>eV
%`\_9+#0Y,C'Ga6L:6Ca"@S%/K38#^RK<bYl;flYJPsF#elTD.:CF,&Y'([K<CfXriPq^m=2la"i-JPr-BFH5W!AIcAMjS=H#+BHt
%R!'m?*DJ6@>Rq^*;o3'D.ePVF_3abL/)fn3PDp33as^](H(pU175<IJUB5l6<gM@QR_hUT&gj)\D#/Gs:,^D:N-m@ICb[dD_%B@!
%'f#ob(ecj6=HXOi1"c]Z"mX!/d.;V(&_pd"$)gM(*kU&\'XeW$Rr0n/^F:M!"hm=.W?pVj!p_IJZ=-#KDGX"b]N-;GQbd4-NdS5I
%-C`*"aD:l6]r%g):CRjc<UENfP"h/YUP`m,0[t=K6cm@4;he/+P"gWg0q<u]%Dc"S&jscq5!fs#,tbV-Ulm^8ACH$*VPI+q=i,]?
%&g^b06DGg(A.)_&PSU*+o2:E&.oN[PQT*FdPj\IPSsBd2S&\A,_&"QRiWtu"3@1.H0Hn-*A4&R.7$/Z=)l<C)JRh]=-L[gnCmIoN
%<.\YU=QkYMa_!^3+:?6Qc!AR;P!cO#3YM(E6'1rB1AV]JSJRM5fnEmhAE+8r\M<GdlCu5-TErZZJQ(Vq>LCp;R:0Xh"[thf/N&2t
%SdEAs5RH+em$7t2["spq?jPFr#10?c&@-#l1q?M)a%mJK.R)!9!)k5*>=-E.4js7CK8.;^?TU]5S"X$_$m;$^G]YP=ZGk9REH=IT
%W_JYHOA-`tEYOU0ZDurQHk`_eVF]&fJ8@tMj).[eB,%:h@K>(0M1"u%&7TJnM"F[OA5hYZEe=C'ZUAss!G&N%r#glMD"[o^km!8E
%)a'\Y$mHX*"c71M+gOZSdhEci&]6meP3e?(aMnQ8WUEH4CjM^u-9h^d"c,]YpfBd?eM+`'*C452R!a+9aCYbUatU,(679qh,F`nQ
%&!::2;]?s$kc&9rL,>/5fbB'%bo*752oQ_=82^no@;PLQf]C0i)b;kG^bcC=82`[PI!!PrC_Y'[1R)^?LjPJ^A?ud%[Rud#(:20m
%-!PnTEKjD-km8f,>DggXo^HDL\Y3QOc\O*2V.A%56ijecaekMsO9.ekAqVtR-k6(m1'c:cPptBKHF\aXe@:GSCoT'8+gU];`IB$m
%P#-uLOT!j0i#<XspuS&##MS^XiU].C22fLEGPd6h\'VB)bsb]g@n2Et[;>2#e^G:nSLEfu9ZBh,rFl#X)VUgIYnJnr947+>b.ckH
%68GuKlpRU`b"uo-cd?;sRFiK4TkBJ>n8P(5]L9[rG[_'!L>Njb4%#G01d\^j_a\(/ODN%A&IIdE^p%Ot9)TtcCepg\/.3C#9XJD.
%fF/ft-%&I`,@_^++@0E\"%o)pKm-586+R?=7\Br_^4q8WOAm!Jm@-N',mlP8^8R/P&8XBk#>*4V#-o^1"0haNaIUJgp._Q"K>4:O
%922]Pr>Gl\Z'$R6)W;4#6F*ROoG)aO6=6LLGXOp5p5Q\Y!FN`$"t`Q;H]9ErPDkp!0Ph_<!S,#>?lL8[(STH36#@P&2)U/'S0P5r
%R6p4^M0KL,&]Jkp]S=0pUdkDG6:L2==2nN9NhKE%m2FSR)/ip7\20D"-.[4;5'Icb*L`4pL3+I$7TLjA,9*A^BTR<FNuJuYQ#dDP
%GV"?jpKX<=*19_b7`WZd15tPOP?@_qi>P3VchO#=m_ju*Z[?On`^Dd4]JVN+@aS/d2+.^joaT[p5(XEj;e0+-_3)`dOD.@+RS]7D
%<.i"KK)4gHfNMbIJste)e#PdZ9JjaYK)[5dXWs#8`\=MH1Vb-8,DD&?M:TnA_n.AE3Y1LVT!ba&_I]6[@+_$)Adu1(Xe#`/*Vqdb
%f<VL"Y2Oq%8-YbZMe>T3TlIk"JZM`6P=DYoCZ9/Tr)&D1T#N<,-&cu>nL'W3%C&Z+MQ0O<B(]+5D`P]R"r,dl%Dj$r+O3&9YkHUK
%W!op(D6?Cj=!K+^=Jq%[-;mSNe2b4rigpRkg5jM8W$XhFOK;YQ=*"YI@iKV4E;o'nDSXd<hHo2B,J$WZ0JsuppN5""C:+;9Qr:DO
%=f,.#Ash+&'Sfjd;EmX&9.^1F]gr2A/?]rq9TUC,C<r\U/^^RS@=SrV3NP8<Co:]ALKnO>kV5S-1P(90`FatOK/(/r</gqH.;_*N
%<JLkWF+QO(''j8U)5W^8BWW6X>j%@:PdX`(Ag,]Uk)?d.l<'cjO!(I//N$Op4[E&Z\oerY[CXYLq:#]]@TnY+9j@u.@ng05670#W
%&+'ZBBGNNAO)`%9'0QaB342W.+$ih`dooMDN_MD="]Kap@rdu1*D'X1Nhobe91u+Ym6P2?$W(RV>YM(CNmS2h[7"bg%p)%73KP/Q
%EN*t5aJ6c5eoQdD)D6ke-H^&P^.MK37dV'b_6BjUe?;NM78Y<'09S"g$<9&"EHkXs2'VK'L0__oX4OqV:l!O\\2f52k;!83Q6=]:
%kn<kRKGo0jm&V#b'P_rl3i9j,CXMt.<+NoM8qK=Gk1G6W9C6*dA:V'J2Wo*JTah^[=DAu."qkPde=gNFKSp+N-ma6eK2N`q2hXps
%#!bnO8Y?5F/cbAP8O"4tRYXdZ%=L;0e>ub_:PZsg6.+/c!RlhSOJcMD'jp\ZGWH7uOJM`!\A1u`;P5jE>8o)f`D.e`0mcP:\\:A"
%6`3jaPS.Qi1eJW:@Z]'<akC3[dpVWZKj;2b?/9f9DAlqtU*.s#p]F6C-.m=&BZ=o,R^QU86]_N3K/..t1`\Y-s-Q]o6.7H"37G=/
%KUF`pQ80KH<c?sEE)>\*\ceFU?a2#9Znub;,qFf9r7<-$g6>dV2#5d<ORo;YK4udnV;Z5BoHg>,a.XF#%:'kUM3<r.ZE2.uDqNLC
%nYn8dkr;YCC5FJNcBhs;A$@=-[tEX3@hr3^ZGfE`To.e5/'S.1J<d"OgcY_(:(0!QRF6qhM_dn<PGc+tPQht'%-PcsL6j>@T8Jhe
%4"7pTM'd'WAHjJU"=@u+b*#MAk*AlmLtH__kA#ST,o<^-8Ya("NI;;"AgoVg_iY-fMr$(DO\U=i)+t\.[$XQ$iXLIpZ("+V)278p
%5tHWb7NIp@8Ai,+6<"XAc#;nn8,1Jg+l=2cFK-]E993]O,]V69GdKfT/NOg=PX[Ym3q^H4\]g&Qr+#Mp_+(=L'Za+G$hqc2d>>+>
%)e=&bjtY&72Ch-4(_&E1@8\U/)T9'4/mt@45Sr)d/ikcKAlB%p3n<O#(/<ug,WNYuL(2>RN7Lgti-/7ZdYTr@BT.3K'Fj)i#rEGV
%V'G+4Mi!1Z/_%Ff\bf7"b&n)KN_Gt6@78k%&gB@i<C1f'"=X^*`o5QM$ulc57`kgrO7bbj^b18VUf\:DTOJcK%8)tK!0dqP,ElM'
%'b-/?Pij(g6fUGoqGGOl`js@`UH.WAolhf_TgSJoYu#+qSAHsM6H9:0?6DSP&W<#P",,h4:1O5>!`#u$T,b[5;grf*S-CQXi[BRJ
%o@+b,7p++t@AaI!jqgO=TF_e@*N5TER03t$Q[*dM(LrH2*9a.AdE5N,]#GNgI2q'']DoS2^IrAAqg7-N]b:c?'YJqHl`OkR3m?H'
%IU:3a><CM:$@hm/s#iI%hcr\N\FKF3rH9R#ec5VedJf+!?@;YBag9i)Ma*PtFNU4nf<5+\hs"a&SBkNGhqgI8[K^PIp1=)[UNN$;
%mESbI-/[.O/Zs5Oq&f.1iMV;Ds*-Dbdk;LuUKHcA7d!T`mC(_1]>G<IFW:3U/UIRun`Eq4kKikQE48/L[,.`"e(afIC(?SWLY]*!
%24&Z>S_^Sg%^]<np2Ej%IAPYmC1WY?4/q>\`r%^N:&%\]$(j]=KVc*N9:^^k`d@IHVR3f^Ziu_4<dWkH>8)dIrQW5TX4qH]r@R*1
%1V\[Xq+)FRm;39d_raN`?D0@]epH*<[&U2LV:q\Z*.$r;L@nc'_bQI;bZ#Q^F1ej6dQQB8hAeHQW74>Vas1+4(S(!]Ao0F1Xo&(J
%a2;`U<EUo7e??C7SC@W7Zkf1Fn$ZPo[:g7\rUbOU8JeeHB6R2@T[drhHi4;"P?/dnAYIpCBtfl+1=R4B6T07GrFY@]^N$L4DH:IK
%V$;p,^9$u#%sim%YhF3p7W1TgpZr\u>]"?0DGQ=6A([=9;/U]ERi^[;`ua>oktu?1hoLK.cEgi(0KmWS%s.boF"5DL#s?F3:_?FJ
%EmqAMoIMpab>$<'?[2>P0%O1.;KF2G/3!$'J9+Jn7Z@@=B=[\*X0](cf]rDq2-lUZL<%'4]=j0(pcKC2Xg\4BX6W<16Vao_W7nZ4
%3BV#RqM1u=;+^j")M`r2]?snJ\TQpa2cgi6>?.!^XV%`%<SC8\<Sn_RZ<hBoN;`%lgYO!YL8W7M$(gJ/fsZa-jW0/onE+N[3kbNp
%5Bfme\!6TS:RruH6*3)G0iu384uhnI2k$k.AtrO^9%Bh4_EVeTi1SVJIX';RR7%Ks"dp<h53t-&/%t@Yf]Z@Me`W9XXF3k:#2]7C
%T\"%OX+C'm'7/T(%iqRb-Q;a.Yj58'`gEBRZU9/;B)Gr.)1R]P``V];]>H#H1gDuSh.pij<.1K]_aFhp(X=:F:.<4U>6ZQM#6/NX
%B6('nj0f"g&CgERb`]XO:6I)Dn>iq4+'fg8CsRGU.<.ss#faIc-hUK=%IWH6d-.ro]DJ^='g(bMm>U5\8]H3\r.aq9&a>mAl](Up
%-cG93315Q[o4WFt`M_a1X2!-#Q^gT\VtrfnR/QPLhdYm41\L<![Q3aZo()Tp6u:)&'ma]OQ+*#jd?ptPQe(#soQm(iI]N-c"`r`n
%pLA4[.`=XI)dD^I.T=Sk**)0>[6'?t7coOgB3m,jZO1Q:(n5?,rqOY%a#B2@Hi8TQ?Dk82@JLt^A&ra0)uF45+tR%:.:fSRT[.`M
%qKM#cMr76S&Z0aU]@Z,fmh%s%I&dQ;_-X>^0JL5ha;Xf`I\EP62lfKePHp9ME4):Qf_u4@oZq%Ea*-rHb/Q6rJ:`u4FGd,'eaS5(
%a!F\&<9*F[E?Vd9bmM@'@Wn(fNB,="23LGAW*ih5fkkiCXj0D:dqVq4)1?tUW7n^[_<c:Cp3hD3Lj,?=p>DUmBX[V=h;Qi&_*i0$
%qi0rc'l:AnERJiAk+C@?5J![5cYbFdX<O:*MIX=DNr:#!6)QV$Hdi<$KAUF'><st4e'f(hnQt*&ou4GeN[hl@'?U-MTIZD"=^RjW
%(Yq5c]:te?G.Z5&jpKZW?&+.^mJ]O9:DK[`e/D=C.]a&4#2+brj85J%Zm566e]:5Ccc2jirKSrI_a_E#E[!A2eYI)d>@Aj9O<a,]
%'`We`B,)nW9Lc549:JHe<^hWjog[Jr::o7q<![>S2EK*\]db)gKrUn_<56C.D2"+][FH>,s/7dBCt18+TXOa2r@3.,X,UpkWc1l)
%<B6uO7XVLTFPH\X(9O(`l4#?GQu,$THD6A;!NgX04Ai+8Al@+p;brWtda(r4=lV]t0=3*!o-/IS<+2"cTI\1"P;@/oLYnnD4VR7A
%;F.[[&7:YoK51=4;(ffLft9ki-rh0AogP;FUAPtBc.!P@bg&7^31sMM?^+/5in3]s(WdJi8n02:U7QI6PY-?Ym^(rJqP#f"OtTFm
%`_=OVs-cuW8bB!]e<f?#2+H8cP7>j=jP_u`M91BK9MS**e$g1U)dFe?iR6HW<AJ">Iq9):,jo#>1k&BOccCZK(G>OS3@Qc5FmV<W
%=u9O:.XZj4\i*jGVX)r(XD@S,=ijWJ]3+&r$_9=aeY]D$IsY1b$>UGM=IZI.doGd"]rDf!6LREPh]B7&;W/;e;j6Q9)$$S`kkrmX
%Skc$fT3s^>VUMJ#B)Wb&O@#i\<cD!%GC<?1;mB/C<3=</_"ID.Xj26jn`fuX@NNR,/GEBG]bA<Z-Onq\mV]G@gYJ&,DjK1i%U+kN
%C*f*;U$ekJk#Oc]9E:IBXQ<n`V)`Gg9rTu,U0/:g8i&F,QfdYs9W9kDVpa)MgR_>b_sH8U/c5S&g!A?$DeFQuI@II&d@EPJ6[Tb1
%dHG'$o_TF7\tefAXd!LH@\!4o2<Va<`]p12`IH_+1A2m^'kbb#YKtJMr]tIa*F59ZT!V8k_t@i1$c.^7h*eCI(%an@<T_E[#cC7Z
%2Orh4<,.%M_?4"r2On:o/%$N;ml$]c=/@gb,?/[TgV_kGf!*:,14d&IAW_K/pVufA.MK3[IO"XIL"IXud1C<C^7?*RTP:4ZeG_P;
%rta?H55*kGJ-X,3/5PZJ;u?%5r]@Of:@5g:2ek\G^XK80'4_'=>QkM>kM33g@nggSA#]MIF+)0[ju^!H:2R`.(:>Xug?n:p_a/(7
%f?GSIDNusMfbL8#CnFn%:@HN8S(MHDljg?/o1]3E/%"g0"X?)X<F$J#.['-k[7;Q$<*79RqqIOK<4,ljl=7R%NVcJOe,'2`8sNU;
%eW<qY``,;`b'!`9V!b@lnP7VF;`36-9f?"8h7Tt,1-)8fhW_LQh:n?^fXdX@?1"3>m6B=<:2>*dhqGZtlSlC&g9mjTZVbPU8Hj6K
%j6u^@iUEXJMPX`pC6!$C7MVB@l=@Y0e=RK@N`]#^g86(R$)EQCqPL@:60!fZ4VKjBZc2,PCK.1RLTslD$k?Ic9LeAuZcI\0Gs#%C
%FkZD--t5EUA?;\o^?rVK%^O!k\JgiB10(t\'e`M)b>e!e<P2!?02oj5<:P"k:'EM5-sfj\6iG2-nM8*3d&H$d4GoKQaVPc6cY%&.
%8/lm5R:m&X"U.V*S5@p\.9WMtUJ\0fP7="[!XKWefL1u_9OSTEi<qZ"9oQ)\eNN9=Is:gFWB<WqWt3f$m1]0[e'2lk(US2>*2b'Z
%n^nhZ,c3<Q*7&oc)Z'uLqM$a[HfL@+FKl*FkNLMHI;);\)V$P?DpXi:f%t?32R[p]:6X14[&Em0e>[.]rn*#0'-GM++]7=O8S`"]
%2s[Zp%BV*sW/tk]Q,\/sN;`%lgYO!YL6rGKelKa9H.(jQF11VRGR!r+hS#;3JT:"DMjc2DH:#5_-T'G!/tY9nG?`T[LMXq,m<EMF
%V)a%6[jl[SBt]XGhuAP^o=Q#Ckcu[9mg+X(C5o/9p5Vu7c1MoPf^]3p@mj6Y`WViH-=2aq>Q?oVPr;>/(h7p@S[:CAeRM;G(us1'
%;a&-"O"hf(N;pn#)(2e"UQPl876dD]pD_@cU[tS=Y2Ya!f:D_#m-R<kUukbPjr%$Ds2M9+Cn@G/.igTHmq'+0.I+EBHXo9=5r!DR
%TKV,KrTDijqkI%*'e>?F;9hK3;U8rbd(8+QI6;=gRoPJf8*Z0,ke$'%rY.1gBk8/BB]t%eL8q<h;p<UnHeT5joF76HAb/S(S#;Dp
%ZJG!:=4sHQD0.A/OIU(<X)br><>I^2NRHiLfV!/Zpj%/;h`U79)p2\@"fM!V.L5GTL9FT<-;95qp3]/4;akDc;uagWpo;i6WPb&c
%mZ(V1?)>HYgtf#''?8q_.i1V1T>WGY%r%>aB8L2`Akok_RX"JU"k(@kE&O.M<P7q,ki,)]T2*^Qe$IinQau?pDL.b@T&uoJ\T'b>
%9i#j1mV/hUfQGS;Eu31dCjM\BSF]th#f["=k:3iRHCUHGkGH;1l#H._aYH$)<B1#3([F%^WB&Gfg__'pk1pDaTW?Y"nNYI8l1MK.
%qMcuZqF*Wp?*pC2'h%:8OC@eE\;C=Z'9WQ;ijf\#53A([0nESd&N9(:/7)ZgO>.YbF=.a_,ZXZBbtb%EGIo1j]n8e\4oBE&P%nhf
%r7%^?V:Ksf)KuoPZ;8\,Wn<n7R7?p*n0W/k>r_66Q[s(p?HH>m_G$eY&[#jNJf[uGf%P<+oAs[)b*?;"q7Nbu&rp9QWWDkWDP]&]
%N[=t&5A_,a2Xoo6UM=/t$sO[q7O9dl<-qTHWo-H(3:(QBR]WU7.T`5`@/j([.]9,6R!kr[U>63[n94a;F0G+XHiL=5n]]Q(<Q@QD
%BLAmsp00t.GG4H'R`)=@"AGD*,sJH>.3gsSAmN.H/RO0h^_>PX-W6DFkjm"u1)OfKi*89f-Up.q+CpsrTAtn&q'@8$?\M5&]^<DI
%%XQs^\JgiB1)5\D6I@_+MP`/V=+?>AS\l*m'O<[5r^Cm)5*snU'nW=*mP!sr$6.l/Q.`H%_T>]P%4?^,8o=(<]+$.`-C!3qN:j/X
%n"`"@2RoMt6_iN[md@P6U&??RLTIZ**WOscU,aB@g;ESQqns`?FE8G^"`<$Ra!tqnDN<c)L?[h[#mZ\$fH@55.+>kLo(U-qe0%PN
%%?@L9o53'=am"k)qA'`)+tb"Uk@/!;^X,BC1KcCFBgBFh3T$^(fl:B@pD_fQ.KD7O@L[NsNrF+T:U]?Nf(-j2PK[!rKV`YS2m!><
%eUpe*dO+g$fBMt#Si53?H^VBGda:KPI!kgI\5CPFM.^AC?N`p>Hj,@ElmWh0:<PJWjui[1iaG>;q^349ET)<2^1=lNJ;rV0o&nXY
%#r!ZuK3j!_HLlhEPY=@"N;ZRoX/+4889qf!;&,f3-Z'Vn]Kgnm(@8NbXoA9BIt[ZZEU2RlA$\er:5!f=X&W!dZb`iGWZOmA8%b;G
%5O::89]RsLOTsK*>]XWrI@*0b%^T"C1\]l^B$2EA%cJ!)+i,i/NUC2d8g]6H*:jtAol9CbK<a$SS58XE#WZ'LBsa&q<:t69n'L05
%WRI9,E5$G,:0fEcNJlmWH@p8c6+X_9juVu"Fgl0B,aO-4HN1(u?-hq*`mDAa0=Q,Yh;Vf@pOCL!ppWZj[ba$grr&?9Ej?Kbg?NO`
%C<QRn_/AXSUYFF8okVnN>M2*0ouEO!Ff!LM[!-'\e#G'J^!:(=X;q]cCA0fLiSq9!K"aSFg>s.G#)tY%NUY6h4'eV.:mh1`(SI#m
%VuM/C[nYt&9E!fRLu3i$^-1oXrp9279Y.8tSPOl(j8FUiChPrSL4RRjCrQ4FALf?QWB]`ej]SjkY3\(#h3q<RY@@s"=O]AjO2#L@
%fP']DES5ABcu,/Pl1amTVdJNTQd53:<k`iiiQN4l)nouCHeBOqia8OV[^"b^p%Hl7rm.Q,b's2KQ2Oj,S_DQH0>BQUXoDs^I"=Lo
%s4tQj0iMi?gq-b"Q^pV!__I3eMsHB%nCVodoX\7^mGUW23rNNpp5JHbHM_]7]_0UW>JBB3*S@BoB1m?Ihn>mnCIQ"G?eg>p$KM`q
%.84#c+a!mr2BVdP^Yl"boP<go?g/OPe33XomE>$@B$FN)k#(O2X$Q(.+0Fu&XfZYlk-+f]S-@eoOs$bb$Vlr]WJ_k8fSsk1Kd_&k
%,l;N>L/EO`8K,*V;L@.8iE&&<'.nE3h5u2!NHg43QqW4bjgR4W);-nArb=;$nM9Z*PIBrDb1=feh!j@%5Q:1bZ+8W$1Hm>E(I%6$
%Z7p`kiTP]ZiV9h3pTHD!^;XREG`eJ+MuJ;EVi`'27>o%0M7M?:fc'%I/GATueDg<`dadc;N2VZ`VXlCnDV3Zgg:ZkqDVpp9g=&K;
%\nHT0U)eqZ$F/*?h8I2AIdB'7'aq0MZ@gZChpQ>WG(StA4^GA.Gfa80rqp_RGlQ^T^mQh.dj9@PA=n@nc5,ET:Hb]mOtcFc5QpGl
%a\&7.nGLYNRa1q.Qg<mVrT25qK:c3e0)N7RK9oLCHb*HXQg6;eYeqa1,\\`UUEE6@3%P3,m*0uuiZs%<,`\WBG,NOVFLhD1ja,1b
%\,#UT_5GPKT;Kg)FLdtqf3bae]1.h+AEtKIFh*O]-sNUKgWii8)"Jm&NMCI(>Yg^P04(g=2IA)74-0Dd\G10W>Yg^Pl#M3djnbVA
%rH-HcYBkL'if.pWj-t\?:,6*sVi0tbdJY7bO#.:/c/o3r9)gfi9gbPIEXI"KT.V3OlpSC!H7CC?jJk@X;0f]nfW%)MOhre!X7^.l
%h&#]3opduO@@`Im3;)rh)F[sPTJVDFa"997/fgL(DUseberA$HAj%"Okt(Pa/_U0`2[Q$'VSAN8HV*;?Eoa$1Xe]WiZ?*X&V.GRI
%)kHP6gl(c<U*se8>475Tll+ul+$b+6r=D;r&`ieJPJ;s`E)AejS4">9$\@K[N`#;U8`KQ56(nr=oRr(?rT3*9i\,NmjdRO#mjD3q
%_JJ)IWAZ[37-^P=9eS..:\bdBfDH0n,n.sRo-6dj$bd_ZP^OOldFENY2f;Tg(jN?i%<9HNj_K=o@J/0)KWL$fmVk,4_]k';,Xp>^
%NZU`&ZOUOGYq"gN5`!V'aTE`UYQ<^:dh-TdL^8SX&`4S\)#14"ZPc9$#fl$MUqc$5UEQ59dI==JL2d]m)j./k5H*UHg$SO>1ZH=G
%cE9_\5Gj4U;(.&lO$@4](,!@J6H+XJq]Pd=&p^!IDj`8+bQV._QgJ4Zojqq&KBJ^G?=Y()X&b1<Y+=+'`F;Yc2UJVlX2t3ad;!4`
%k64%^[l#"i@Kt(1Fa#mKe^d#E-jS'ESj"u4XL>HInhV*N_^f%Pq??M$l"2SPfdg^QmU_H/9?S,Dd!`092Xl1'4ZMX^50:"[:-$XR
%N^n_DG(rY;rnr$mq!5O1K^0VaS!Y'#F^F"'S>bW.<'L>Ra+"KokOQZ9NdfdDY;Uk^?TbV'c$47,b<+Fm._1;*_aAI7VI@[j6H@(7
%EWbib#`Lt/kRXR#[4o_*rM"l:9ok1;Sd6V\EUCB1YD$b_cJ`/%R+"CfYL`70?g/'r_KU;:bX4IUSIfojoX4u+LC$YrI]'kd!jd:<
%%M-i>"/`-uq,_u_]N9NP>V?%:D8Q+2QUK<1^"V3.;-uFW8(VZeh)iB*DKuoe`H"8M\[g7.AR4U_NkEYbRKGn;hoe*kI!L!8b^3:p
%:C"m@)]50Zc@m)OiAWmnrk#h3YLg[@nh5.TIo+,S.$H0Y+Kc<$+cV[TnJDg=brZ]["U%m<fB2mIVre4j$@A@OF&P;\(D>VFrrXN!
%a,Nt8_O]0i>@!\0B3\LBdR"RXs24#fd^T53`U&qm]Q)RAr`WRP2VS$5SU<FRER2TK&%h),keE-pZ"s3$H/qUM+>31jGH1^:4I`pl
%hWV>P8LhtehlQh6=+>LX>u/F,p*kL)`\6iTDg]+d+9)"alcnJ(da^:g@.3BQX+%/Ta'6"El\/DIgi7'>ZN":Gj(Qj:Eo(ci]^p+i
%T4ICt)?V:0YN*"cL$e>Y74@9\h'2Um66<#ia<*?)m;M\Z\CLU0U/$c6T(E/&m:rhM\=X'rX,UQ]=YINs1^+`NppDeg;.._pfj&<0
%4_\aD?X#^0<kZ<H4m(af$+a8NbL$3sDY'-bEY@[2o(u?_`L#IhSa-dBs3^$@DP,$"c77ibB6+%>gC26>:Ah$Tp:=ncS?mO4??<<X
%<Tu<-WaBi*IX)#SgYK!uL!S&AS^l!)bXQCCN30)+csl[O3@On&7lch=IJJ<!:XMY+Mb5e#8l(Lq+ImpY\FiAbAH?qoA&+k1c,7B%
%[m()?h_uRM[g!:4N7_RFH!#KjrYtH@j6S%qs7Z=pXJn>7rc8LfpB7SYK20%(EL-.5M\\E68W:$(@^C8_l3MKTa.')=Z$s_g]&<J%
%RI0mX]g[#6g!/!7A'ql5f*N4cF#g:HBBGPIQPc'$7?P@C3pG>RG%SmB^;[!)BpWW-==:OiZT$)R%3/HApY.cBB78a^I"'Jq#SgSr
%-.0smPiC^H<FhTT=M2\'CY7:^`3$641?h#PRFs1BW)O[VL"\)`NZ2c:>I1o/9M@K0W'+j:G7GQRXkJ*ii:+O@^n\6^O3DE)BP_PI
%\!7i;h\b]#/K5]%L.BE*S[KErZ'gSU#OM[H$ackclh'eg/?RHg%YqaOMoK/WlF6e2*PEt-AQi?nlXiZXhVk]Ie*ku`S5?[Xk]If]
%<c&L"?fR,DWh%]N)@*BnD:%-(m,X`Yq-nq*6_jfHBOq(tr00@Q]p2Ut]6.X,U10l^h!?op>ICPd4k%?r$bYQ=8i88K4$*qtXLlr"
%fhls*jhB8M6t,;7-WbGKmr2mpi]EZ53I_8mne9n]25>8idJ]gpfI20o6<C>a>D#uVO&kXZl`XaahH#!UfPGcc6aNaof@C1thI`PS
%U31G-)<AJ5<^aZPBN3JLQN-lgG>S3I4qWjF<cE@'[^t/=i@>CR"k?34.[>FEVlde<*SVQB[25r]>TOB9GthQ5r,?nB%IZ)*3H"l(
%C>/#MMtd33kk1A$F(p`Lhr&M?dkR'*WGUCE1ct)WXP[t*r@@3CSa>cscPMu.'n*gVr#`''0^J)lq_u+2j8-$*c%5-,hB/m!!S#AH
%UK;8R)[C;e't3eBpIEd8mgg>Sh(pPj>!$Epan7Q\g%&\*JC"80g2Hn7g>DQ`=VH"+rUjLU`P]W;i-MFg3,$^*r?,;mhK-coqeK;;
%Ws`ETRF4HBfG2/*>h_5#^]th.BEP4s2rEt\Y0>J;XKAVYJ6$.NSj?eZlM/?nrpd4D)-)%3qP2S$k/L9W`f9Dj?-B6,bWW/@d=S]$
%9ME(-[!)JRdkQLFFnS80Od,gPi]@[WRK!#doA4Cr)pSdkQ)D<tf%FCO&m=J:It%;GMd[R,cGRXUHgN2oCntH"%p7e8U!;06?Ehse
%>:nAWrr".?+<GD"[TKnM*dOs8/=uZ4oH]oB9=hd=Xa]N[J+]/+Xf_<UIUP\@oic(/o4ls=I)b_X(`V,A0dr>A.#s][k)Lro>ul&i
%Gu7aN5-+QcLVcMppc9d&H^Tq^3%PIUe<+<an[0oFb=@nt;VgM+=/</eQ<Uu1^2]1:L"^0f0"GW6mj47Fra=i6-[[YJ<:Q1:*D]qZ
%Z-%08q(c;mGIb>!-Ik^u5QB;mq'g(K6Z7&)!1=J+!Ij[[5-'H/2`dKSoAsYn_-["H1Mc42)>3jZ)VH4>HHa`\HIY[jK(/T(1i]mo
%&Xgqn)KSV=`M_].54kW,k#uu@="C@5B74GDrYM2OYd;*RYi"[5%=6d`$ZaTWjTSe8'>#0_*tDK-HGiN1T2',JYJ"Xe0"u4A[<da,
%H^R"J.aG'R/b'9SI.>(43pt[R@:s"ADU*02Hft2$U:So+S?,JbHa'oMm5geUosZp53qKL`fuRqM2j1K6?gF9Vjg.SU>U,TIhQ]54
%<@k/siq10(,t28agMsT(HU"!U$_;+?2+#<>GEf,FT%T"<,WrbT^[MGIkaYti1d%sR""da?[VD;(C9.;,,j:jS^i4_r(s0HJ#`jGB
%PA?FIg*nuH1!8YFgE!Ej=jODmc_kEW7U)u\H`)5G$2<(0AlJ@kVr!UpHe[p_X%L@N@'`#OD]G:X+I;obo-S\X$i@I?GZ'f=YFB\3
%&8I*Og4?8IMqXuAcmb7W>78,.gk-R-e(_,b\$I);4"C0!+'"B(`XVI*Zf(!WhH;gd"DT5m]lfkZWspfj[q5#OB#R![B^)18ctRqi
%AV$":c0jN>Z(+f4[Q>cubmCMr3ipdiW:2gSib8k[[ajY09L!YC7^[ei)a%g7Z^NGtKo'eAh/("?&SPbt%J%G/HZ?L66[Uu$(7h`C
%T2hlDmi@ou#Ei+L'.;)*f.T,TSbZN\j#.kT_.aolQ7!#D9SM3<@_9pc>hisA#XX5(WDG[+P7!S5DfXVqg?oFe[Q8'&IT#F'^YS4I
%](D]Qi,I/j8cQ<W)J%+;eH3bu++o9l2?_4P3dn6ZD='$KnFTmD+@+h(`Y_%]D!U>WEOUsdq_`0lO'h(UMM'_S-IB4sqc]rK)F@_<
%K.m$`NkO>4C@Q:Zs'H!=AW7R7n$m-2r_`'T)kKlKkHh09<7L<?TPQWkDtAj\8NNV]Vg[96P1>*ZW)5bSSkub;coc0a@?&*;h9R!D
%LXf/j7kQnk!m/`&K*j[EX)/r%S#6]2WMK@m4(+(u1Y-Db]@QIl9!pJ$%*eaF'QnQfik]YPmG:IrVGT2=/\!1!aS%E(Xsil^-Uq^5
%E43p^PUF+od02K'5Fj9IjY_D&h(oSu,%_lT&^K)98nWt?)O?ABJSJ`qKL47mmH"HFP.@<3">=M,_H^0OhYsS+=`<uB>K>:LB`-8(
%RN:_J#G%/XrXG/SSW+E1`OTh3591VQecQT,f'%"N&`W!j.BJ<eW[H.'AImd#[(1R-<V]dl"ZlCqjK]+gF3aOrT78WBWV1=m.ZC(b
%s%LV$*`]3]1qIih4A2Yoop5`#TiMF4WN>AEDM[?=XfpT2s.Zpm'QSho_(U#=.8jsR>IA:-e5RGbbP!L^o+,Scm^B^75m'$(luUeJ
%B%LSUlhb*cf,=bh;(r1,6`__ZU%W6:)e]0laE=<uJ*J'*%^O?\f'CnmKbf0sCWK4o&@g?[b&t,/8%DdG*c,cAc)+odfY`];X]h24
%_a^cWOR#*HkhA'Vkd6gg',qoLGO`Och,PM6o:*jcom,5H43ZQm\"191HVcfjmNIO%iIp('I)&7tmbI0<&'ig'9p`NZ\+bf/Ea%;r
%NPY*YC\)\\p#dc^Uo>qs'^_WDo(0i%<-e9jFe,MFU*<YsV(0.OH?L3//"HmiG`S2h9B,%;k*#BDDp1u0(hW)&2Yg.P)R06@"^1X9
%?CW0iS'&cRi_FmYQi1aQSgl5NI?C(YQLf1FnKO[+rNt2D2&Tc.RLNhJ+T?c!539c%e-l^cGIT9;3Yn@\?8fi_3.J$rH9OF[ab*0/
%otlT*:DT"V`do!'gK#^ep@r11K8Qu3fsf%WnXmMo?>91]@<C'jIgHL&anb#!7NZ-D4JAli>@p[s,jgu,DDV/\=hg8KkOd<jK`3i9
%`B0c/o<4=<X#2;.QSs3a!-c0FaB*pBj'eq?mqjt;:E#j/rM.BudjN")IXZ\"mVZ$>BdUK?3i/OJYFX?:.QgX(l!O(>MCVJfDFH*8
%'o-R/=nfA6gK$#20FUbIof2qeH2P_ZCpc9ESfQ]Sk;]'drR3e]Ls<>@+?J@[:t6NJbRVtR?YDcFl=\!?4_9SCV"Hf!=M/?rkoct0
%ct'FW[e0-cS7@O->kRG7;jt6dj*j3-/i_`nW@01YLk>chZ^(,]+\,4Ypu3rJ2pN)>37U1S[/#6OFSp5?D$3&<K,VYYbMC)7c#0<4
%W?c<&)nmj_100K@16J29iakt9J,3K/2BCICh,@mPNPeJ4D6H$KJMC-c"-ciZiX@q:aNa-[nf9i@TfY$Yca?@b-^YWToE7<fFm$NG
%50o'Idd?DR]6[g"bS>K_XE^6umV?A]P0RIFd-McrEsF'Qi3.:tC5=Ps\KNN5c0^iU<n>ibE&E!\(7>Jqlh1+f_fYk)o)&8Zhgb*u
%/j=cPhS.mWgqU2.Z2Je<M1>D*^#"8!eE;F=0CI\CIWq0fmlu6pGOk[0_qk32&"Xd=rV,4BqR,3^lh0RFB'T&iO(P]P-K1/8ci;;j
%QT_56h<k6Pk%6h_lJpK_9C]2ISa;-T5A'qa8KKG?D*<t>RbL8bnF#UL5@2N^\8m;<hYY!sp'AFik-)sWEr-+>qHPMbr4.(\^GboR
%;Y$T4OSs-@"ulR".9Z\TSc*Zt%Xrho4m'SGKr(9l0@s':k/DtrHdDWVVjl"Oq7W'ei8l/3jf=-:$SUWIfam[,s*B0kec1G4?fBW4
%HbY(1nLB!$AH,9>AT)e!cX3M+C%cFA\=Zj4^U!h(S\LqlUP%BLRkL>#qqnLs/hQioI^nf!0@$aS^&0k"I/i'oFYEXK=+@omH0Nm5
%X4p\s?=&&-kl8Z+`p`/)[q?6,=IQA\HE1i\;fD?W0=RJ/?b7ujrd4(k;ZCVK4_jFR0B[i]ft1=X?XDODs8Ic;PO*>fLE2@,I'p(^
%G^]$n.4kDi;Et%>ZSVC-2r:kPQY5E@ZDLrRr**49f/An,DP;u[^X)nbp*,"FR"K#Ha,M/Rs4t!bpVHDr5JL<HZ1Z#io"E#qJ8]OP
%@HZZh2cd]N]5qnnp\+H9j`f,@bBp_,DVk?e;gZ&/U@R&&a*>Lm$_LgBDXZW6IW+E=rce+gSk%2gk3J<+SVO[lgjAn9^&.>TApiXq
%PP`ZMs3b?In%T\5*^-[`pjUkVodb/,h-/OBH+1E6hUqr?,2RhDrBdsWrXduaH2IU3h-82hln(EX^(J<\^UUJ-][,']CP.Dgmqk*E
%&!n@;1qT=OkD(#"oBD=NXKHEB?--ungpu20QTO0fbrB#LD#6m(k*gX,0DuV!A`h$'fs@=CQ8T6=]/Q&EH.rjqh#@52].6r@Q]h/u
%RFU^#GQ-mue#2(Fm9&c'^H%\]Y0UEqkNfI4c2IL_f#&$kqWaOm)nc-7HMrUh6bMZBG1a4g^Wt?44a[(2If3;nSV(3o2li[ZpZesW
%D>*tZ?K1l']p\?E\3%4/PMf7.)!(A#qTR`u\*C:Y=.e"rGrIYIQfDltceWjf@MW4ZjZKJKrLrgUrS"rE?N'`\gC*Zn5L(h3Dnc5<
%Faa8F]asdic1u/J`LZ^n]!K0NA)/0DXh$_Y]N"V9?UaX,m^l!^kiV5Mp"4]MY:"OdqXsK0n?@B-<W0E'm:I$f<516`-E_jurM/QK
%+(!jXWSd*S2sSSqY-6DXI[PUk^GjcZ<563InS\<ajb%dM[H@e$ouHZZ9D'ZlbO=cCI^jC"^-3@8eUQ@ZC=bDqSd+jhcJ)Fnf7tG[
%l>M#.n'uo:IqKRYH2%#4>lX33cF`rA0>j:Pc.=U,l<A0;0%IG?^40&<m59Xk]fG7aIK.ko+7$W'$P2MERr:LALGuo%1\J/qiQUZ)
%o$a#;jk724X1N:Wc.lFs_3p]5>lK/kH.obkj1A+]ZcC:C+)X618Y04u3ck1!pYF'f<uTu@h!P.6EFreV`Q$.#h]<"YCVR#pAtHY^
%pjD6"f$e$h7H__ZbcB^gQSUidfo=i?F_57BDq*[jD!kqshS-\cc*Uhh2qX`cpiY_,4^#[4L0%\MZSNR!9=&]U&%f1"g7*"mk;T,j
%Z`a=,1)nO72eJ9P`aJMPhf!GZhL4qQkLnBuO.OZ]gi2]-5'aJYB6O70O2:2+%sR/KJ""&oAbOaJ?tQjPhWW:oFuK&,5Br5RA<3/G
%^0''Z*R$,&>afs;_tKoW2ck/Th>$BRmNq&iit%KnqQ'Qfl+?[307ElqTRLTde\-"fTt`F6l040diM@>L#Bqf6=h+._d_!KMl^&O!
%Aq.@urUfXJV7kakLR/L*%i-eLD]diX*clVpmB\1,D]E)/GM.Dqk[':(9/eJQpMB9pbKJ3)`oRH;5OMj,qY8@Db8]ugh9/%-%,YCj
%Xg@clo%&S>FSWiOhq'M'CcD+Ol<B6Um`OD;O)k\MqZh1.4EGl;f"1b%gth\Pea,#3&#.[:kFTEDld!26]6S&Wk8td^c8D,80XoL<
%J!oW*^0-gbSA4d[b1tq"r0@*/inH!"lX(I2h#?j;].;'cHbkuTk8RW,f&(oU_j*1JWs;^T45>71ANTbQ`g-KMC[\G8p[8$2eaU`U
%GNr6G[aV]eUGTQ)p!/>'GkKqlgMa8Zc.9t:0=r0E=5U],1p:d[3d>\QZg:(]LWb`kY$G1J26SU7gfV<,5C)hu[3'i:/6mPkEHQ5;
%I:7'[g=o+JDm'&qX$=>Lrr+2bF7!Hb$*R]BrHRB!_V?fNf:u\S5@4BK@BatSTms%arPuHTj8)Qbeo0/!4,nI9pY*C]EdcSes3$C;
%f62VVi?c232f:jMft=Td]<cqGg!/'mNAjYjp2;d"#+'7UGa^2=(s]dMZcCk6qL3V`VK[OWg!0!JHb\@K2n7bZq7J_T^%p-\li,/k
%n,C"iqjVqNk%D7YpZCWlIt(rl^,<Y^^\$mQS,(*qmG@d,n=;fDqn"d_kP#`um*6^@r9Pui=T7FH68Z1)=h)(jJB'3'IXUn6_WrT,
%?!:o(Ie@ZRo;LDHS9a1F[lFEI`TCX82&e0N*'X:;nbK;\^\IE$8&$Wf__GEo\Gk6[F7nhHGE2]<G0ft-Cts4U%G,6`f/p$OSBW/S
%d-5-QFt^%)I?Hb5Fe;rDFRO$NgND*dc;XI;0D=0qGGXJG+0NBP/q7[jH/>)B2n\U+pH%0kQ/@&]hHjQ6i,,k[@di?@fdm'0eW$^R
%"kS4t=2Nj%q<RSA,QHBfdTumjPFWtdH1Th5*YU(7=)J.b^5M0+7mGgs$/T"'1^mPP>oEhJs3`%&Z$1U5VJkI^nA38ijm^g[o4qcU
%I`DaZhRjn"f<6k-&1-c5&#9$FM]:'e(E;h<c-Fj7oJ-;Y0#%<;LuS'\epZn(%t8m'2LbV<[hiuUHe7;o(,hY[ceg#*4a_L94C2/#
%P+TM(r@DYI^AB(EIK'8WHhT_9C*R$Zs87?A%S[Q;L30bD>EZK`)[N[Y"j@u,ZSC)tK4E,qR=ELpJ+Zd+Us`SM*Uhh?bfMqZL=?%i
%d]Fd[8p/V+2VZu)^Rnm3lc8bj#Hus/56(6J?cpYici<CcVs]$-_6_J%rhmdDqg.LdB0X"VkMEOh5C2:7C$)t@]`$;4chZ$K?@VD>
%od>3:m\B)TD4^XuPII-.m_Q$iPNShkru@V[q=KHScbFsBqr[LZd[/RWs4;Ies7:s)QTdKZiPh_/^%T=T\*e'>\G>Z%hL=G?>J\#J
%[l<0Xs5FF<^\R06GMdl7bnk;IrXP70MtcYrqs-nqa/;/9o]!LW^O#.XH^jb:](PpWY.o)YhQ?_H1[i$Ibfd1XpVb5s55Ft`07S?B
%j1SM8qtd?8?ZEQh\GOEahgY:t/"_4ha`jrdnAMFjY<MLSO$C:G5PXX4e[P!ApL!mqeMmL*lFm)LVb8hD-gs7\:1(8q(Jd8CnDLFt
%n%O)-j6M3joXAbBa7nHhp%hn]SX`sblB=<5>eg$ZG<UEARD6I\pU+)O;qG?fn`=8a]QX%KZd2s-ifbI5IJp]hmc<!W^&?uNf=uV"
%_67c>p?]1'h?_0dlSm\5p+DeZj/^50n%A1oVm"qVqiou%rVQ9^n,N1W:[bsiinr(RqW[l9s7Xjp0>@8)[;/">H/jhMl'jou2t"G'
%m5Oq1>;+k4o@%W+psGY9hR`=Km2+Z/o"?]*IJ\`E^]+#qEXg0FH/<tRGr"4UD"GM<MkjUI&"e+.WQgup^\HcYCZ_m_hg+b[X/GE6
%FQ9NPkD*-2HgKRdj7dcSI:[lpMg%AlIt%.JZff*9rnbaYY<Vd<orfb?hA:\<m;MIlla7h,Gi.Agp#l),I-Ji3hS8mElN\Lop=4B%
%I?7e8j\Hu2Q_/Z<2"SP-:X@Yln`2Lp:]G[]r=K#!EI-cDJ"43!j/iia\c(,!+279h5JHs_lh@R<qrk:LIJNM*l(aT:s60DoT7$+&
%miQrOc&JX0+92/VX'`O<m#B=UI//C6pHNula,e-i0:7gX\b"fB++O%:f7*MUg8c=ld`a)BI/i#^:HhR8s65aEhnAg=Vt8f\qVfot
%Spp7@:VZr"SaC&cs77o6Zg1uSpu\od^9Hkna)9`3mdk)[CgQu9UVAthbNENA?/'a8^AIT&0A^m0J,R?q?[q\,Qe,Qr55++&j**`f
%o#kt>^%g,f?_.,&2"T7=mlpWn=#W><E:_U5+8lngp:'0KJ,S56T7?V.h>#KZRjU.4]QWnk-V_7arUeCas1ILOr9^,S5FWbpq=PO7
%[^Z8,ju6Z(HKjOP5IpI_bO9q*laJh1s59C0rpg!bhgG@ha7"M!s/Br9Yta[Npp`/erU<n[`V,Y-hn8XLr3u-Eq"B@-FT:+%O2&2J
%gV5V"g[DoHq5^uS3dpE<hmpN%C\uq7T7$LiG<^QNZMWK]pZD5=IJDE`huEK;09=q/+8l&lSbJa:qtSH45Mj/)f7/)5\[rs=GkR'-
%5JOg]@/@e=rq=SY55b!9ZQJU`s5j\Rk.gofm>i>rIjP*hlOW`-rUg#'+/GMmqp!n[qpVHU0:olTr.eot?ea2iqY>sqo+O@'p4W84
%kNt(S$buTkSilf0XhVJDI_#'pMpL:edsHSYp\oq,s*=("V]U8d2"RpCcPOL65'cbNTC+r+:2\s=q;eT;n)&LB^@CNsa1ogtpVhTV
%[E>Sp](Dc`'L'`bHK0?se_7K),@Zoa]RJH@g)o1`[CuJ/pUE'SOM0gXY2_!ohbJX/a-#<if'5K"/9.IZkHob&TC&mDMWkBWj5L$8
%UB#Q1bocuTUqLrYq3eDPV.XS#1N'jN*U2s0rjT3mY8o?SVOQ]-)_F#U4hQW1I[%D4e,T$[5Q%DXf,VJEY@^8:n9_g/oYg&Hq&4R6
%K-K'Y/.N]V.+BYaIL%irrpGhs\FIU(jJ+*+*I[bjW<(US<Z*0;dL%o8][m'ch$!`d$ElT0NZP=!U=>SWI?6Ll9d_9Q[8Hc>(>qZ5
%:4`D<TJ$6"Gt[MGj"_Hi6?^K]nER'XCs,HNa"N)F[4F+Hj,%hpm'C&L)[5Np\VGc<e7Uj;@t3;7C]r*jZE(bUoe5%\1,')TUHmYA
%LLF96iT%>"lbgj`#g:mb?<ak])DAS?IBS<+R%DL=<bnAbC0lJjTqF#e'jFE,fe5V(eTCQ@6bt;<1[c:5?T.t-X6D7i<T&c2f/AQP
%U03"mX6H3=%(i5D+0R9O[]P;7\=DsH[:QtOnVXbYc6mLiG1^LDdi6O[cp&4DfN%8oeR?4Nl!:1`jrOk99o!G8W6RI&]5B@Z+1hkb
%:$:ej;#N2^R,22]>7\WSVROSrMm_uK@0J82q06bU0'^';]k-el%qaHt(",/oiml\GL-;nqWM3IuX]/[+%\u%KlBci'Fu=]eISfub
%l=\pKW\8PWpXSn/(;K.'fn&cr;I)=*\seX#0,LMP)*QS[0s/JHbAt(p.ls8L$7Er!2k3YQeCuB"cp&5o`NS9SdXCfs:i@`;4nheB
%MYbP+Sa*BtJ@_k)Qg?2@7K%#-SEchOJ9lS,SimLoU(/9K/_h]G%BFJ/gW+*QG$3kep6[^6:cloKGs(R:o1UffVE';YZJ'"fZNV*b
%reDPKT5n,_3ji6OS$(TS$W-<IGq+_7KfEnsF\ifc`R8<p5q/a58+?;ueM1`>F]_^c%W$;&<0oJ(Wp"c_`HON@Y>:bChYBSS?,)N)
%lbpDOrCeln-Q>3E0C'1IPM*NTq+:JSs*L3l`e-*2quYAq9b5r@*;hs3FEI^Wc`tn)%1cCH3f^VZYA-O&++4(^+!8.En(h=u25;Or
%c<ZjaPQGVQ:Waa@LOF#5hU*8s`l'maN"X1^Zu?+D\\9,`>mGh>fj"*7]`rZd^?BPg\,ot/9YG.HqrXZ'h><g_^AgmQ<8m+S`gk7]
%p@Zu#';)rmoE=c=WP[H0fgf(3f@*>&h^h$@rorr:'`1%jDQWeshcq1PL5.5T2s=8fjVsh!s8/kbc7?YYoU;Ap3M]=qRV3<lhrLN&
%aD>g)g0*\3`,@@FrlVnGGjT=HU;4Q:_ii[mYFR,c)R"0J=8S%gD3^6dN'UNb%Xce_C;TB,hq>_]If$:nW&@IpRp:%_do6fE@n[Jp
%$nM6s3[qBqGAs=n18:#.=931,<DXFFZH68j6%RY-TOHAZ?-,+r:s&/]?&(164,">`b7U`<@GQ%b+B@`YFANFX(LI>qNu;4D6%RY-
%T]'>E<l_IGp[?=(%hW>W4Rm[jEL>/,Scg.TV:e-tH*-ikpq+c6g'A%u2?jVO;n"ZF[CUipJ`i-<L7RqX*6Z>CAi0CjO3P0k4/aO1
%'jh,oQPj'J6%RY-T]'nUf#Fsqp[<L_3*8c1-A+6+rBM*1kEDFR\3N-SL>IilK"o@=Y)WMV^QgNeGaQ:sENI^hql'ab_Tu/fH-%;q
%,Y]]mb\9(JEsDLNhU8:oaWo\+jB_:DZ>DfB#&aBs09(hI"F2nbbpRE"U+7&(`3L&.gh(s0pThNa_-2/k;WCQ["J33@__AX&7N8Vu
%dYS9b:!!Pq0lu_2`kkJL5+1WuM^S,Wb9*_]OmLkcD(1g!@;$Q9WQZ=ZZ&Hd97&!#L.j%86f<BKTq701?WsS(_CeOe,OhPe]21u=&
%^V+jVZdNt4-8&D8R0e`,Q\B&#8M4N+nc2tdM&Ir9cV0QQPpJLPqJ^HdoIt#9c\,DBQ?j.+6Dt\hNXt>rs3.$eGq.i-X1X6s7O)Ks
%.60$5^p8F9:8s**7PGc13$NF`-)grF.e1gJ+4ZAf,#9%i)4icI'B#BD3aJ6=E?WtK5&kYJeA4/0aZn5sVD";7=.2,mmlO3_8.eDG
%Ol]Y7LqokE1\"lS9nm[H)lbB79OpN?9'BA[#s";TMpuSj(]"i@6'LrpfV59Tm2%CK5AL?N<McuHQ:'F?$-^e>mP30!]np3ql<kLj
%PT4fn#+(bQ;\>j?r7'2Q:j5MX+mH2CCr:9%`'V3KPVnP^X+Of]:a*[?1uTO)jHUH)[q:SC*SL#^C(A7-:j%/OCWKt4gL:(/&AaeZ
%5,HAC[W862`E')1-Uf07"i7OOmqiUAMKq$p:CM=F[]BI9rklZ&gPM"S'>qq'Q%k^*@4-6b+OF?DWg1=4/CKmtS'&#]`&XiH`eNqI
%i?;nZcI=T!>L_S_56k/HeP`SkfDu@kkKJm$[c1Y,arR2F3GLZPW@YqR.%e<Vn:6u;(k1.)`q(,C=:<VE=2s?h"a\Q=i^9>ST0u"b
%EhN9^7&poH&gn?.AIK(Ih4<:@#2l^s;]6N=!uh>]i?X)%<XcbY_OFp<##L>qP7WQue^#p'BBIJ>3mnmr_Lqr_VDq#PYtKEuc"a;S
%>j5:4DUtGfn^RNP(no[`BP'U!&&%uX./TX>N5Y&:c:3#Tb+e5$0AW%PZhMcQo>r.(%aYg,!]jG/5cLc"?FAgm770RRk5je6--"Fu
%l^b6&B/.C`*Y</HnBAI[.S&;4A'DR.nH\r7O^$!OS=K3P>M'b'b:,[VqW,iWO`V`5X1<+$Y]WWs0>j98T]NtLM.b<7b2nL+ilZEm
%a(h#CB#Jb!^^B9m!>Z+2^)9P^8@>?DX26pcB&P&E,:FANm)E1Z(bkJ0&gPHu+CLJ`2`Q7,ZRF0Hbe1r-YjMtP2Z&>tE":u%%VhhR
%=9LA6HS"I3!U;g/D4U[+XJ/8,>^"(#2,]1O40:l[qYNfO:/7*g!g>%7PnQB(K_c0q:b_1@dd](Z5,(\?1*N?s?uiLgC,$!S$ef"8
%V$Sqf(T`7C]=DWfo#UZ2_s3]F@8-e$(W"[UM3"LD/9her.f1i"Y7p*4aM00j`AQB`a+P63rLXIASE]f_T+tt/+s.=/V"hgEbP]RH
%A%qFG/i]VMbdanZ!6iG<dl'C$NKe?K::6UBja;9K*E8*OY_WS4-L-0V';(f?#S5HnWPn:34]F_&Ba,^)';#8Y8<u;6eneerj)V;n
%TZ^r4#m&!*R;\@s(.cBNX(,Y_mJ5gdcB86po.[4^>`c6<AF3pnBLpN1539tqa42>u/fH#EPhCj9n7mi*i"VC;Vna[+jATIkqm@0l
%-q*g0/X'2=Y+;1!dr4oF[?sm1g9JMF3k4-t)\^_f(pG/a.f+u3'Q0C<,9C@V&<(Q4.eT#6Nc=5<"[#uJV!:F#IYl8o+:u_DX"oI]
%G>(<%noSG*5HXGLE_@t(Y9R*5-bf-(LfkQ$(CP.;4&B'^G._1JUZNi^_E3;06C1$o=Z!*qfV-Hn>[4MH2k.3-l8abo/i$umP`o5G
%?O0?:q0HjLf:4dVVIZQ&U`_!ZR3oieYo*gcB5IT"%l)CN1F,f:*OCr=P=7p:7QRqRFh&_0iY$+>,)Ju,c[WKQgFE(u?T2a&=IZ.-
%nOlV:QRO:'NO%@;8o8q\/mjk!K*sBh%i[/PpUhBtiIU+PZJ.\e4tA2'c,0%!\J>:hG2bAL,1r3(LkSVZN=lX(5dJXncs9p#A`_ZM
%9VCrH`%j!eCh_prSOB2;p3^#^8JWLC_<=m<RMfX7.Nn8B71bD2n=?'M.Q5g%:d-@>R:fqaDG#kP$0P)h4h_jp/CR5e<No5R?BMqh
%,$.NrO!f%cH]d_=FAX[n*D`C2TWs/!F[YB7q)Eb&rpV-)]@)4!b$k`&olj7#'i`^g08ick5"'0r7n3("cP!$t&U$j`25ZG>Lk(2g
%&A)'RHt=Ujr?Cg;dV1.,/nq,aK]G2ko>&XYgf24iAF2CMR^c[O'eK;ABk!-mhPE)K-sh/'1&2f.kgJnO7fk\3/57&NgE!Y3_e1`h
%Ml#UKTW6j6m'-'k=P+#)7Gua?Ah_inJKkoX!g0&@fk2$j\V9O5N'>V>EdV#2*@)(No\4E]q6Ibr>ZG1>l7MWBPOH1MA_>OS%V'uc
%a1QJDTY<Z`Q$TJQ5Y^tV#s4!Ok4Sua14K)e+9+$=Sb6prcVsIC$8+bj]o-WI@Ja>FE>>L"%s17(X'nG^Q(!1(9$WGmh<8?Oe`no;
%LgIQT4A`ABOpC8q;=lR0/e<&thrP1UddX!pJN@*O4[dJOEeik(f-YuqOfW;F28#j4(G-`+ogQt)otKYYJXTph#p&![pP&TjJG7Lm
%ULT)CJ9aD8BS"i(jWH_Ub3G@]/?9[t%1hf><@\K&75#)E5g;!GoWID4;<'sr@4A^]+%@b2)Ia-d/:1Ai%!Y3:%/<(^0o@T+`Jbk6
%/XE-CqVnon5DPB&BoY'`VsYB95"p<^P)&:_dG4m^a<Md0eKYUoI[Xg8fKm)Z'Ko9^be?pZl'!4+93*mmN#nWr/d2d9/u.VrqIL@'
%9Z)ft*iNQa$LMSr\].#/bS\;bRV!6r9\56K*iNr<EA$n.kf\k'H%<MU=foA[<9]t*(u1SZ)9t\VC7nGr5TM\=*i=YRP)&7p;0#)=
%%JVV_1jA$mD)A`4cpom>O@GZDGCWF,"a@B&$6+?$VO:ap=+1%tj((SG/T-T\3bf_X!Es68hB@2[mb]1VlBRL6n%F$jXD+d;0D*fq
%(Rf,i9AMJP(%$-pfC[[F=#AR.A4;9ef&c#[Y3E7&<srk'_u&`*H/K'i2T#daZr(p6X1^EYLX51QL)]W53c;Hb*iS140@L$qgg'=[
%9fGZcV!CLd_mJ6mm>AV^cbqiJdWt;_h_iY;_[#G?Gn(A5IPX8#dXMcQh+n-e7Y6DuqGhD-!-csPi"_7H!,JaFWYO.T0YONUnY,BR
%"s5n9%e!B&U*8.X:'Xk-j=;K\eWsuQl,s+2BZpL\kfa(2B[+*UKCn;2FJ1^Mht(9fF-KqWSc`<HT6!(%%D%;7R9A"5%o[GB]1@F_
%rTMf0rS.AFpLi>cEKNHRDs]UahW9)Z5;\e'R58d@'NdeFVQh>W:,j?Y<91j3[1ZH]\Dn<l[+tNF;*!OW-%oQo+_SB,)_NLV%%,ip
%(I@LpISU.dMjY2WV?W\i#`t$^__qiPLI2Y7f`SdL%;m!"0i;K/MP19ORn&1e3S^C.Q\?hX3'Agbd27ar]0$eG!CC!0CuUXu5nWJk
%M]5,G,0N35P]<Rn_FbfV6]hle^C=j57\&&+la.!L5f:U$^*/u#6t@%<W=G?<-.l#/b#!NShmM$0*R36Q'e_ID86mhYV2grfgo;TI
%3LF<o&>N<-=MVR/;Q(>P0pE,g<(*.[a(aS%=RL9B_j&G7iWKid[udid``WR]%D[oJp1%uB./+]t:=S:G1mUMZ^`\3*BI4@o3\Ef*
%(f<:=W4n/mR<#j"^hs7V'0>Q+>4J*)5`@/DWqHad4fX30!0o'8F4k;AB6L@TJk^u;!srupjL_]&b'hGQV8@2m6;`6!,M+<\Kdp]X
%*RF6A&HRe$[>X!o.#lGLi)(3NT!6U^="HR-FV^\('pj*f9J2)KG$9X#.q46+-"V=sg+[Z,.Ni4SB73f&V'<26@[\hNe<iga'-Y/%
%-?A>U/UT*%_t6NVX,WCJUYgd]!(\Qn8he8XBlZ>]KOhDXl9`f:=&c=I*l#r6\abd(FU%tm%'@\u8/JA_Fq]#O5ipJHjNbWm)mdh>
%_F5s(2,-"EJahEI_A49,fd,W2`r^e>4Uuri(s\I'gC[M(9Ne1YPRUAWR_^1SQe=k?.2OFc.@[GJ)o90$"QqL^qG=GlZ,OT4WTDp$
%CCs]`jX&=pJ>+Gh]0D<pD.d>`'tL\+e$Bs;U9KWo13Peg/?Na-ITi^h1BtpbNDrrUAU`s@\W.t@Gd."J&.=Q-JW)-Y&\B9:#EtO*
%R88*]ZR%0/_A9%GR_o<'n8n`qi_ok-ABW6G7J0NgKq$2aC+QCgLScV,!d](G#uo3P]Bpu*Ll)I;8fDT%CHsj*<b6'd65f-)1Y`dN
%/Ru2tjn9[b*g-M&WfF]>,_Tm>#jl_,Q+jXfD$$NJ]9=M0#6.rhqI-@rXq8X[\72B@L<bc.>Hsf$lJ#Gk3UrgbRNiKk4B>`GJ)NmB
%L,<<P8L&pB`/9h,DZV<*j;3OVKh;Cs,nUoCKg]#Rat9G1&OtFa=^\m*8qe%IgB&)*MF=$%B3/rNVDZ-M(m\]i.&a]`6Ya/7fb#_j
%#mEX9p.m37(b#W@'?MWeF=q#\+.j8u-[]XcpX@f]WsL@EFZPj`>aC&dm<D)2koO/lk77.E\RTYB;`4?F*m\MX9ND%97XsPLpZ!,S
%SoC<gZPW>@E\Gq_1Mh@n<*nr*gfQje3M'Y",]f84Sma6'VfG"n@4:fo\)Y%!m`0ChqGBp#SC5'cE5A]tZSgrMD!*U'-T_k%1IgZm
%\Y%1bWgdK_T/!+W9uHd#f&5o$qC%Rk554Xd!;=,fT0X#i\5kbb5n%3Pom?rTd0FeXGH@F_^rh7Bk;+S7*HjT<d5W$7ebMm%S7=dU
%Bai,Vo6IT_ebRu95X1kA:!hAs7'#,>IQiD>0ur7##%h!VU[o@EL9"38TP4m'(_13tNLPY)RP7[C2YDS)i'XRN1^42m]fMh.#TZf-
%TJ>:?D=@Ka`0CEC-<R?I=n63a6j'#5]7;`UANA^.)([=^FI@7!_al$]<&$'a?l.a/fPj85[_YOl'U5EXR>@;Q\MY!b7`5X170/0H
%<$);1>H5]+RLko6VFoOe9F#6PZ6@mJ"dF#nH'Fuj".s9-ki6_97$ut[n5PdQF"kj-EP'8+*&%WVOF&%f2]<GK>Wd573>&G=Ijp>s
%HB>;r1GCN`feM4fPITTg.NfWMmEIJ\ZLMD=D!XjU374+`#o2"I;QL]LqE*ko.m7sH]i[0!/,'(b*1Dia!$(@ZBrYJ?&D]J="c2;F
%/ei+q'p<l0/mG7gS$5$U7+sRR:<j90s$USCasEA_i)i';nU!!fPBj+NCfpionY\4a2@>]=aNorl7TQ\N(46EiQeEN:RGed8IZ\](
%/*j7kr<c'dAF_,4[fTbD0dDIcp(:9S:bUhJBP=q'>Y64@as8I+K/*.c6s0\Ic.]Io,?Q\%O\c=GD??h;m!"BZ5K*hCH.GNSh``O'
%2@pNHUrSl(o"6.'6Rh*Sk;2EKJ$C8BNdTLA$b+-OK-k4<K"1liWUdY8%+nILc3k^cEF*7s)I\UHk<84LLh#.KalC)XC(.Pb6f'<J
%?6\D:1s+EW/ln8GANFk08@F$#\2#)@n0a<0ElbUr8AYFiE%Jg10>Xcd!mkH3f](^(1GCY3Y.=%/8C+f$;HMeu"Zb,X^32/>#d=r7
%)sf"Mek_%7Ha_uN&11EY&V*cqEBj:i+Gh7LE\QYZ*,cD&*IQah(PS8qD!4\jph5u5994&nmf90S<!s9@j\I-,NO]T-Ri3oG`Y)Y\
%[Le0DdCTGGKk2+h>pPF5X&D"gd=3p"-?r%;YS>6h</0a!]ZEN$.WXK^d*cLLG^u%cl3/^G3+.E`dP*Yg@u"(:(281rCr;WqH*"*M
%)$1>mpAm/YDus-+;3QXl0u9ti@`9m(R5FNT=$*-.ot55L831aRNanjb8=ffALkq2-A:TArdP7/[E[u>b!0bnK*"T--*b??c=L^uq
%J6taEWf&*(E^d^;4%bXZD-s7*8s%L2?5k/q-[#W,>HtD1=RL?VWtoa6[ZXdOB-8n"nS4R'.ockm=K3\pi2FV6PL.ll.ndgbDZiIo
%aU?cKQKL!9&;OqGcrB"pSJ`g`T&k5kS*V:^N6?</+=8`Q=Z0f]ks/D8Y\-TX`[3\IiF`:U(S*t_d2R+"L9)7<OH+W8)G?m.__C;O
%g'>A[+f6<k_"b45TTjS>Al]=6'=KEk4[qKDaib,G4YDk!0R;58'8+B-3[A'K!$3In#\Dcn_nKqj$nArblP+aMq):;,_aZM&L&qqF
%=[HuIV$DpAG$!p(U3Um#5piQS-ie(&nuW=1j<`$^TA1@m!'`)F?H05CfUBh,b-Ijjs&A\/I70K0@+C7p\7GY2m8SQC-'EIDI:IL0
%;_@?.<c79Rcr=Lu-U':Am[I1QcV'kC5?^b1RZKV[quhH"DjXG[P:m"(.;Kd-PEYLH-uMtaQo\f&gYFl$M6URN3ZK#bZ#3Y]E&MMJ
%21][eFI@pCREV;5=GO]`JJj2)5dt[;17(oqJeqH_"*(k&)pO?TB/JtIP[05)8Ed1r2T2JH)Oro0C.n&uM8Z%qpb'34jpXta#W)Np
%UIOePUf(bBF-+Y)Er]J"#KN_IQ)]A]6:rsJAF#mJgkftdJ0-Ll1PnTL_oP*>$7C!J'9]=%j-h^r.Oulk<]R'rr[8:Hh`el:M2AVF
%2ul3cBuia%/Mo8LK_lrbVP?>!JXOemJi.0n(bm3tq$hs,60,0b[[$XumUR57<LQ!V4!.%\h*-F#ok[Vc(!sn$fF1uGV^3#8j,Ea;
%*.HDg4So?(RdnB7ohgk;,@?Q8+u''k+iG]iaHQhJGN?lgb2RtuApk&%XR+qe?fkRq]#JhcDGqK^38ZK"POl%gP\iN+`2%?0!'+Tl
%$HI5l^n/"lZH9D-"#0<B^l!\H*WU7\[V>El!Ken@(1I^HU;GN\D>;eH:5__IGh7Xmce<F/);`=Wq$%`<#H_>U52bU_D4bBB$U?3r
%Z%GIE.'Z,D7"GX_!2RFfqurGn'p=pcg8F$%;V&%J72KAf;SR(..i/IqRf%1o&->Y%>=S\qh"PdHRo1c#bfl#ek,q":67;<I".Ej$
%G652mQT'<!Og$qr`[aONF>Iim<6cI[4?s++GqH<_$O_StM8HmQlnRIQM.AO,jAaE_%Kr)HU_I=c0f]#A,#PTr:G9lqa&"c1]FV!e
%*1<T2?Q1\=fb>U&h%:7_iG9DbP0b\2;>6+YcbS\&QmhGbfEcFnNk"$oM>_PO'SHR3[ODU/TQdZ2^']BoC!O*pA+1PIifFh*!?msj
%$rB=TP2t9:E)W-[oD=@k307/[L@bVg>P^QM*<;Egkjk\a>[X,]UET5r4PA%gi1@7(_I%h%8kU&2/kdV;(]\8Z25?e!T?1;=b7Fm"
%cd#dM">VN:7n^GKo1^?=HrEn92t0\]AsqkbO#$7Ye!>oPS<r//m78q%k)e>jYgahc#+??-NME1@Jq[,\o`d<Ya@(*-`-)I,!7/(b
%!2_S>dW;!l"a&&;0dq)UQ_I:f>h,K:U/`tr]pA$SZB@a6!^E:g#a(f]SbcKTiL6*m543H':L\mZABF]a^EK]]n8bcj`X4Ml7!un[
%K=5&o+Cui20Ms\s\51_r/=?-#*J#(8jY@hN?C&2Pb<I$=PNO*%g]XB?bg7p"!`69R6A1;2S:\"A>p08M=EG`NK2WZlaFK.1RiBB&
%-ZL`B`Xl(g*LBI&NDE&BPC'ee0K13%pukk]h1<@(Gg",<@l%1W7f[B[3ILp]OSSl89s$"UIe+Qnr?E7&">lK$0ETZ`<C"h4$EL,X
%7TdB;nW5G65<,FBk9Hc^XJ3M1oIu]Enl+ZiX`:XnH"s!'OSq>dT3Rp`3L"Z/BqK)J8o/1[1V,=R^m6)7&\<Z!&*',*!:%6/=iVeC
%8@]nk;+e!c[(&\@&YLaUZEaiB]$5ekL(eD$*@O'ECn']l46m@Iaf9:b5RSYhKPCm`(L5FpA`c5%XDoV=[!,><W#,[I[=&`L&rs!^
%HmBq;$nZbHR?]!YGrIm2,H5d062+@sMX2cu)osl@oa-)2:O'9<!siKW/EFSj'TCSN%9LJgg7)^Q"u'h#b>J9D5!8e=bf=%n-D*i:
%XXQ'rVJ6![&I`)F[DV9R2(3[-NR#3MYtDK[]&gMI7]b@X]41d-A*PuC54J8C,u(G;dSI>PM;7r+B0eSk4&\821_*cteQ%q#MIsA1
%2GEYs<`WAF(\Nbh<-U?b5XZEu3H:Wp_/M_.-/g8j&dCM#lU!i2/NPjjOgn5#0oO!fQ9K7DKTO0Ph`i-?M,4GU40!p)eu#N4JgBJ]
%Ta.p01XP#i@Ytl09r0>*.HlN+mT:,/USr697"OH6\09h0G%>WPXoVa%cX7<leNZZHdE_*Yh12Y_e5/Pp"TSl@K/<W[%Jd1O==?aW
%Wg!j2!?f-;!7nA!h2FGrE/'@6q[fQAjEN8D$_i?O1TZOeU1&":LS$*:=`2'O\<!N8PgoEfYReTI!%%Cmgoj"+dMCg@;D&<ATUp$P
%!Oiai3]T-LeKgo?_MhAC_[t&*1D_6BH`401K)eVEHsY@X9BZ5;7<NM]ocFEL'ieWiSrK%J5U\D1e5$W&8F;WkE*(*V,_'WFLP'$V
%[2'QmaBD"4Xk>-sB(Z6$ma;`E3MA83L0CeISU`:>qkuiMHmCHgl19:!!*i)`pe[>:QKMsKr,1&iP=p#=_\m"ehgEKY@cfO@_$!;,
%!/6[_DZiRr:YIb5o,pnl%R)jmJL:A\j;p`rc=C4&o]/96&).((CBM]))(l1s8&6uHH<3YWPMG&s&T*&OjE1A%d:u9D$\ktCiAY<a
%=Lo2%X3&T)Z*Gqq(8A6lSE6Vkk:D;FTf+GWQe4"35'gU!Ac#:mE#/K^RE1(DM\f-NZcj]J:LqL56F'Q?nbXAe'9RRpR"8PZ.i]TZ
%r?DUhXEUBC^lpKG;\bH&2k58LJgshVgj<P6q,jLVYu%#\f)^f?jeGVgOc[=>,'EhkU^m_iZ%0BBl(6D1CY6RLYoV%t`;rLH2A?Ca
%88*]+;n1PIhpMkJ&nXImq]/*l-!:=uH0d(%BA%1$"WN/XSDYg@0m5k"=h`a-B`iNdYcT7736/&6-F5\PU:M+V?mbVCIH+JPdVJA\
%N+$O[4Z[n5!fYm5pUC0?E_XG>9W3)50qu(NA<#0..Zi0:<f*Z48;T3@f^5G+QrZkVSo1Qk\FlcF61+-d4Gd0-`rA"h25k8MK2<f>
%YWTIh(27sWg6$']j*2$pc/uZI9lA^o0!h'<6$udf/g9e:73'r.BWR>D18+5*cn'Vbf[Xr@_]%),a#mZ80ihD$fa@?`?.U7OQfF3s
%@R$O(iY@a$EqD`6<_2ZgCU`Skk8a`gW^G1#F[5M9r;tSaZ!G1M_nfSrfP"$G<[or42Z`c,UB1Qf'Y+\&5MU?WnK_:Hd[j:ijL6JO
%Q3g0h?2M]OIO<W(,C`/f@+PaZNfl,-+i4iO-[s!fQmH8e&-$lt)BkMQg7g9=&k?YH<\E-'0P72BFi6Q_&Gd)D262c\B<Yb[Biq]T
%$t*7I7tZgjFt29$Ah?)DP5cM%PS;s&&[VprKh0.*ZHaN9LW&q*(_"g2N4m_Ai9iAVrpM5W>)CGMkWY+h.!Ipm:+<UaSYK"m\3gqQ
%#T]QC`9<lH+]19^BoA:^3XXXi=pIFONRqm3E[GBBm)JAlh*5Z;r&Dg+p`3+Z[XSDjarM&2K45'RnaP"7qo80!e,b[oS6p.%=<8/\
%7e:TFGN3rOh(tcqk%a@P*i?j3;*>cC!HC7r^>6jOY&*RZ*q&n(d60Q1H5Yb\[+macLQ`#3)<ZW=b=E^@pP\]QHL)O:o+6qd'),<<
%'9:I%$<=>qWWj4:ZVp7([23Uu5U6-(O[,G1DspdN'K[QYLs,0'%tm:H7g*g1qo8i5h#:/:P0\1+\=gFh<ap]W`gu<9KrS@/W^0o)
%<pDh\3N^4,1!t3?Kn(f9Kn(d#L)A`.Ar*&W>so,V\prKHB0P+1*9+o"]<O^gQdJ/NjB8D?=r\.$6R%B6Ps]#;G[Pkg';=(XnO/mV
%EUS]-:;OGa9G+19gl3fCT'sZ6$+b%c&^T&-YsjgkEo6():<0kgHkFhG2o:Bu]jm!\pZ)6M7Q[SNQE`mfmN$.t@f+1bnL/Q*NWe/k
%k(r2@c`!Uo,SjS%+#13J";6SDA!"4+]q^Zcm!q&@'K[EMM2Uc@,&uJhh.S'fNgtA@,)PXANCdT$2_%D1^2I6h'5G;'UpZt+,sho@
%/XJ1a5aP>?5S&ZLiaP!38cnE$X2MP5pPi3?%`Dqk'%]!1/9/GuO'1IaVY`k8nZ;)s/MXhdj:]f$hQ]^9h7M'-.gtJZO^f9LUqf,;
%R5fc^T!:tZhf@Uf->mSuGU>&PG=3*gErVLR,Xaa?WX7bsLhl!ZqaWQ<gto;1.("qN!d[Cb'5(+rNGr?KmhdEI-b0oP`5sHPj.'Wo
%A#'deEPGU'PW9l?l1(6u`B3T"h)F>-8)RR-Hf>dPJ)o)=2qMN2G]`gQ5Oj3W5Q6M_m2l@/qmgVRPgFJ'%SEGl6p`UKpQ($fg"\e1
%8s\k9nPEJ*mt`Au>^OLZ0hqA$MW+rp5;)4E@e`QKPX5TWb$($o6<-\nB3X2OPg\c7VQWB\Xe"],;,\Ch-Z4et6LGjSKjk;*:8-;`
%d8Q+`4=kr=bO$B;Kl[(2:iSDG]q_N@-J3b,W-36O/u,C&\kbF'%qP]r.UGgGa&MSDg-;Tpa1$P'e\gsK/gIGSg1.47/u,Kbh*90l
%jUR*RiaVf*>&b2(]q_^6;@eSm6F$J6Y.2uq0iqUphl&'Nosu)d-)k5FNkF?TZ[_<VQeOIqML2mXr"TK[8-B\U0&AMkMbEFXL%Y5c
%KAs+3m!qX.a)<"3MoDOdO2g0SmN7K9KA/I3Mu1&79GWuL4"?0?f=l6-.!7dc(A>NeYurRc^Pc@i?sSW:)UV'9dUJs;*N-logH/;+
%pt+B->'u.n+0ENLm2`CLVoinqQ5gh?`bb1hllWW807,43>8l<FG"[ji]q`&I1%--t`J<+F&R=,JhD&7tD0ncm0idq.j*I*:[Z'Dg
%d795]iaVdTF`H"/^#Q\caS^S0/hXSNC_uhcs6))\Z+kd9(XmEn#VVV/[4!]-E@9%)T`Yg4MtL8QGQ!E4(A4NN^#Hac?2abb?RU+h
%lkderU;$[L'*#pH%I>)9`l7Y4!TS4t7tL1t$2__n0no@\"Cq#j)[e!VZ?J,BGB(rR0W*jd&Rk7c_G3cA0Al`'_Y?]\rStb>`-Y"/
%EHD#tL<3p<qaQ>qXnIed@j\L2K\.c8)C!-#lk_0Q8utF=0tMkI(jBZnLbY,U+D)&$Q;M/im)X)"QpuG`(r&MF)`u'qfngaP\;25*
%i-=am`/n\Tm+4"Q9VXb6Cd]@&Q40T24dp2(Of_$:NT_V-Q#X)-,KipOJClV0[Vp7*9'm^-`bk)`@>86H`0`8*pPq#0U=D$I9I_#l
%brWA@O;IG!b<!t3W`C=iJ0#>ML,KQu53$,La.K'\^(G#qg&WpA.(5($"+!3P)O#CF82MCVrip.lhYto99WPked?mtH&S[3l+-X^8
%fK1SMY_T,7YEmLAGr+6'mH8CH\,PRarSqAg?G6=9h4G!??2X^6j(==3bFa%0Zcic,JH'H"q;WQg1tRaG5GS$e?Fg*oqVCOk]>+8k
%li-o(4\OG*mqcmSH2Zs[UF1!Z[kftH*BdJMpnjHsQB03R>W_d$5'me>5r@CJps5l<VnR`4T"pNPX11Oq8LsZd:Ki%VrX0b+Z)@JS
%U!4Y\T;EXa-np_j!h38<q/oY<nD/ACR#[b`oB-?K:O`*/)`L!oF6h]MO8e>!m;_d5WW+7JTSN3mTO$b%iS/<0J=.Uhckl=i3Zj%<
%N8rO9"5FEl.aLIt;k(2g+#_"3hiEl+-I=*b0MLIa4I,4Trg:cTYY9&!nu#U`a@'HE)$,jg$jEiRXS[$=Of.nmJ:R+a)+C014r-5k
%),Q.4m"(o]=9V_#MbKtI&M,$Phq684NrAU9m;QR-ekoGb7=)Q#=^a(]'cssC_-kqq:Fg8Dlbn)40ZpepT/Xo8MQBZng"VFfd0hMO
%hAN^^<=^H8cgD?Y'ce(\g@@@=-*OKI[I(6cl\.:lmRk&5s13%76[?0qJTsm.:0Z9cd=aOi[jAOdQ7FE1-=2JJ6^0F.MIgDncoi?$
%X.\Z5S85FZW/m[4,*#<NU(JRrI#>3=<E)d;4=s4`d"^NT,b8Y3'g1`ubfl0(LkZ8Y=$5Jub*gMS)b,bD7$rUg"%#e&_Bd3g"\t/3
%+hL+>9F+P9FB$PGMu\fs#!DYe_\YV7$g8/!PMV4o)B0S-gD`&_-rI')dce7t/Z1bFTna-Y'O'U*BD2>F?F92*-.5e81SEA7\ZS-M
%Q5](3,4#D`l"7?"9hQ;,^0'D?*gM-](q`9uV4E<Ad;e,FFBhVkh%?[T%c\H8E(j9^9p*\=HBS[]CTPU16(sb[<UrOFYq5)J=hPX]
%lsahQ%G<M?6Ze=e$tee9'Y14J[5LgkBLNYOBtUcL#2W45#?(1u;#g/2%-S;c<1O/4Kg$GO!^VZBJXr2i$4&((!5\98>R*,3bOq+C
%$EDD[Ku-9Og`ocC"TjhY!Q<(DGlBBf,daX\lt%X6Pu^at5XD*SP\O0VW4Fmu'BLIpW^&DLaKDB\h$g4sIiLN.-GDj>L[#fKbW#)5
%'T^C4H0A;epibKh%d?i6[#q+b=)$6TD=kh'RJe*0HC*A?4'XTrOBpXPeUWCM-`:3K:aKn1ag'[)0.2/2_edhs>;"S:mK"<E>"Z&9
%&j%$9)F9&fBBqD.%js&K^OrcCF35d4*5n_7[V9GMZt\3!nY`-!V7&ZXpeB+H&KKj&cp3B_Zm\nsC)sBcCFsW0/Ej!-5./(crP>bK
%!f*C=Vc6)D,H@*DhOnXtYMiC)3H_rQAO#r1^*qp\('RZR/Qe#b*[-HG\reM/RmL,cCD8BgF4=IB"h)Ea*\Ga[(FqO%``B`NXu2pr
%l-79e&Zpd1$sd.JA"7F<TTM$2FQAC"rsq5,`<4^h>si7%"56j[moEqC^%30-U[2Y=8$B'-Xgd&!Y'?_9\RLR6eP&aWd?+!4jGnAj
%N81Zj/&`N?m4FXkjmkn0MBj:m%WAH4a;ZY0fUKA:N&sA%m2ig5h@9m0;puZL;mTU$,C^]A6XsK:GiNeWOUh&`;/#@mAf$^U[RN;$
%(3EgEOac;'s,ffPFQAS%#3]96'id+r%Z`Ge\`c_TPR@a[$R;RHCLPnF*<\^?r[tTlW(S]\D*g[lXU6,Obq??$hK>7*^e0b)(l[8@
%<:pSrrD71pYc=f8CIs_JMWh`C>XAO"\b_+43)I/;MKlY6_HVMCWiLtG/Rh8AU9^W6B3CA-+sWX/3YK#hmK@?#-qO#B5e5@D\iR2E
%>qV2dl8I,sXY)u32I.kN"RO!@LIB9*.IH'"lN^%?H:1V6O<$q$\jP^c\eD;*0gMio$E]lee[;)&l#MWF(03:j](7RDB`U'lj]!=q
%HE(bf*Or403Smc2JrGqskXar==qP`90Qmn^rca.G&W%)i9%Tagl#M'6L:%c1ecVa!3)I2<MLYl)<-]C6je!RK1g5&RgauKBNl/\5
%UOnGhY38F@<k8sK25)/C(PUF8X6SusQ?9Z"9(si'+*51OFNQG6X\l8pFrDP:E$TKYm,=lmRlHUlC/U.UbS;/?ge)eU[3cT`qD+`!
%BiU^_CdF6m')>!SZVJch\s)N'/Hb:KP0U3^fM+=)gRd97H$\ZIp.,,RqX'pCrn$Q7s!,:-g&?/<qr\4^CNK5Oq<S"-g\_#rP.]8E
%h]An0AGX#SDZ4uUoqPCDdAc^_R@24t>W[8o_[#r)rqu`BPHV^sb-mDi+29qJKl>!aA2U_a[?JMoN3[1,VJpGUKmX>qliq4"G;$^k
%?C<5^/eaJaK[e51Z/odi=h1RE0/l</3=[>pjikQ*WhuO$W@SUcTV-?$+]jT,X?p\I*ND8"M"LIaFW:o:eY?@Z/mtk^I<5a/k>VmU
%?*m(pNe3+#;)FJt1a%[9lVM"h/kI2!q@LbB%A2>7<JFTm[LL$G"jT1Pb^]mWoK%j;1?o9GLbEs-BsN;@?,dlGGpWDU8F.q13a3bl
%7$&dD4?MiO]q=:U>&=UDN@M<X*N4sfC.Z(E2@cd^;Y#DjRGSTK#]V%WNR&Ss9[dU8X2$3,1S=a\Q1@O5Y@/GO2-aZ6Wu@*aBpPXt
%HClZJp=*"JU:f6Y<E.LfOe*2P=gCi:?fCir__0j2]9rN/6FI5$>=h14HpOIScA#18Vk?lBLk9gHGU][%.D\C*iOBn-h1Vu=1Clbd
%OZH)ene45DfrA<]+,*]YP&&,;`d]p[:,5:tI>Y+#*tKDZ2j.5`d:F=E-U(UKoq$RZ4+utdouR2n;LkCB%ad#V%oY(,.JM4M@h_P"
%QKV=K4AP7eWYu`tlHLcE/aP+UDU7ekNLCD/[(5,3)irB9D7,N@[1S_LMTOGC3-5#2lF)9Y[0KY:dAq'DlKp'9X$/"J,<\cl)KkPE
%c?05.,6QGoh)Sj.2Pl]W#IgMR7B*E_@RSYhH/.BoPeBVCF2coCabS->8DXDT?3SG'VT%4bbo@YU>Z5ANd-m_-erL/GhI]9'9%?G'
%ldYT,8@([;,(R_?VhnR^lfc.1.b^A,CSpd&O];(dVI`i$ASt5o<M?,@*S$YlmQLno<Q%B[!B<!<.9]L872JXi9._e48LaMX.WiSl
%jK(fk&l.+&;C&dm.0soV';qhYBI`!J`9CSKJk3+M<4`k`f3:[TrDM?&<P5I*ej`//?Q.Snh!8]">8$)8Udfq?<ac0WZmVYE^04hK
%'iH"61^XRfF:CO#pH_.j1C:$2l8\ZlY0Q!FbX]6MJPO6L$;.+c3JinK:61LdinT?A<,WIS]0.Buk;]stD(a$=qs?b(r:-#Tk]k6O
%<#sg:nND[I*2%Ju;5_(d/.M"%TJb/"7dE`:L9mh1_bnq+[UZ3oTM?]MDE:tPEQ%_tRh<WZ6m-;1mL\baf)K^B&ST?NV!q(NTt388
%lA!J-[>Wm`'ZgK@E+_CVkl5pA\W]t]aC^rDNQros9H&$f9dkJ3P^cp]Eq:*XTn.51m<-t0YZskg?l7Hr=JRC.WtZbHkMR*?ODk;q
%0m&,G@'bk%pL]C[E,X*"]7bNk+")k<ihp%)7Z_MUYKTS25R<6hl@rUb;\[qWgYOgl_%`YA1[P`GCQe0mMr_'VYSGkI$,eWpIFp2T
%)G6iS`PuV'HfiN-)6B@L*5,&3O><8LA>;Eb.rcm38%Itj;k6<)duU+`-a=d]n*GE?+J_hC*XS)1\^*as'=92mcL&%ZX2k0jr,H@C
%8':;J5UF4WR9g^J<bo)D$m7]gUVn2A3DOsTqMJu8%d7qE68*^q[p13&o#"9@+XSmahOFdrA8@TT<=0W9/.J_I*2U&/Hm5T0PZRl)
%Up(9$1.Sl<<tb00Ul^_IgPahPqh*3eV%G^Jkh2o_&6)UI(*U+,`Q"Pnp&`L/jBb3)P8=k,CoCC5.(#SW]odIr.ohHfg6IOb*UT@R
%=JH?lSeJ<Fg5(?V2cO9S[3A,7Fbm_n7Yi?2:\F]P`o2K^SW-6FFa0rS.WEhcbtu;=WbT&$`ITSU#cns]7n(J;;,K3_"`c<@C.P^X
%j5SF36%tWZM$:Lf.kpMR@="m[1bOfGNf0YI=0l*M;3:E^>T?ohWR*]EhFJm0P)ejd,=kkPEH+s">TChX)al_c26<RdL5R[EX1#Ma
%2P@bSi5+fQnKn3_op>\b1V[dUq>Tfc&+4>Sk]ZumDh$M*\6?5.r=:`s?%58s)r;p!JO1-:m0sr415S`ZG1KN-BBqFVUK:lP]81aS
%6=NX=B:W!6B*2lto/#bRlQ@_KA_uC6)9Z^(l/annIbW4QmoY33Q[QBB(3qX\PXRWY\_`KcE]0R3GsGq/G35%-kFo9f)UZK(W=_RJ
%FrS[9]'R=g[H/3lq/QY]+pA<<59!J)[o(I!4G;_?8,J-n9`#ll*/s(iokN3cB!(^ann3D@Eojf@Q<'rPq"?Q<;PSY.",c7WS3Ifi
%((lO0et26$?.5JD]8im0Q=Kf!YeTC.PZt.r*OVFOkE>*YTW7^.S6SBJQ;^5DEnQ=nr;jSa&P*s(#M$3K-o*k_o)HeaZDg1qJe_l_
%FCl9Ao"9d!Xa_2?5uUk:+__`U=/_S$L,S-gDkq,uH=rK9W7+d]O33IH`9*^X+F.up!tE]4,E40f.C;iDCI:hR@\1%F;jup@AQU*s
%2XW+^A[dagCe+<_P.HKk%V>qi7>]6GT[fpGfgX$XUDg*Y,/$VQU,@P(0P:6EdbUdo3Xo(nP"*'c9[Q2%1K)+a)?ggX",&W-n;dpV
%]P,K"43HXKeTE&gk2:ik0[3hPX=E),Ap']GU:tb`%X9C8m'_X^<bZpj7I!LD;cIls'O.tL+lP+-H3J0j&@3>C%Z#h#R:kV\kMFTR
%<cbF;$l.Le[Z[#5p0kn'>qYI.'I:rO7VsP:4?/+eNS8'p2eo8K@KJ/EV>^2W(L]c"MQ/\9pH]8]/$GOB]c;o#OiZ%cNXd7%7pAo:
%mk,R8+[#Z9NJ=mS"_XY*efQ5f5sSGJ+P$(D%L7JNgTKn&[(Y4@UC>)6UNfZ"SKHOFW]#;j(#-`H;!lGNHj2!Mje-Dt\W\Oa>dg6=
%`C+'pa$Z8hj?2N[T[+97mOgH"$s\b[)H*)J.8=W%V2:->T"5NO8I0HW"?IQM/gtSSR?K\1i^b@AVZ5A+Js:)H:j!OBH.t[q&S\<!
%/COm0UncA5kYlk@h[kt7IIeKlF>KY3Q4&$OgYOrhY$o`3AZFVZZ)a0!Z=CI*mjo?Pf#.XpMGf8^[6dV\SHpLn+T=-\5ln:mPC;Gl
%*$X$P(j1s4ml5*\L@Dbs&lTa&5Or5mfq,e:Z4X:4*_TN@H<)ml/^+8?`GgT-a!#6o[S%OH\.To8>@'gu9;>\ikdQ\7f!V@nBrl&(
%!ICjkA#B!/B<<V>9!&e]W`=b[WKt1##'<`2V62:jiTq=@I?>8/0(EnZ[JF*VR;A0"-eLgD<;<M(h7Q3?B8,0#.%]Ifq.[1h86KX]
%nOlli2ZettW1kL]C;i8aBoON3H8@=Ng@LF=[39]_e-N=TUL"pGd35roOUhaXZ6;=]2fWB30#*FT$8*WB;l_H#-VZ^5e-Kmp`Qk01
%cX[[3Zfd;aOWg-c385c)aRta'.nb=&-K)G$\?&f@l4]@*):>e6A@J?N6tOhj.i;DUa(qiA(uQ"#B15d&V!9h-N'OeG'mChkX.MhT
%Y\Ym4gF7.\V*#`k.F3X^;q&!f#<F'@HK$GFN\Ms8(6Y._<LZ<uCH9]gNW:brlpf:lSgP]Ah9M$OSd$;aef[Y4)h[Fn"%,O>HV8eX
%Xe5C5V6Lag62)9QS/tRp/OpJ_b:/@HGQ=1EJ"DY!nu>-5:dPi/g`A5af:uF"@OYXUNkIP1cd"[/3H@_6RGJE?ad*fg=Vf_")A#'O
%X00/P_:<pQ/I/#:M`B:[X.n7:3;AqKjlJanG/V5g^iOE4AFM:+=(P6=="2`_(3/'LO8=k'i%[r-`AXk5)IB3a*MM]g:,CugV!%%>
%E#..kK*)f8l/_/INd)h__hqMT3uLg!I7?GA6hRFrdgK$EABZBYe.Q1>5NRH,=*8;STb?`RV&\s]$<ejOZ]c+^;<SSh%M[Q>:UfAW
%#%XDt[A2#\eIKHb]udi`Mo8A9:gP\Sj$hSoneNBm$^9B6or6+3Fb(?bnsk[p@GfOi0;KtWL[,/@MZsl*E]XZA*/padCMi%XX&`5A
%BbMOKVPeHHEKQD7`6<<JLu*uNA(hNU5R%[2'D)_8Y@c/g5P%8S</-^>ZENO8e3q94ULCNi,]e=$=pqWBFJ>#i7iZe/;17D''[M;B
%)^GLdH0(%tR>>O%2H4%[#*bO<>2<1_2t2g(ejEJJT8!kr#_uf1FT^,GT,er2>8idCZpsnR(UU`3CUZ(OGrCAK0fh>?`$Hhq'-4Uj
%>.b-!"1aU(C%*:%'?(PbSG6%m<G%!o#n(?id_N@Xn%VYTc3TpBLt`so&iZUQ5mKJ[7icqMop1SK%juZ(T"&N(BG)l2hq:l30[>(6
%\'i!L4gQqfD*gO'O`aW]8H[*;KSs.H;3R]_>NmG((-V6D8NUt]4pUR.[sj^D`KVi21^gKB_rJu=N6'\^%+MA(_p<JtDg0RrD6N82
%7sb]3Vuc,%fcEJXNO.G@``hFF(`[2hfu2:5GWQ\%_@BCbPu4LNUXH*:G>aD[a]PL$_?-8<4g-7?$b#25CrHMOpLJCk$L5?3$<?LV
%,K`C?NANsQkr;r/,JVV\pqNdiW:GF:W:F@q26<RQL<I-1.@Y[F=9M7bXEG<+-G:8I>t"ck-@I'kq06d[/>[Q,Wu!=;El4+e-NWCQ
%6)$0pdTCR>J4iZ(RU9(sh/YCuWZ<BH=sb2L\c\BAl-LP&dAr%.>cZ5;:Q^KNQgI."[>(,5L9"77Zn(<;73sJ_AjdluKE1g56F3Mt
%mP@-UnBFh9PgQE=57H--.T1ZfFRD39:U'ti^!TJ_Ab%H'="%\h[2]`?DFk=V9iKXC)UlhL/C7pjPb%:DLWlcB`i;msE^`:YV+a.r
%P#JEHoQ)ERcQEoME'Uk]==60!?!K2[Ef_G7QC_Z6g2=(1reuWBL4hXuV&4-1>+sj_h?i@aGdUUYGT:$cc*b:DK%7K-5\3i;M7#_$
%$d4$S2+<-.W*2%n<O[u,W\Hgt<(!@5^>spZ),]H7KC2/[:%l2"SIpON5GUh/_e7%QQeYD=LSW<r/h1Q%i+<djOgI%CGSc%D0WEgK
%4HOlD8^S&C<uJ%4:Ec:U'ccGm^dadD5bh]PLaFo@pH3iS=C\P86^l4.*QY<Z)+JD:O**aQ$Zhmd/86kdH:1]@g_jnnhZ,MpG>o5Z
%Tp7[@NCq%D'h.=1%"$R3[Ek;B?*C7qMU3BoKH<r-88Ft2G<qP<A+9YpbE6T28EiqR>e7?8%Vhq@\tK5&45.d))JM%pS5GE[1Y)>)
%B@*c`%V\g"F<It\AL+C;52HHO/kG7XG&R(W&dmI+s8=VAkP\ULhd1AArp\4hHhZt-r&t"i>,Q!,+6_5P#l`$Rrm+,`V;7P6"?Y:Z
%BC;^A>](:XJle+-#V%bL[<D@^7(ZZo6&n>hjn$l;oMhcHdT6%DUR1%B\^FE8$<cu;:>!5]=*oE,g+0\S9H[<\q68>mFlKS;8QDu%
%?;<GG1`E<liaMr:]+Z1g,^+iU">UI\]K2P1(=\?AI(f@d[\Qk5"4AhA=A;]Tdl%)'+)qJ1UWkh;cWQV#CNrr#<=:jLBGJ1=bZ<l#
%Y=/na<jNO"P9r)]-]O9i%?jhV>E+idh[Pd(oN("B<KUZWal%%"_:qPW@1"@4:d8q7.QOI:?Jc1XK-`/A]u)>9Q,3&`<r:X@Eq5!"
%$EC7hkVbM+o37oolm1MRdT\<fHO4];UkQWuAm^1IC\@j_lYgf@TuOtM>LP:PA[rFa%,"oc^2&^#$;/i>%H7-le4*Ck.C;LNU_'No
%A,R9efm&#%5]JN`5,.ag3=M`\27VR7\j4k[Y0KL99Z%&@<Tfh?*D^LOjiIM"bi*F'*;*Be30TngW]DDB;ULLs.(H8dE[r>gH_V;V
%?$kHkU2g["p(=[c(.5cg3*UZ'DZ?@2K65UAet/%;!t4Ma?[-S>C>0J0nMN[#-\_1$6N]l6SR.KsIoLbX]+DPCDtP1;lp:pFV45;C
%"K7i67^Xp:eT>?_c0jFs+HqY.pa[&hi*KI)5prp$:-+@D1/q%MUYr1eY\G\a;gAA2#-+gu.Fk@@FRPirZ\(3"G.bl</`Ni)iuasa
%B&l:MZhA#sD13PH[@kZ2afLNiT#4,AnND_-iDM&KArR^rQe>6=AeNNg:ZJ7t5u+Io$Ou?[eG,0_)3kjA+RM\l)'%;1)="5`%Ppt\
%1)T\\YR1jq]R[\d[V/iW)Hh3TOW`JUiA3-9T;jO$>X;A^4$#o6^A>W%lBaEm3I3PQb:10hU?Rl@,U;BHY`fho2Zt$t'>b<:G<+``
%#"aX#&X>:HJWa?==&i0QobLO/-e15B^^83,]-5jk>3*'t%J?kP[!#SPf;-2.;(bIQ33(4[kt6h!BWj:"JP9\H,O6K/YF(%I:($5X
%Es524"]^i?pf*1-lDH_q/X'atb*r#"><n$NbA%\/l<Vf9F;^0s_mia'Ea]a9Aa?M7;n&Qo]V1n4($in^<J1fP(#RPUhYB\EgYT-a
%=8(#;TRuUc$(tbqg9K-%8ipKC?W!_]i[Z#i/uBYS$qpP0X(drco\S%S!Nak]p0Ek>>@$N7<0K1^;#-Gj\1K%O*iO*7kt0C'JS%HJ
%J9#8(UnhbR:s[ZKU2n$6e]@kp=Zi$iM,CaemKnnXS%,n,e/5j73K$BSr:h#$Y@@[W,.3$fN=t]#22b;UeHD--r#E1N9qVTFlGkJX
%'94:,Z>@(?E8NOH5%>c4NUfTBad":3;BMr3eHA^-@f<o^n^`d][Id-eVY"oS=]!8jA2(-K@8Qlc%?efVe^ReZ2<!7=Shi6&PO\-7
%%W\29<(n4qR@8ZSC[QU'g5WSdf4&'Aqjc@gP,8O2b]@_D<!''Jo>cPgo/)FT9jj<"C7_:'l2#u=8noYo66<:=hf^l9QD4a&jBs@s
%6=9N'M3/W7WMh%oY+VIG7oNJOe.bWEl=q"".@PcJ:>T9udhe$2#-qRPc#HJ*TFqt>'e=2k!DRAPWF6:6C_ZEn.$-aK0O";Ape(*F
%>tUm'#-Pl*[QQmAY8(:(&/>pmEQh]k&TZF"GHVDp8n&F('>9MtmD:A;7"+pKG]0=$8<?W!,,QJe5(;WS%%e8c.a;*t#&fLC#M&,(
%Y\L2g$$5PT1YFep"j(FR[<;nk'05Z<a`)99GTXah$7hq=8"ofZS*dkaTIuF?UFGa*SF'"QYboLE%/RjVBN\ASor?Xn;hk"lGj;Em
%,?7QR<iZ1_)!WeP.1ZsSdF;h(ImrMJPZf,i9<;<b34592oWm^p5S-?7;d\/q3TI/702Wsg^*u]S]Y)D86iTbSVC?4;UEJ*g67Z]&
%2dd,%O$Y;_qC=Xh;!<aBU.Z)=o\=ZM/Z=%cHQSPK*'\);7PfdN(Fk:[Ro1#Z`+868Bg#WeiGaWY>,o.hco@/:X:Issm3o<K%s,pi
%g8\r8cu)?X#FdcK%q@?Nod/u;0enBnUrtLZ'T*LIL,2.gTSeJGY<"/rR][.rR%kUH-'63AZ)(cl%kF"3[5C@]g;):O?<8)`@^)3'
%ZEDimD=bM6f<r<BF*bP"e#i$)42:^cmHsecA,\+\+)'qgeGNUmLe3634[,E8KJX@'G+Qtk:`HiInQ#)$*mQdcb>Gm[iF@diXHH<g
%F:@kQ7H)D:*Xsh0G@=XXK2jg2F]Aa@[oj<-/5.WkPQ$T:l%2p#F[WXj5s2nN_1')#f)N]K0BfHW&]:C/9]-^"M!3s7/HIYZ*oi8D
%f3B5c7\l\$jrm9MaPP;/AuhqQp!M/^G<o%>qNgEhae*k"ggR._6b69Of']s"g)(T8]dViRfcnqo%H.pB+\Wbf2oV7UA^tV:)V3;+
%8-ekp473q?X00/:hL!u')G3;t(D/4Oo0>I9eUF)GVY0JO6`WXo0Bdgn&NIna7`X*nL^h_tYoMY"]$2o0H3p@6*@j;cQ'T*O.=5;-
%8aTIL[Io!oT]LF5.M6LJ>/.9tc#,%EkO`DpkGr*7L!Xk@_k,sC$XG%3>6SK>Nq"=2+^t*F$`RS]U,*u'L3I6AN?1HapJq5a!T=A(
%3*8O`k\@:2C<mUdajCY`3Mp>=="%Cgk=i98%^mOg;;<q"pNFtFIb20]eVC@GWfi5SG7t.W*1rEP3pFX=1g-?Q;r3"&aDcSd'Xr='
%cX'bfjJX-mCX7!P6St;,lZWUPPN:`22?i>W'jUWk"dl/q&<"A2k&j=VW^fr,>M(T\Nn?<\J3e3b'r"52"V%j*.(#0!O'Z$bqk;$Z
%e&i[us(@,ZJ]ER\$"d5'.7?,Kd*b")![3mZog=\dEieSBWb49,EGgpDO.dp,&lqQ\G<ko#Ji-#rf-L2JeX<:"_`8i82q>)5liWcD
%[FWhNh4d64A%f2!q8F1(p#b+l(StHYH^/$dY![>C*?u`CKr*RbB21^GYXK%oJ^-_lMSY),qa*I[9f:H5EHCC+r(4mBPe+)*kB^R/
%q7ZX1]sHoh1P`N=P>"HeNg'W6H7J#Ol"J7K'%6h5#rqA2JE5c/fYTZ]F&lhY+T>UXQ90fAOgq6>*@+]6M^u-#9J1DW83,0<FCdjs
%rMH7RbEAI9Pp;4.;i$TKUBt/W>-`T&rluL_/PmibYMJmcE>0='-k?#?/G$et8Et_,B.(^\ks/P*\[`t%,?Pl$n?<!9)a<e5M[ppA
%_>1(E$U]]Ya4AK2\WBbD5IOf<`5G8FJoh[-g!XV_PsRG79,Hq1]-=%@9)*G^?55]E476M^.8j:!78G).b`Pg]<QDNWQE[>A5M.`0
%AJPtXWkjrk'pN]T;4EKFr2df.na]<[",V1MH,7Zj(W&Mtg4=q'hE/Q"cOaSi=MF''6!P9@4gJ>fR_2ja(i$^0YE9-E<'q:@.9Y<G
%SN&+qO<M;nIo^6Pb=XcMA-p@&;D)KO'dWb.M%=Ln$LLAame)/;,j)naG`ksropBDNB?guf7ulLo(UGI6%L"LF,PpOId>2GQbt#PY
%T6W=jqGVO;[Bt:t%RdSfVo*B*^bR^V>%:"E2R6_i]b+bn^t3L0Jt.jF.m`::7?sq%Yd.HqF;kRMcHmH0;6F,'(ZYl]eZM0e)]5lU
%;<VUWXlY<UkYC;U>**l+f:[#8)P*#J;58Xi"fU_a!;034[#q+bf8/#4<A[dd;+:(/:A!Q8aK]5"*Ko9LZF3-I\l^l&.)5<-)ej)+
%\T0@>'gR`u)3:XEpU45..*\rpYPhJnfYZS+jDn%A&4WVTFYp*W6q?!dBT;WnYupn$j''j:j,qr)S6Q?1@;&%pH?M>!4dR)c4H"=-
%gUB,i#dL2cWKsNA+C[p40lT#DXG#h2PJPKLl5e6pYG84Os2V5E/j@cWnG:t5^E!^a&e9-_f)>!,X#1B?ruW0b4E@\qUrL3&MWCl?
%)%hlSFJZ+t7Y*a*c=460jk!@8_.D:)WenO3\rRl"-91!VUTe1IUQ0T_%Zsmi6V+)q8W8(^/`0EM]i)!;Kp3N#4dW%(C/ipN;!j'.
%Ur0+2_mj(SdR?h0C*:Ug3ce27@O'gN%0XO.6NBu,AC)f18;[k.FGdHLDZ"IjCUfcr9QY+S6@N90e2X`-U.3>V*ekHkq]ZoBTE+L^
%6P5/*UtLKgUD);kd1P^.]bt?ELahO/<sV5fJT?PV+$s0tSdMU.Np'M*3[$@QOg?L!Ku*-]j,\8OO&fqA_#o%pc./hOaR6tN[.Uih
%A*F011"ai2i<i^l]F(dcCj<KYa0mrn<>ur^FRd4Y!*dP+Qo2K\Tn0eEPJdQoLFO3V1in8Bc-Y#kp^$cmMV]HFE3Q5#qqsZE@I\2F
%NeD9eSYfPb4uU"o?Ksp7)FAUq^'#rC+uruoV5c-p:->DO>+eg^,:04*+An3uC/j.smBaK_%b89iIH"t<3h<$Vqs-UR;W`SSDWLGT
%ep>;W>!m;!k^iA\!oh^`XkOcZZrUidKW;2<9<[VUCV<S,Z%6NU2+gGO!uJ/#F@]7JW/##ll?9-Zq/L@Hg0BlrI=-9';dS&>S$%?F
%9*qc+$3O]"M-FfKN&P$3a@\dFKdtY-U?#>,R_V+;gT0<jJmapU_sRcp1J)efWZ%PQ%i(OBRA.5DUUi]kd=J!*Pa^%D7QR?3:%('k
%i1rlo+-o98K'Su-:.)GP$<>jn.&j9E'EBo\3+AAUPtA^JZKZG."WNL+%A1%g&jn3C3tLnB0DgCZXi8bl72CmcABMJr=3D15aAJe7
%K?^bWE8@Z^VdgePPuU?MWE&K"aEedDBmo5RmB`gnNbh:SMip+[O,Y@@=i9Lq0P!+^DZgeQF)J^HH=B<J4;O5kg]5Us_Ldl\UD3's
%WsbGu<OXL*l.AKll0sg++]UX_Dm=%fJ6Hk*>.\(?/%%f/\0YuEbR_=M/<]49dPl8-ko8=eE,Xe`C^kN$>bCYG,n;?p0m3IsDPtd0
%JTf<a6$LVMb&Z""<*@KH23u]fHM`$NYbD^U@ruVl%p`,F@kErRZt3)m^_^7*W:)`ESVF(Kl:j_;mPlNQ&nsF3\<j@n\3TmqR:W#F
%&S5%QL4Z+_?%Sr4'$lUM>uX7IW+`e.p$-'bXK8Bo:at\q(>]8S2\7C\Zm@YfMUE^m[!&.i1dM/['sE1m]6STW+ECfl2b\7CYHL.;
%dj2.:("@3J%ucn8k\+<aP8tZ:[.oIq<"Vg0L%^@XmZ8KX+P'332sKEHO=V\jB01LnmaVc/B.#_b7u*cJV;/iXYddJVYFM_WSg;84
%,+R-cg:,RSG0m+b;!B&_?^da[M4(adNcV49L`]ejZS8sfCdsnMI[b2<[@C6.1"E)ho[FMQ'?&>J^b1_APKk&PZ[V.aL""lNlc^'-
%YRDqsQUaDh_))i<d5dCcJ=`,V83WI)EUG;E3WTKGp[FkFK]>m57s(d=SN&T9Bc&2Cc_b.--[8Q%j<[p>?_eX7e0:p6/qnckQggnB
%4lZQEe56kcRM8dFH^o+PT8b6]+#jcNB#DG_INFC=dkebg:3ia_A$;Z=L:/,S_8ogQc*/?#]Gt2B!?G;*U:Q)uGgAh5AjWM4E[`&D
%e5>3'Ep0>2_J]=1)D9:hTW^_qjM[`\)U'eH6(j3&6I<:,jDiUk,dA,I*`;H$+E0s!S/!JqBg:!'RN-_lK?ua7GpXd?f&b'$Bnqtc
%C[dH`dSKtM@8<@.OrJD^MSVhTHJ1iZUi<i6K@e>hLr2kMPGkQB]l`+c@q:J08jqkeX&POn3kT.1iqGcQ+C2&Olk*]J8d(8,$pf!G
%U7r9XVPF?ISF)&"#tcj-+=VXLX<_&1:q2pQaNQ#_L?_\r,>-;P%8DYa]_;gtpHk`@0`5L-@!2+%]a?Ta"PPVfF.C8]D)ho>*i_T)
%c:PsW.>9fE*8Q-oVT;D^?8b[oQ]Y?c)F[DVK<;Lg-*=O\`f@C'kS7n/]a;A9/O.4Z*S73#0b'3P;9Dc>[I/ujO4*5u>;flPle@r*
%&W:JJROZ1]:.OkXQ3B.:'bh=f'7j]6B9=LoLIHZZ]GoRi[hK.CpkULX$o,7K;MeHi61gnNL4"@EF@9j=N=[aIm+$A^>MsU:[;@%&
%?m#"n6dep!e-;2$PF:F7PN@3Fg@B>!$FG;`Lgm2k-V7e`!Vrh@^f!;:(1#"Hh3\b;W?`NRo9is,#Y"k\4!\Ad$s7MY[Mu:BD^6sF
%1W:C&&Wnn4%\+oP"^Nbf@C&$h9?odfJN4Dd(\Hhm3TC-32OX(J<PR:Y"9-'*iAIjMgA3o*f<!`%9j=N?^%p(3ZeJPshk'iMmG!\0
%g3/9P+YS.Yg;ZR9?IdJikltlIFt^Uj?A3*_Uc\nF\A2^8DSaaLS!,q^N_p7.j0V2-s#AZ=b:tRI6ljEK%B@if'j;Pj;!Ws)\nuCt
%*#ID,W^^RL>]7Z.d>N2_K8t2R8jVc+n#0-,WT"XmNHAj]a31]%]%QXqaMXH[T^HDc*$BAFWemOuY+f!7Xb)mLe\#ji<4+QJ7N\Sa
%lmbV^#'s=O\KCl]k;hq1i)1/;io$lq,+[?1;o(nb`!7_VUE\e%U'r44-s&sk%WkMe$a?O<*8D6-B9es<6XDN4\1+*&T&Yp.2MJ)!
%'jBE-:g49ZS&,M\04cHma9fGh/:BFN\_Q[V+7HMoS8%/[Udtft4_Jp^4V-(#'I"ojTNAt4CXqNJd0W*\B&;e(3iZst;W3,A9>D]f
%\_Zok(lt,#\TT$>3+e.2\9bbjS4p^:lBZ4><hlt#Y*tq>lg0pQoT9i>KB:fUGU*gF"+^1&gtkSWPiWg^KIXBIQU]V_[L[7IRgUkK
%n_e65<]jJ]4,WO/3YY#?=5?o=U39$g+^0#Z>lC0he5f)3U38F-1Y.Isk_9=,!<m1P\+SXjSaj;O34L8O/kYLp5340=O"o`D!0F;Y
%'m$]ISrHkjWCNo`#q/ap[KB.qWn'SGBrSGNS(la-ca\8qbdTtFXXXc[#t(E/,=!oD<HJca1s/OlAQ([dQAt/hXPPRj+,Xf/=/VbC
%o8[R2,A-K0mo'd]\9mt,>#+WWQVEs]6)m27R\+d$"Fs8>*b:TpOE-;OX)0b=%<^G'Llr3S=!r`Oh/;s#d!b80!a&;P9H%c+XLFmc
%es?lt5-)9[aHhLi0WB[-n7k/g$p",h567F2.;0D0%$oug0t;"t>NSG?9_c1[1%adT]:XWAA+pWbnu3lelG[E2[;bZia8iX).("00
%5h"p"YsOofo><2UG!?"UA*eXGrGZXf5Jin^J;0:>XNl.2>R$G'JW^!_cVP6>pCknd;YLjOB2U=acD918!&^(k;!fVaU1DpFNAU7A
%(5oes!75FT_hZ,MK<#ral6jqUm1FkQ];O7df?lmQ<-,*;d49AS&<F&156n!1#q3#`?@#n"74]8),rc4pb>*6o+OOU=S-2(l;Z/N6
%ZpKKd<_#T43^Rjm'ALI1FqapKVN'Wu-icT\lL0`733(&'W#Pt[Pn\:7SS=Dl^J`aerH^VK7ff8s*ZP@UX]@_:mWo5Mlo>;mpCqRc
%QCS7V!?;YlhXqSUSk97,;ZM_9]"q<16d8O0+QmHPPL2%JD8ql?X#pPB/XiR;aB6.?)!iG<o+W%-E-2j3Q8#Gr0&JLf\VBa6BrG/-
%d1)]Po=sRnne5tfk.IB.V0SGMD$h.5jW,(#!HlAbIKCeW`*GS.TJgOL!PO4K1=Gn0quiH)JA.568['0uX7,,$b3bU\Shq..@n&og
%K'8b=%EX$iG\'Bbit]kqY3n@o>C%cTCIne7+;;Nt3`Ji$e4N5b05O)ljp]YgQs#oZPSV*CQP.g!YNTR`[D"o"7GbE^g8^P_ZR(D_
%00l&*a)!iEF05g!k?9,YhHi=V'0fLeJf@RKoS.*sW3U)OmDXn$&2XaN_jNr^a]1];VPA;qRb9O/):1-IAFri\<.>D.RgMa5/\>pM
%`t+.Z/Q"e_O0`#=KkN8&-20j>>iV`NIjNC"7Jj`F4'-Q8Cd(@BDFUb>en]D-Y#G:rm)_E<lAKk=BXE>s'6eOSU*?;uBV\,I-EC!c
%BT@NQ(DJ,V6hjGG7COHJEscJB(Y'G3Nf(^UQ?[@oYYgXEOIX_F.3B2^#@,[$LpEr"N]Kse71Q4`3#,D68WKOo#g!-2?(LU\n>Eh^
%:tqC4Mm%O*mD$ceq>K,V+5G]ONeoaUJ"SCa;.FGP_OU`sE[ZR9`@D`M:MPMk8%%llf<C9AKh9_<R4l(&jf,#$bOq3'#IH2=Bc[\@
%"0)f&/$3)R/["r'//6e,/%LLDAS@`*U63NK)d\rL46R#$EYtV,+u*dgj&s';UhZrr(tGWAfiTLdiPVRCBN^t-X6Yj^=/!$S]t-7^
%`F-.cTq6Nt,Ft8QATg4L!c]uYj&n`$'HU]XE+PJ6LWNVd!u0o#^S,>:S31tF(4Eh(@o\#eH!("ceK#+\D"0mjeqe&r.CAD'F_g=,
%s'@sihXOm"V"]%6+'G+f+_fG0$\(jP5138/+*D[uidd2(V`3&r5C*o`ooYiJY!2,hFSFe^-1B^3!)[[CqT3Xl*PWhlWtT?0DHEK0
%hB7hb)q&JlNbY9/cA=/glekTGXh>=SYjSMd"b[?S*chSsb6*DOSLH@ee*)IO5BM$mOJYQa\m9l12R9">9nZ@lBG;$B79(Q77(kVB
%ZA`O\<MO\6[7:#@>HZ`hZA/>g\MiM_L=cr\C7/+%/`pd[dni!akuBAp2SJCp&uSfZ2rpr%.RP9(7!ef<*,/eJ*#e('1?8IY@B_tj
%\i:Oa=%IC0@]Qh%&R-td7I7`T>DN&9DS9)4,.:\EPn%QF=)+]<YDB:r]HXdfn?oc0h6i@Tl/!hqG.Ui-#.LDQ-)b5%(mX2^YqorP
%"Zjmh`nKFs<dM!F)=Btmg.iB_3W4I8'<Z1o:;('"V]ujSN'<K\*@2Ec`C"*39=6K><IRcC5*-#68(\bpFBDF<Ba`E&;@TsF]EY/+
%*-?8(68`gcLX7NNC:KK.&'R]Q6!HFuAS:(T,]+F,ODfQo-m3u/W*'uqe?+iX8leSjSX;<X]A56Bqq*Kq=>"dZ38@]m6VYT*cJ$>>
%<J>a+C;&AHTjo-KbZ8CuiA8KsP@3*(W^km)URF;sC*JP#;+'.Z3ML&neCBCu;n(M@UUlNB3,7uNcSV"_!>0NRN=8YLNC%Ei<HWG'
%9A3VTgJ`=)DL'*R.O+Vg:phRMGSY$bhq:&JGD^,%[-F_pM"IN<TIleEF3%4.)":@u:V&RjkrWWM>6eATI2In4DDd(3]b3cu):+@&
%7\a]RXD"aoUoDbh<-HHLNc]DQ0%''0]*cI`9.sSM&$%[aWp>aa\"g'X]t-+\`HX&P4u,9[P_^^/,:N_rXeM,3WG"\=Tg.X1&5WbP
%$C+F?eO3EgC))^n6mAR5K,m.WJt/jD6gDP>;<d(P(Z^^c-N5U=0>KF1l%_,^fkE]cKE,WQ'tRgq9!^u=D@s/Ai`,CfW%BHPQG4t/
%R&VbQ!@#-#h6'#@@ikl>F$"!7;=#)oIbYl>OS!-q_l_[i\iH6gE(enioSAAj?:5X/XV><'g)c3ok+P.g[n=.0h$.bMkg`[R%2ulK
%D:M-Fm5W:I4M>uu/NCC$U*)nl(tfJ'\fGFD_c)1ldcQ/2^?Q7Up[:fVn(rN_It"s.j$R:AY1>XqrWB8)O'ifTUN(HcZjW7WHdJp$
%TVL3Bcmi-$YJMc.OgpDEcE"Zb.M2&0n0@?.`'_+\e/>-2:/%&Fb#A$!6/`$=,*."0%I*\?L8%#Q0MQU0MW<5C\o6^TN't<&Wh=B!
%aVh)*Eg4BW$AdMO@&ULI*_8_E.m6Z;.'bJ-^G&u]GG-!_S89j;"/7_\q?u<m3`W@Y2fM-FK[\+-]tOr(3I,dX`j;M<U?oi($"csh
%LSKeNQ7V<`@+bDd<K%gL2Z1dF+_oXuOnQS)eA*^cF)cOnq<BhjACbqd)<iPU6"Sf9!q?I,l@WbCNrAVPMn+f=Ajq>Iq0hH\dt9%5
%VQ1J'/)F;=?9U$hd;fCsfN,5g_[SqMh%7na<=[c2nCm<fQS7,.B&"@`e1UqL8g1Wnb0;=SFmCheQim/h'o8#NDhiLoUd[kR%H;=e
%WBh95<1fGr9qN!a0nGV*O85a6i%mAB3EnlL"P'FVo,C/sBEX;#&I43Ffd=EdV6[i*Npm0E7?G=g,^b9se`7uK8>L,JbN#tq@BhR<
%%qCKXl2Yr=Ar&q\e#p;C*Y(t0C39TL#S.T\GSRL3i#N#oW\fOYr5d3G\#7066^)8[RN4W1:.`uX;uL5&X5C>%O7cH0^#AZOC@C#"
%*9o<4+$rK:*^)J%;2Nc<CX(PBq5AXAU?7pA8>%P!Ztb"1^+9-7>-D^?O>OT2pK]:!Y(=9pRV,$r=s4UIh.n+46.FVSUV3b0j<9gN
%`Aj)g"'`T'Vf2TC`]hkR`g%R%pGr()d$>0m(gNRe`CZAtC@EPR%OX/7ft[n0b%Y#h,&t@A[lHXsb&'Q[/Wc;0Gd:cNRQ.#j`11Aa
%cZosB4TqOAklgidj>"#Pg8Ked.@#fL%YpcIg(qlP&GG6`L8Kg!5"g.,P7q>kajh6)kR5kTj4'&U6'E;P,jE09KsnX*$>U+I_tM;5
%Wf,/L>3httVKSB3'WIX84q9/2JW.o4F^E(o4"_pP;b3[.!Jd8Q7r$)Ch9?\\W">5Rot&d?`;;P\lTI,Te[6DdT?0%*^J!E_e!a)7
%D=pKI5D1D(k4En>@6@XphPJ$YKni3SFTcnjf"g;hR'NGA;S!%PA=@o)B%]_4PuVf2X2Z>:O@!Jh%7hM:!l]p-aW7,gAk=FeOLj(D
%+$B*4UP4@00%D>%P#L@:P:W5)*83XachUVA2G;?P_Xk`.`6FLD6TVe]+.f-BTt=7MQ6d[fB8q)n#eQKEL.A1ZE/5]p2D:Y2U6jR'
%":Sq'lMP,-=>$Pekoqg,W&s\s*p/DH(4h[A1^G1:cL25D!@^JVdT4/L$<AkNlb0DM7gZ!A!iWo6mTKc_8ksH!4/h9;Ec+W/@s)P@
%`BfeRVr_uaUY<$S<Nc_68?,T,+Jc+L@J;r_3:Uedna:[s.+p.k9M0-(cmUeR<5`BpqaqU4aCXfD+u?0P,c"$J91:!2R9XMA[.*!-
%3F5&#84k9%k`ZeA"d7&5(&.rt]7LHr(N4std)sQ7`<q*e^pd&DMUa6!Ajl1;(`oeGnh8/07A0t5:9'_c&Dro`:Nm/aU.hXKl6)fD
%jM=^:0>]/+mU0.]*@t`j>WbnaQ$o/1ePqHYN6AN$,+Zor[%^qShUF779\8'['K4uGjZ!t`XEE9V.%V'H`<n9*HF]Pce()nod*=dK
%:q>9rd-K]4P@pE000M1q+E^W3W)a[Ue8]LBeOU2:TWFKp5i[Hsk_;qP@P?RDOn"g3EB?ul,+g?lEe_`[JRh,A*t%Tf$n<HrdO@t`
%:W"'(<>f89't7CUPo%*OWbYa#$I4BA=[g`FkIb8!_NGU4%i\ZA'p\+BAjc_KcbbbQVhYm(K"c@c_hYt!2H']1ZA+Qe[Bem6p=t2Y
%pHJ\Dq$VRqVMLru(ZhP>JX-t6n'<?5`)(.u%oCq>Ol'Ug;2^)FqF]SHo"E'F%<p8.Jp5QTE;I`t,VKso?DN^$J<ALJ/JSpm/gS-%
%RL;tuKi<?I8md9NHZojmb-TXU.Tq9Tf*\`%l`qNVL.^CLmP,1C"BaQ0UP>JHo@\p'OeOKob2i.VkRop*"kq@!#W`q?Wd%P$60=nT
%)@]7pc)K:cNS4\o<4I*Ro51,nS[$g6(R0`K?dSOkFb+UYg+2E$3^=hm&]c@k"HXou6G:gp%ChL?Xsi+HN1I"*-;pT_@jRe9dg=WF
%*b)i(/bA:f-+*b<*t&O/S$3W8G>:_]WD2A"6uhfN<0Jg>,0p(nW6*asPFuh3V,q8J'eqCh<L4(ceq<9e\MXM-e`&l9d>2nhM4_*(
%2^li$BG3\kH(^EO*Mbe_\Em0NSOAS4DW&K'_tOgd[p3MSMt?Q^Uqrh:*&A(;$=qQd<4\:Cm%!Wgk=g`nSHS3Xi\t&k>V?l3QHS"C
%im*<0d'@Ideu/mgJXDh'aDp2@(:"Vd0KV^>K/]2Gg9lX_'4a;l;dj%4L7cj.+3VRKS%52Ap6ZHra_E'/dS[PQTdSiW;@Rb@=_$EJ
%cd0O=%]kL^bmYAD376@=KU>UkMq/0c;nga^FQ*_g-sQ[RDLfe3Kp`Gpk][$*-u:S7PGMOVUG6*(DO8;.THNOG9Inq!fnM0sd0q5S
%?A"UtI[IT)`bJ%[bSiN6St'+kSS>4(;j1Q8JY015+"FSHg,c%!<G:c,YHEpq1"r2;>^IbOc*EdZm/_bT:LT0gd#e5CMa]q#(*/Z*
%ER[H)T>%7'T6_,DX91PD+-sl$fbtes/eo;Q[-4II\"crGI2%Ue?GaRj@`u*;CR4/L[srgFpLge91@W:Z^O1+gVeVOSWdjhmN6h;a
%d.mO;TkVOjEQ7#n<Mga'A#db!2CVRG/%u?s8Q6UESXb\VYb/nf!4LP*@h6P-0I,6,F4HqAr'o-r-I$AXg:grS:2=DHYH"]5cI'=>
%8ZY$tEWst301()WL\tse`"TX+'Jp4g*PJG\d8'nKUU<5/6b-\%RR:lt.\H$:aA\9[kG#YA78GQV/TnRKD`P\@F*`8k!8!(46FVkH
%mQgk^I4]UE\))#Y^j:s[X6%k46'(P*^%Y]35!ft#^',J?W+:q>e^Yoe^"J^8"LhAMk)O9mVL@Tf+UrArmOG5(gGJ6C.,Kr@)?hsO
%8`dG48:.p5KDaqaY"Ji@Fe_+n>j_E[0`dpQ\@$:<$+un9C-a#u&ZVsbRU_:)77sp&=u_5q2(BH<o.Li:@71Ku6M?9j'?7OGKsX+(
%$7b1SD=aTc'a/ZOO*XAM([2*gA87s?]=;%,'ijS.RSYgd\U.)l"g59B/gD',EXl:G$Tk<B/-/2bY$O.gDJAq1s6K)IH6u4D1sL@L
%ocN0ka"LhtC?r.JHNh(/FdVD_SH^goBGOJC15X4#Vgn^0/*j6J(<Ksq#IdXOpS=92U:[A&8;8W*o[%"1G,iY+HGoA*3MF)3,0F\:
%6LXZT\ierfE>h9TIe'/:<H6A&]$IY)BW!Q,K1L1MKIj5`i2Xe"M!@ub[d+nH?*s3eR[giFM[nkoM7X8[\h<<\_R@XV\NgbUSQ[>%
%oqr$"Ig6u?c>k6Z_2+c!LhrX;qB@u7b5sYj,9;EHUC_?GR7E=N0MJUuR9ESW68HlU-KhltA\rdQ@A_KlRP8N1e;WY>!`LeY4l:l>
%a#GkQC?^].1Gs4=MJ&"ua+-#4=o'0/EY,VKdR7c63Xb"?$.IbWF<BuMhTr.erC1kt)>"AmD6pf,>3o66TmU=6PkRcQnJE2)IgjYt
%X1c';*N,T8^ND:]j/iWh<i/-!/$Mqn7'n?QrA('[W\Q/UY0X_iFE`7d3Yd/>l0nJ4\n\1[)8<c79@SH\HUskbS(J&Qo?K?M9&1)_
%*'op4Um6PSh/(4O2Bh3U2T=IkL0WI[C]gVe/MeNB`IJDY1HnWO''j>/%^\QTg@`O.++:HD6cDOf-2V7g@X9&a]=X`H]o0q+4n@d@
%7/<(/d!K>7OY(V=j1#$;_*,ObWMQA,3hC;/?7?OWd4S,gFHY*5<Uo*/f!9FM36C]VH97([dGAR"qcN-FAFn!/#=GA-9jdf^p20W8
%\nucj-i?WOo78'`m?2Qe'JqaD5i[a2HA'L#rP:QH=F[FCY*G0>g0P=2K^q!BlcWu6/p%Z:2u:2KB<t]N6HDdJD-sX%poh\.M9;B#
%oB\qoa%b%(<a)'$K6GZQ9&%jMMQ@JEm$7'+gAAo"+c][YAnf?7:?05C,MVItD'.qh+1oj'=0tN'O\$[EhqYpd4Rdk;)p\qIY&7n"
%4=TW8m>u-c7IKR?pYYrKVpC\QP5:M9s5U`KroUi=InoZT9D3:"s8*P2he@fc)FcU^Lqj]:@2n/5>IS=hm_gS;]Y^0.S\Mn9o_kgi
%^DThTLphRFFXa'?DB%0>TQd8Mr3S=.UL9Q_m3Uj.1+mX7m^Wa%.N)gFUEWAc^=%qO0,8;(APNcf2@XLsg\UhFkN>6G=ku+FHKJ+(
%=@OIVAP`M/(Xig[kCPqsU'C0"S&]sFS!k`A'XiDK.eF+5RkO"]WdjtoQgQ_Z;,dK-ALht8R#e<9J31'a3sU$A8l=:]Jkh:3m,hi8
%8B<Ps3h\3(KQiNOY'gg7FAq-A?t2Nck_a!Wr%U<5MhP'i5f?:c^m@W$L,e*i(sf@k+u+o6raG$A%:lBmn?,.+(OY'.^8@D%pUd#s
%3I9&2>`1*!-N`nWLB\-/Lb&2qJ^]2arT+.EWT5a^(!6Y=WgBFW2?J:sqF%\-2\#_&&+clPgc6FcG9`oe2GhfQ0"U>3F$W9j0/L&7
%Wb^O\fr-d,KVhG#Xsn8G)ldYGa/Gq:fg?!>d]pSf2^J]eB,N^tYG#0-7\b1('!jH0"u)*3H6f>tEO>9b2Nh94Tbj!+ONk,[VR8"P
%bnFe`S%<2G./RosRnu_hV^_sEcG`6JP-h3I,].hV0JVs]3mFHf;&Z08CeDu'GF$J]1^^l8<K6_,069m"nsn5BHr;'n>ud3]ELPhB
%5D^t&2uQVtcg;$eif3SOG0]n?VfnYaEc+D"@!r_&F;D24STm"&-Fm>'9$8kdWu^<\,.N^Wkn5>J^kV5[=U';_nBO>;KAJ]4b=&4H
%9dtd_kRo4&@7*[cn9SPEDk#4aR.L?N.)n07X8ehXAX9SIJNdYs`^lWW4S2jUk+@?k>BHb&Hk"p.1)dS!P1Y-0kHPDN4H`ND(i#HX
%)6gV]`QiLLEWAjT"r@RgFN1hTK;>(3P'0G!`+s^9lPRI?r4!am]bc)$`lX4?MrK-)Gj<Rc*(+ED]#tbLTX1R(oQ/3/;3ls9(RpTZ
%b+3,8f<%T2`h.Bera3G?r`;>``OqOrj56a=+[[H;"sH;_P6N.>09`Ph!\.R*DkKC@.d1\:W9TD=&Q#ksN@/"NULaIr,(WD^22BDZ
%Z042*g,\3f0,-,alUN?]f-R6rSgeo=h(1'C/uc1aN!:-khGLq">:o89VJo6YKr7N]!Hku:-C*dX<ml96"\AS9j]YrUoF&(<QGBo8
%cK0IPP>UMN%?g[_MIVO7UP1fR\u?X73rA;0RBb*]`6+#f@V#,H[s67Yofr(^I?[t\bP0$8"Co&nmjMLai5s8q/dORl+G5fa*KI+T
%H"oiL#1I\hcg8?JO;V8#Lg]".;eeQ"n5-YHqc^To6WA;bJB)jsP4IH^jo9BRqGff_4Z%'.U-ttLM0]gd(-.0hC2*]DmeaR2>o$[s
%oKVu(LQl$fC/L_TU.MmaM7RdbCN$4(,.6WDDcQ"6*f)d[[%Xq[h>7snm7@oORA,QSm811R=oQaUk[mU5q\CJM/P=N^+QD$b6Z)N\
%Z#A"qJsS]\i2i=d+_jlKe=oOF7>Zb@,AV4t/0_Lc2S*okIV/%/WC8&[S%%U@6O=J6^GrV`;cM/=*JtUqbQ$62`=("<S9,EBHR<k1
%j"e*&/%8Ep^?V.#0<;Ras.P4GU>uqaEtY>39ZkUOe=/8#p3+S&;KLjU1=kl+*r@X\ZUmE`YBYHS1&%@HKqP.pR7(8N,l_CRrh>eI
%[%O7ENd$SaT?@eH5r0'f.(U7l7]`M^3of9p_8c;JIZDU=qRJ'nmS)s5p'-pVLKkc*3m?;N^"D]oU(F'ASRqDoH@Y_+H1AauiOjE/
%J@83%m&b!GRDd&PadN_D$)c>T(7%1ZI4l5!2tu3a*a1aMO%MWiAmqX.=q](Z9&br94sp+"q?>Ll*J.uP!,XcfW?`%S1k&M:R'r8@
%oKSl4`HS2F,`8+r]?ZClUiGKR^pq.kX12j!Qh?\_FQUM-K/;Yeke?QK1A54A&<4qplEJC[Hu*Ak3AS-m3AMrodEXSd]]NcrLO<X0
%T_!IU,b:8UB=U,RBjP@Ad^7emW,krL=aQ[a'Qk%O1d`!7V<*l;9PG-8!n&>2&Z)J#4JF(.-DQq2,B+n#%hB4C^$$`/B15Pl1D2S4
%<Ct]N-&r&gd5?eULkOS]'a,iGihCflg/LP)p1f.8q/^V88==QJUn+FI.!A6YD2PZ?BA#BtD*$R9[-=Y^d`s(KY(6rhmCS'-#g&O/
%/\IKP/C0_5M4+cBU0\W,DigS]W-`8T7NlNbGT6L>h9`D#*W%CT(YlaPH(Jo/Ydk=+_b'015-JMs]+)s3+]^T+m?@uMiPAo&jaq&Q
%\+?\+:h!.!]:45UMn!()L[]QJ;XrIa(i?049UdI:>!XHL4(p_?i.l2kLu%ML>6@3n>R9&_EC+6%6@]AsS<QrO-^iDPI'0:$VS2:*
%DcnPgg@W5'+Pa!i8=XlEG)'>RUofIBpe.%!0X+eDI?((/Tp%^"&JM,IiRW5*2*O<G"pZp&$,c&j#.,!\!Ij,O.]mPn40d"I?H;7P
%dMG%Dcfj5b+lP/]^t$fa214/WNU+)qpE7CHS=lFa-E3&gbeuS-WG?O5Zuoh+CZV1VEsWa1D<4kG>&Q>j@,E5*$$),`K%+^iFc[/D
%I8/'`1H+7ch8W?+=Uu.hQt1=P.M!/l,n6$V*:-MNkM-pqWC&C2BTf3t'(p.5R7,p[/KP@ae</i'6V3Tc-/oDrg,/3t9Qd#hVBG36
%IGE#Y*<sZ\DHU'ujr:g##I2!bTVUS(#>3_qbdCeOelM:F?VCa1DCfJ!"\\+_,r>''5[(B3-udsZ6d1$\50g/Do5V((2t;?e^e8&`
%:3E(Ck(&r@#pIlO"mtrAk)>g`YaH^o'%L-^4AMi<1eq(m"[al6gUZN<*K"i'q`Z(M8\JVH-IMc`2bN*U237RN3*1?>8Z;:aEoSt*
%0s\X77_b<I,e'cO(tm,7SPVEk6]&eX2bE9cd[,uVeE69<Ba:&G)qM1Nj2*:X7j=6scq[8+I>h\`hYBaNQt$98+\%a$s(lS::qrC5
%35rlV%2'M_9`8EE2h(^76AX0M5s$C\$@Q;0"^#W,Xd`,36KLL"[A6)42Br+N,#=TROZF2/KT;d3eth0)1R%&"UiE7tP5<u3@464R
%\O<N=:<bHXQC7#'8]=9P&#KQe@WGD(WV;/b.!ns<_(;^P=C3aYe,YF[k$]%%mPS,$B=-:]3b@+jNb--#U";"o>F>ti8(),G[+'(V
%k^F>qD6iGNd22ALH&SALRPE9#j:;fJ%;"9J*OUi-YVWa2./Atqd0`7Pa"0$G*ogn,B?[_"H'utca\MLG_C(>12pk&%5H?addt:Bp
%p"l7lSDNpL3"7ZBSE&>E&SnRM4jE_7[+FV3ft<uQ,G(N+-DIga5Hr+ZP$=jX0k`X7gV3QoWV;5X3[?"sFGd'*9g/iE_PtAEFQc\#
%Nhe3nRp+p0i:Pl'fZ.%M^*(K;hD9Y4EXI(^g!SHY7BtFoc-)mOKXd=A9cTRkb:KtoH#Mh<^6A<J%O_t-/ABpFFa?_!F@]#5MGBp_
%glcEnkY=407;UaF0Db#cF?3qJ;a2%EMT[>'7dkY>BU^uY2ur?@8.F<N*6B(dU!6;m@n&OY*Mt<rbf$?)lLb&+P?MQSpV6N@DU9S[
%%RnPdAb.%=?G4Q-KQ*5#fi6E;6dUcp_pac(e7jDDht?pfV3dEEpac)H=D)uqqWYJ]^\cQZbP/(;r9:gh^]+01q)boCrKlDjqX1uQ
%I.usP*;(6iTU*>Y"4XMs@5q`V4j+EcX\^bDfIef$8/&;JBmtP+^O[Ej+jM^Tq973Zr3RRqhfKX$eS5eN98ZQ1X+r;TMMD]%n[H&e
%.8ZVW)<ctJf*NlNLL$;l.-<DSl?\c>PLbU,5j=Wir_ekpTD5RODYI:p4:3kU.5!D+T&2=jk?9H2F&E,F))O%PVhU9ZKqm]5H>(N(
%E>Qe_/EY`TP"S4='(l<(E`S)sAKO,]rp_LD1?#N+'ofiXZY6RF"K#D4K_HPM^5B\?VNJYM"16PqT';QTQkA2GMb0!;7,MA#f+`9T
%&lkYVV6b&]7I])Jg<':[Q<t:%FVA&gk-:^X%c`Lkgbk22Y*K[-rgIjVY8ZU4D0at*f3RH>eu.]8j!o;FIG_drqd+H,Mq7^@TY0P0
%Qegj54moV0Xorhub3K8CCs'q%s&2t?Wtk"Tj[/ZMaaX8F5@l/?'/fnfbt+a,6s%Ss[YaeUNQIgKd4O`hdKGYd=BY]jG4Ji_d[*<4
%M+nRoBM?nUn=^pb/.sk.P(I1Cq(QhGE^Se4pG;%*c4k22$_e(O[T',[Q;-JtqVkNd^CA=4IlrOS/f*@g.+#7QL;X4GOU]*]Id;+(
%?q6aB,Sk3dXcco')-1E4jC)6u(<!agh#^M2+Cld\oUPVZDPh:?cLSOBZGP1.);@Q5Cr]9"9+=H,Wgh/C(4Q`uWl:Qbm*!7@0glg`
%L])baWGI$1e%#&hBKl!t/)Ag_Ee,EVI29F^*kX(=^ErUkpX*b$kNppcEUfjijufO;>n%=O;%6oHTFLVO-3m]e)JBG*TLDa5cltsu
%B\`rRJJPV"5E\c\j&L+ZK@I#[QDQqm;ET3U/)ANpIsmr'-*g3_qPhnlIG`SA-Ac<?(]G\lUYK5,OSgko6su,<1eIaS-D;/!8@KY-
%->&+UoEEsN,>#q!in5-9;g.\9!X,DJ+CuLJaS[lCSCc3fCpLRm;.q/>k=r]J8o#M72/*7tenVZ8@e\*IStTAtPT%2UIu05mF*J0_
%_J#D8&8r]([q(,9DkU2n2X\n^%)8[Kd"[P"I5FGQn=r.PpQfOpWhYIc#oibprB;X/%kh[<+,&-$BWtANMB?G#MrYMuBFW[tUa-8D
%j^VT-<>T=UI!O<9Pn:($6qoY*RS3/*!7+C?F9\BbV)&*/ku>nt;&1Q:'N&Th3LLPfadgfMfpjgol'r)Oe+l+>FA)HmPVeL-OXpi*
%.l!k8eN-:`"d^5d*Z)M6GjkCU7W%eMAE/n%YI7^SQDHsTL9L%.Zb2dcq.plAJ39I_L1BZ71IM+gB!@oRr*u2//;J-.MD^";6n._9
%54cqEK]XI<$'6c#q@P<3r;F.B$U(TgGobBf5$'R>G_th'`@uYRS7Q8L62\.$T+,a!g:/XHan[c$GP5VS2t*/#G\j'P4#q;S"$S`S
%.<Vm<=7l;tERQ]S-5M`,i@"nJPSU!ID]<GW=p78PShu)Vql-qsTn>C:_Mk7PiiX_.(cL-=OCEiUD>ecaR0&Xf0K1]7-I[;c>caA4
%\>(h8:ia'M`Ju7N20/">0*\8'1E?9lrcY^ULm^PaUa.nt<%0hdA*ENok<QB5WOk@-rB),=hCk3@.H(J4q0Q279qie0R0.!gGLl#\
%Le5@?`3]'4`f0eD.bD3!_tS],L@P(%RJ6'hUEeXi$!Q64[%d#Q7Z[Cp?:o1omoI9gji_$A*3O#-b=S\SFS.#TdJ)f^#u>S'&Ug8_
%p&0ncf?E<gs(8^hpD7&h]=u#oIk0L80&#*F5*P4+%_:UY<l]pWcp`-hI-NcddT:5h8Bb\(n_WplZI"+FdtB;f;V^q]S!nB)oa(ig
%N+S'X/_q\OM;iu[eg-AL1^SALDj"$\=eAR;s7pLN#i^0"111fU6?J5)iM&24[/m%K#X1BF69*)K2Zto\Hg<@]LLJsUdpX(lmdupa
%29chAAp):4%s8:as/9GWefcttX:R-QfLq(iS<>*b*J5b_N/lUQ'q'=,Fut4VViH\%bd9'6<c]!_VdL0$/DWA+.+bGoe1hN<=/1L<
%obqS)cjAY^6gbe.H_FkS]8f0-1j'5$]G&@#Y3@n0(nhZkF)3RYhC#bL-Q0;m;?sa>:;lnM8^#/N9(PGkD'b<`:40lokb5'L15jh3
%r%KL`8<+8=V^IH*7WMXk;glbcRS/q&26^ka`fV_;TB)En\93V(O`]"AEH5[Vbk\,11c>p)*g(ph)i.0?&a,W?$CJq(2,<gmJI1qW
%G4Tnq0t*,Si'.,+YFiQ/_86BRY>7B1rjV?Gs5W9\Ci!,ONfC/[38Z4jGhQ>\m4^`K#@"6^CfM4B?c'Q5O+4AL/&te@7#3>+1o!(!
%.@u*Ljhh?7d$ps:gqInNg@9C7L#,WFE]^#n&Ya(nWH1@sgb0k'HS*EeW*3Edp/,.(ERfkkeKUZ7<irNAmFCTO<Xg4Y9a-VCbcE&"
%;e_i*hmnlFl#np34#C6k:#k'fo3LB[]%Rln[k@8CkTN*")-?NlJg`[\*k!US,$?r$&(\c,<"af>n9b%N.>KP:Smt@;!u>$b!KfUZ
%k`I6l4=fT9O*T@@mAoWK\K<,?3OeBB*OgmeN1bH>>"UfMLU=nPr=BIL[u"$VP-r2oLg,$N$dn0kZeA@PICcLM;7F8HpSIcC`<\I3
%k%R\2XmlU=$NAmZ18Q%3X/m?J4$*9$bUM7Vep$]ajC"Jh'%:)^MQZB@1$I5h(>F()NI^V!Z#ElC[8(:=41+6^&,XqWh5)7K3j[.M
%.P\L(^8UYL/Ic'`,s<l!3Ob.`/r^Q#5p_E(k,,Z6">8ZbR';%YRPr#qr\EqtE[E*Yl0SUnNcC5D8p"4[Y!S$rbPJ62+\V')d\!T;
%f0m\/MgOGO<&qTG6er-Ef(nQ;*nfD8[N2]uEUBR3[aNRd3s+5]TZmRU@Zer*[*;RF^-?:XFa[9b7;?J\H_8/$p!Q(ZM4`GLcp736
%^\<t-$*X<6YKKLmd&n%a<Gu`#g88EP?dd=p8Y95K5csQ/)YheqUcgZI";e!,io=Z>Uk`4s+`2)*!n.\6H8rKYbF2?CLX')nFc*:Y
%m04@0(\2utim5?Y]t`m"]U()=BnOmCg;A5=!qA%H%#8[NT"_ANiHsdNVrNLj+a%OO:k,rL\0EQla8l;1k'#QTMT'\089gWjB4;D%
%aM+bqP;\iqKn"`@arRlgWU]h)pZ>-$RV6#OU(H=sH68:@EA)0S.s3q^JN!/2=oRTj%G_fE=hMfOo%>t/e%5n0I'YSE'13M"j#-0=
%K6<<),sb5[io0Mp1Ol9HLH[ERigUh)7?(V4(p7H2NHY=^H>N22SoO$]?gMUlI];^Um(Q1@>OB8g5d5Ffb_#=WNIBV9T%d\F[VtUT
%mH28f"IS<q^bcjYC[,eLms8@]eG-;DD$Jm0r[eqpm;1o?G6i)&WpLs*[<d/prR3?TF!o-IP?=r%B.),bL;$jDOLTjMA4N?s_?u!a
%hDSq#G2l#ZV(iCF.uduWC&_<5$mlNr)s9B5B+fE`J/OYjZk(o!inLXE=Zh,fpOO1d:lm=-c+16i^mt+A]-AM/CYOJSa5*mniU((,
%D/1>X<,tZ1C_c;K[[@6#jQ$kD-(u:lDX+a5rO8"_$K(P$)`AY2JM?`C`EaK]ck#[1eo_P`:mY&Ab1'#gA55h2$CDj3=c]jk<@epG
%1,9"GdrJ'@&=pr7KWsK;Y!D$QHrQ:hCT<:>IF?].Q#F:K>(7?Zb?!_I[R8!G)Z9.%2!ou'2-E7aff"hNir:3+5P93L8`6XaB8BYO
%l<H308jYNbK`;om\DV;>]<07_'$0]4Ls"TQ&=4'Ze0UH;HV)ZL-#IoH\r*1'0#N.:/"5#Dl/W?e)euBYEf$`]%'Z&l4)/I8j?)a<
%8F3I$dAkOdPL*k2A2;`q_.o^&[KFOJ;3PfS+[Y`mkk/e'>po%h=:M11lTCnW)W4#ZqdDj$nP%%:U25\?S:]jJW>bT]k6b+rdA52k
%GJ/4E+2Y[2W]O!+KIC3%?GHk248WbLe/%[dIGqhe=o'5W1Lf6I#Z5esq\d$(pISp7i@L#V@P8YoA_i'<($oFf7R;p'M@c5O(=;q7
%+`=iddDUi:\ZK.-8>S?@R+OXb&+LjB>D!c4^.E`BW:4=TECcSc1#2u]G%gKUoKR.,htONO/eR991n&YcRn`;V,M`$Q`uY>R>OC"B
%[c+90kitfsHVEc7ZU*;BDCBq>S_Ehk*^_E:Z,q%>NX'm*[`b#9"A.jFf!]\[2MmM;:ESD<Y0dg^?R`O/p^sE!HqH0D/&RmGEc"[k
%M"nX-AS'OT%jk/>JDr:q<'?8<'fA&\k1P_;V.^B_&#.?^]I[fm/8C]!VpZaR_F.o"PKCcJ.J#E=coW057@e3^aH./M,Q2pud*#*s
%H-OWdH2;t6'ji6OF$?JN/(;.Q"[Zl4S`-<qM.kBOAT9"Rq\c&T.Vq/%I+rIL>,tKf2">D*`$]OUSopB6AXi?\_e31@FtpDV\o^0,
%52+)_,<QQ"s4V9.:csYW>+7Qci(OU%V[1I/D>_9Q,P]rVb[ULd]8X1SYLDK7;=UJ0@r0gj[u[f8Okl<Lo]+C?k#8(J-0hg6g`T&M
%86\@0BXI0j\f\BVfBp@?.Z@8O8R9K'S2UW595W8R*dcLJm6Fk*f6L&!M0Ps3jbqBnV2DD`Iu10iM@P(V+"o>EAF5>tn6L/e[[VAb
%f;?"eOkn"r3lK8go\fgR.?b>900AnfnK*`c5aK@9Xk3+\]ka+K)gVI26D0ZS>+X;a4^p!=cq[6Q<9lKZp\`eQi@I@%mA#(dK!r,E
%EA3Ysg7(]ZfabCV3L<#j;;8[Mj-qqul*OkSEHLMeGC%"TdgPLD`<_8<N,/R9da!okIW3dmQI=oHOm,t;4O)`jX6elT+-9!\@N+&M
%P0<8,q/Z3iGH-"6=GkF':6>i+.SWF@fU5uFmNe:RWO('K$1AiJp057_VmQEbc<h6h$D1>;8QVu5h+#b`d'?!kOR-cpo;$G7fol:n
%f^mig/l=+pM097$TNR](,\h]@b`eN6;QSVAe@St0R9D7]VaC(>+fmb'i+;Q3h4JM0<pMD=D")*6Mtf?3Uc*>CW=@m#Tb!*XP$!aR
%mcqX2G!A6o6DRDDE!L)>.:-/8cJ.XYme/=nJ8!DG@$oPF^4m7D];^=.m?g_BiTtO#YO=K;2JKU,ji-?de#q6h>,H/t8[OUse&u.R
%)NZY4h"5o4X1YLs#?gCD&?^K2I>)Sj)qt!pL@4%gpSNQo.?)u-,"&7uEj4gnh<j=M@>r1A--'+-Db^a2$XXg2Yb;&rDJ9cOPa\GH
%G%peC&8W-m',b[GAl0.q*]btBig.k\5:?s*TGY+S-V/k6M>)e\#,%:J?pBhg022`'JfXB9kq3QQ:hQ31Cu(them1Ginc_rW\mPj\
%G=S$)g=^l@M9e'_o-1\s6Z!R`jDDe$Kuf5_fdPsrV?pg?7tt_?l,e-;8te&>_kN7o.4MSCUE%b"/8$=c0I)tQ-,srP(C2BLPc_^m
%DM8rDgU#&]Q^:`?LW.uGR43s`Gl#(HES<"`3\>-&7QpQ2oNS51cWLMOTdL(@`jJ`R39j3XSD$.+?IlO]*'T$eQ>A<\ERW#8*]=7%
%MBoTYKjM@94870]Nr/IG.ZNH9;Y&W@3Zc>P1IS%IpR[Vf3aC9TfPiGd1oXs_@`c6'+0ra>EpKgr%,UfK.)(]<+&>(O'r&;dRTe<J
%g.?dL"6.R]#_k)kd[;.9lqJ"(h]GlgQ]OBYe"_r3o'[MZcNgbSG8@?h-PlNC+k.n4"/hsr)`UV>rE(jh)F"N2OPf1CnFVQN0b.^T
%g/>re%cn7fY34[;$9\CBBBJ5#ZK+\lq0>^!0X!6EkfNY;du6G.I,AXY\9CWCQ"c^QWMa<3OP+<U`N[.XZ#VqcI8VZPek*/!'!c(`
%g`9R`5fRg+#>c3lj6]X39%DYA?_b;Mru6.sT$_mTH0@WtQ]Sq2fn2Js##C9pC^m!8-D7l<oS'DGW(ZhUrQ<`QMl>^YnCnAiDgL_)
%QbeX!`MjJ#3SK@C\-\,H*'EJ]_9A#0C(^3qR&lR`D;LV.ej]Pk<g\AMegbe^qTjB=jjSgLK^Hr'G%U;__ZIEPCF(2@P1<.RX>D,B
%G4X#OXs+sROX[;:2/Mel/qk.IfTN\[L`&oX9d5P@HI4duPPNSZVRj=tet1)X]X+lT6?U<oge6(Tr'a%\csa\s;ta)Gqu+u^rnUo[
%rR:N@kE!@sr:>/BTDjim#JM>qV/5qtE?H5YknqUaIDP[n@!m>.^P*>E"GC#?rlmMlesof&Grg>jF!H\1`tUGooCO>"lgQq3T<$_u
%4Hi#lAQJFsj>-c/M`0NF)fGjij2;>b\WAa&3C!D>)@7o;E\.lE0i25gBD;8#Q?iLNbJ7#Sqs>>oJS@Ma^\E)lMoB,/>=5sIHJi#[
%1$PP"#cZd<X$ti^8'Ob;-71HaML9+LQ8BL\'NR3J_VQ3;_!I@DlGd-NgNdUA2u_op(p"Z\Ag6fH7]9DgQ7]3?'q#q2+f&dcVs.p"
%7r2WS6mPE$cn>dY[K;L@g2doifqqPllQ6MY)XW8=1fmCV=S<D?2g3F`Od#m_-L#60)LGB]!\e]V8"!f#jtD'i,$3%$L^X_:R3P#H
%Hr<jKper3*eDS("@^sXYQeEDHmtWNf2ALUEpN\-s0qtgHe0N)VD'&X'o1dnH7*%_fqI.Sg/j(=?hu]A:33B-sWNo<Wn%:KkD2;Zg
%1IMMU*LXh]JI2LS[qXi^aG?ice-/Id\XY'T&nmbC"qAQg5A\#J.IQ=d,ta!a-0d7^jLcDoqEEX[gHZ_@melq<;-JDUSk`))QQWDW
%$0_jaM-eXIXjOoIm6IfVq/h.RN-m^;eZ8,oMh3n#SXA3LdsQ=!$:d'2E0@X9D@g#Rg^Xd*I3rn"hC@qcbg&VZ*?Ua;Y`EB^ZW1.f
%n4m8!81bmb/=0p8&"Ro&NVf20']XDOSml6qHM]V""_>m=XFQfoQatX;,;mLPCKj'Ufdp`mqI$KJf!7l?Y.LXT+G;NFUI6i)8\%Ag
%8R*Jc@3Gm2@AP9A0L"pj2Ug,u'R6YE<;f;P(]/u)]7G/'m%20`2dLOmTD$igg2::8Ao%CW'g32hl?bHo=c(>QaCa#!k"(I;/VXSV
%\Q?snh^90lD$X%pD7s,NcC&1F@,?&InMV_-I=[Qe%RW6g`u<nBW9\;s[$b>L?]bJsM$TQDF5$jmjs\\HfYemc^&,8q.I"8c/6J_&
%!ndB)5*+g'c0jT(@WLl0qrCZe*I_>;Tte'2mDQo?6[kk$P\+!oWfYLW>\?bMrmZ/`%%[gp2dB1Za0bVfCm.Cq3!UY,o4D`0DbeR,
%Dk([E]kMX44WVidr4XcZfbL=OBfRBNG<81Uo'NYUaMU'.6?>?m;gK*54_U^fW`$tk[B+XE9-n?effBeamESa'JP.+CXMO*e[=^Md
%,OlW0VnVs.9fI"HdbZ&DCmo`@du]gI4e[S$kH9#QF)o^_AA)Zc'n^HdmnpfR*kFQgK0!=q+3H`%Vj<!V:$AFK[(Hn3b!&_HaT"34
%YFt3=[=,dl?DbP2ct90:J9&i)'\Anfrm6l#>pABG8A5gO3;jBB0H'Sd9.gh>bL?lda[J'^omOJLHd3R4l<,?lU+>!uA%Jq,ZI*iK
%W/ZX[?_HJm_be(sZOgS5",k).-TL7\]<4SYng3Q)Uu]0,kPB5^UAmlW$ZX8._D^(ccl-bTRuU&sEC0+$Pa6M1b*72f,(S!Njr_$K
%N^[E6j9SVk*S'.HEaFNBARF,skcdfXK\ESYS9S^co$4C9WtEJ)-"suBP-V5W3G+TrTtrAjEu'h4P%9RUX^IBX^QU\.OZF0S:N@-!
%[T0_VO4if,=*`Y'*JmL(6>Lp?auTgiQlQLA;U`K:([jmE$0B6)$^OA0iD4TD5o7t+.JrUnQZW'XT9Qnk]1nka>2<f'b``KNU7srt
%qdj`$61hn?IVp2YG^<t:jOT[Dk[!DVl>\/bL17pKNO.i1Pi^J13hk!2Z'#?Z=gbS@?FH=M6'E'-"eBuoLUg.N+qmO&G>L[m8XZ(s
%a-8?E/VT^a/r)Gf,CLnF%"_M`9$1mjQGs=+DkqhRiuD+7Uid122Xa>s>+)7!@J_$6Gu[P&O"<]t5S8;&WT/(_\TL"14L<sdHk9#V
%_tpWQ5RC(Js3;"5@&.O0B%>&"^$]OTd>]q&J]M_YJ-Q4@@%-?ljWdQFLq97D_J?$VeeiPo_W/`2[C2o#2ieiX#BX<cVV"/[RsdHd
%@R1bT6hM!IRg)Wgib`?,^mQ+Po`[0e]lKNBVEi&#6%V346>7N,>q69<d&N[GU1S&S4?;n%K1drRWR_c'S]'PFA_>'`bO&D&FiP/b
%kof7#<[1NjlHLF(Uo4aY\cOq+bFW\q-[Ar4TC3lfTSB#"#pCcldO92a(H"8^k"/F"A(u``\2%Ui0:s:MI=JV=q!l3Ani&IER/[AM
%)ns1l@=i&./=#)M;eB(JL07R+Rd<dc`3h')[!2NGRaUp`NA!Mu`=/0S&J(Vc(4[g-1$fgoAD5%aj+u+2dm;kT^5[qN@A/r5W.$*f
%@bkrAh5Bq-_Mn"BmF)kc[AOp+p%$rmC[pa3bd7&e,aPkZT(*9d_gp8;]A0(RNl(b[3#i*K9dtd/qS^mD/(4ho2-rWp*_g!<KD.$a
%T"_t:RD;b?b_g$f-X7s73)EI)"M$daJifn,A22EZ`/Na'VAWT.IdcL+[\[W9g:^,un?<Pmk^W`ploqQ[6AXkg1;Kus*)`FQG"mJN
%^cU0-aWW""O'ckVM'a_TY3JL`X]$%,ZJ*1/mfYr+Zs],;40@BAktN.Z5O8Ln,rcn.0PjtjiRVb%Rn6:gngG2chc-hT#$\V%\'$sn
%?u[j'YP^'r/`UrIm5kVl'bmV5Rn^7OSk8Wh`(Rk7IVVma)ipRu_I8WH7NN22G_R340TL&)b4DFd)O7bOL$-;e8=q+p-9X\(DYg=u
%0DGE9V1OqeMh)5qkbanoS"pWuMJX)+2)&3,*rakQ<WfC=m"X5SY3Q_`Y!WPp2EpJF\S]+SjSRf;H:G"NC5!66BH(N\5Jt0&71jJ[
%K/##Uh,_qtJ?"bEFD4((+&579;Y7++8/9g>S60^c1uEFT8[Wstim#U7`qu@T4tkYG3gK3$=WT[`WU"jq[I+tW1a`.Vf9tQfi<W@p
%SNg%bQ]OW/P4KeLQ0&YE]jE7KhK<YgBQm($GVZI4N6FGQN45Gc:V#3%654a,IGu\EJmDR#o/4M6X^A)e8jD%`kKDS-^74(HAjXR2
%,Q0#>@\U?2Ng%@:@E_r?YG#1PJ"?;H)LdY4d6&0_^!aEDr;A8ETd(6d&Jka,L?<pCJeOjs&p7&^C+c^61o9$*m'[jcK`t*g]r.^D
%FGAs>M/XM=0X@uTMF"qJgj<cVMDF^>GL:2u4@/NZ-T;dQa2pc=\u8Qma:5Pr@Hl/.EN8<1MgISQ):i[;/U1h\/7";qFQi6a%m<*?
%c]7@[,i[5`ojYgYpV)Sk\[-+DPW!H-8_UQA-#)Den?OeQ)TBU:(7Plc051\9P7)BXeiKYP48+mskdh6td:K.QB-r;11eb%(e@3,3
%(UA<ig*d%Ug;[-FCV2/K<@VGhA<8a.+S%:#K&s;@RB(UD'<*2LKGZMRmIRcnoab`#MdrEk[&sd9FCeb@G1b@ugu,@$nmXeFmbPnD
%5](L`MA<X<S8C&7mcSpR+C*\rQYN;OEB1"D$/cQRpDpV81*i->/QhCi(qhG`94[kT\o,$FJ#pP5USk[535j<.b_)QH]=6WBW6BBc
%<%$K,JPNN[?21dWp'k[IocT>YC^-?kAPn"Y$W)n#pK@-]X+b9PGFJuQLZpu.LFS9MSHTpiH/7\G^'5+$Hsl!`Is^W4K$K`%S.A@_
%gTG6l9o.9R86&3R"#bfR]\TTlYa;aIPHnW>GoF9eLGbiIKGuN>H%(eN]R?cL8V_[U'BOj\8&[\2A^X%64-$\!8k3/SEaG^<CcJA9
%V]sNI@K[X(DDh\[`r7G@R!CUR-]Mbu[@^=qS5gbgo`CTI3ZkaEf9EZX=6ber:!9qBjtCa[VipCmJ^l8gS6Gm2D.#DA9,j1kql%m'
%bPKLt.)*G+b,V+fP:hNQ8&7#0HO/Js$bH"O2(F2`g?4_MO?D7=4HaATDYg%^DIuubW9PO@#=k_uWeC`(&u8/`m"mQ&nQ=&(q0P&S
%42(Cc$f:PH$J1M?pa^jE=Ve]s\Gb0[T72[eNe_tCc_#^[s*f:l]DhKLT7?e/e#u"1f-&uG#%[NK]E.i^kFHHn0H\qh%5Q$cWkS`E
%`YT]loel\Kf-"'E=[cDVb%6;]?uNX`6LYDmoOu'%Ve<W!lg[uaGt+hO_297@+E9HB]*nHnBk3ATMF&^<R<(N?:/YFR?7A1O+1f[n
%c@[V'!i!^#>j,hPKhb1J2\l&%HEM3jVq*66JMa'!q>Seq$`Q/mW*=JN?E&aW1p9Bf/8RXH$pBs$P<R#4jHjT5b7e_?2RklJi^$fB
%I=<IBJ_?ME7h:Cf%S(:._\G?e7SYO,k"9T/X$So;GGH?@2oq_O`.Eb3q@oU*nC+(DMA<92lIPZcX.3??$R\6:F`c)%f>s4#4,C6,
%$'rt)_G<,eEE9."=K0&P9#gfD<X5XO]r!VQ&lo>*UU+1#H3q>q*.O_BAJHqDbKg!:e#_cFKdq!C(8b*g&,>=^j^XNY5,P3/j5`m2
%a8)U(%qVhb*/TQGiTt#d$FIV14Cpi-omEG(jRpu2[nQL%YB_:\-bEbN`J:h"+-Eqb&SESY.E:.$qWD$u66pEB+c&fE`0L.][&K!0
%m<u>Xo(b9cD"%A6AjV<L%4bq64.!q+,J("\gfZP]8t1QES()U=0r1LVd"\94K8imTLQ`]8X+g'.OUP^`S3_F8kbt!t,)[&FL1U<K
%1Q<!Rg]HTldesTBq&3s=1%GL1.&ePl.pUP@6=[#uA[dKtd:>cOa).j51$&piNOR!N0oD,Ajls%tW]I=s!\sArK9J7D\WNNO2VE8d
%[a.BZ1m?d]MDmk*\E5\IMR;]VIU$X@3b2:oOB>#lk7o@WpCEd4?<qOgo:c:LWpS0#Ag`L!Qpb'iHC636YM!&4:Q)e9I+uLf;%rU\
%N<dWPcqt4iK3#7"?L7Aa/m0'gU9pih;O3Lce@_4@20A0-BN.C5R#gh9I)-Cu5PIi4'Vuu<`J3AlmjiUJc-u8mDWGUAfWXsYgI7%,
%;d.$S]I=mpLM1IjPUDfXl>2QM`10,?I7&e=K@,-BMU->EMG-&F;bg6cnt-,WEes/K`eH6_BUS%cgR9%,BGlS:l[DD%?VdiZ&kfsI
%,rV2Nlo8<HMct%(_&6l52+=C.m3lj&#Gsai^Xc`YY](_*3jnp=_)?7?SP3`dIlMYM(H`)`'2Dd@iIKCCXsmdbgHm&I%*#`BCPS^>
%;0TlK)Fkc:\.5NJROu[u-A?%&AI0t8Mp*)tp0EJ_)ZAG9"rg[Aas?_HD'ipD=3VL]+fbA3G-9g7HF'#@*\MGN0_FQ>8H)!Oc<V`'
%7[r8id=$)TeTm;K)a*;Wjm[S%oms4jD113n$$=O.8#@SXR;OBK],[=1E2hcNPH3X)%HDJ<`$SCO^00QT.%2@k_qo"'VBs-MI]UU8
%X*5;Rfk<CB*D%cY\5)Den;_-Q[mM6T_A[^']NEM]7bhX>[W/osHFfY*\X$sC63?%cFUZAKYddQ3dn+ohFNH7H*C.ts`[dXOFT=5[
%QXQ272gtG-X"OaJ,5hf7P+mCnkTJtg4\feI1:"-*P<G(u;[hf*[An-Nma[G5KS8_7HhT%_PaFuThn"s5el1(VjqThC9o.QbedQD3
%cdd]96aS_$GfH]AD*j8NC7s-8]H\B')M#'hiP(BgS;peCZ]W<Icc37$4ZX`T;;ce4PMP26hO#Cr$JJe+Cn@W*LWnsGA(MM8&mntR
%m^.[a+\F4E7Wm,C_N<7`Y#Y5qLTU'`C^\Mg-_VeuD`,Y'WK+n,BmWWGUN?=>buD+:5*_'lXcK#6j-*PueEDgD=IQXEL\B1G:n*U1
%DXp>/<W`m2eu?XMioJ=&JFbYjd#CZNC\L3d)5U?)g(FDm'!f(ETh@dO<UoI_3i@ntYKEp'M29DnZZN8G=\MVZ(*d0/5_j&2lN"K'
%YBr@r%boLTmNglF24O&chNa+9Je1#=-Mk/kbh]Y2[HVh<^"0^;hJ.\CNnTZKNmm(lUUK;ZdWb:]Gj&$1X??8jFW>JS'`GN'1&g%m
%;q9D>UE\QCpf"L*[@(])CC4G*H2'JD/VS[iqdO\p)#A"#(W2B%mK5#s4/57%Qh%UD'3V.p+-kj!gFT80F"W>.3Ao["h'%"6CQlZ?
%kpXi6eLAkLaZ_1O9[XA%K-&+<4tQ8j$se&62EaSf>3fW<H%W$6.e2BGMPaCNeK%%@C4MOcfR."*(Bg*VG-#4;RTEYg1,TO4GO&n:
%=VV8;Xuj"I6)#f)G?>EJ)[f'7SHMU1?eOFJ@VE,[4S-G>17?m'M1pXn1#=VA\i*kO6<J`SK)=QXe0mE(_4+"_67\aZko7^PTe*h?
%)sp.7C:p#_"LcS7kmX[<dI9sP]B\SA4LG!L4m?1_/tROC@Bm?k[N"V[5Q'J!O$E++pA-^m^&8[)gER+dAup?$ZRsHTjNpCudg>gc
%428P-hr&DLR;:$T!e$U2d\D\d*DpqpRJAeJJo63;oP^Rs-`8Hk>IYfr$m=&onqd-bhp&Rg3Sc(O[Ru8JThT?/l::WQ5s\`7djSF[
%$1CSfg'%N3W_@:9-p1XZ_<\9aMh"*"SQ2ZAdpaYBkKKML4lW4gZ<aLH=pi5UbWVIIb1!Ba>BoqXRFVT$3nqqd6G)S7.iTcgN]m:o
%oRP_@3%e`FA1,)0>2ct31%=JpB1g;)L6f4ARA)'rom'!`k\UN(Ve03>)2EOckj,aF@g?^`_k:`q6p55,LD`:5g%##=9M_*8o_F=1
%j80WSm2%hY28'W'fb!42%bGY@4\e5n*O!*C7E>:'+%6=#eLoDMddX!FcZWUAkL_f*+Ip?]2Ui5_m'=;V;d$g0k!cc+D6j4P*XQGO
%2`ko;/AZq\YYq[>l*kda[;U?tI'AY.Tprhc5rUXNJns2G$Mn;j3Nj1\<gVJp8!CniP_PS(EbEC0UjW@N.n-p(Ie4FH/Gimhk[i0]
%#P95Mo$/o%$=XcD-oZULo7]AP9s6VF?cmas_FTp1<"G^eGsB`*QH:cl>a.2Cp.3\rO7$5*W'XJ6+qHaO<Zt$/Wi[t$BHn;c!tda3
%^!JZXEeud5Nf&1R*bh#Kfcfm_hl>/2kd:\"]$@26)-ZKq.9p/sL3DdXF8`c&^,t^A0[,JZful9S66`GGGKBTtdJ)%[8J+D8DJ-e6
%["/Q9nRQsF$(VKVDjpkkpPCNiU30g^2fLM=S0k"V=tn!5icD-c7Ys$Gm/#'8`i-WQQ=r*tYX=YfG+ch*OgTP<F8*Qlc]K1VEQYbc
%en94[O:Li8l/=U_[)u\!2Q(923_f#HjK\j.]G\]nU"`fX&m=`W`.")#(!EE1eBI5n]k29W:Taf#=ZYVQEGAgcJO[9$iaYR`q0o+h
%84#.g,`9DcBA^8c[Wkm/.H"&lFiGE]n^bn#e0I<>5#0o6)HpEl8D2X:IBENeemJn3MJdA@]'1al0cHi=is>*M\=&ecNP,Wqj+7+H
%gZi]5NDl:/'#heS.!o`+ko%p[AdMjuIQm2s.WlJ[?)!g+AmNFn'6(<I:=H,<IFYI<0<pAo%@9N^HriATU*Oad,[lp`<7QHGd7s@c
%$e4Z4j\ZXe;;:<CM-4d`#?:#$:)Wb.rI%VYD$NlrgK%r)h51NM_DR2?eI$^?2MiYXP_/&B**_GldSe_0XN3kG)*;B&Yh4n9U6Y!9
%F29ZFc$&]7DC9eY$DT_OIR\G\"g[&@)i48`QeKt]r?Cg1GZ$Gn9+Po@D,7(6?f)X,nZa+=#c:elFMsY-8,mP&^23GD6*$NF5QS86
%>7W<0B_<`Q7(hE_i1'1-9,S(6TQ-2X-:Yn_1$Wt;PD-9*h4DR=>a1*J:nUs=OQ2!pLIKT7iCL4$S.W*dVV`HYrJS&KZI2cCZe%g]
%(--^mp0^U$ZP@au2VG:p@++d;hqunn7f)_dE9F<Y4ZA<`VC^VJ0\^PVA:*+28;_TjD.g@UQh:!T=tok$%k)tAY^#NpPMW1.j_t+n
%DhmMi=k[I@gT^nm:&SVcOo5b1'(Kp<%2_C3S\C'bPu7K!&8E4r,p^`P1&9ZOr8-d1Ma*30XhN0t%mIO*[^?R4,PXTfH\mUk#.lhH
%U]s)>mP@LLTs"9WBq#XhB:i8j4Z>MU\!Gu%<#Q^^qehUOS.:+IH/_C58E);^\2g^]8uK6J3=0Nc#OPR(.eCN1Q_t4%]="*K]K_7V
%e6Pm";W``!>.!m#KY<nX?)CWupPKMGl_19fbtNj(]^AlM=Qoqr@TJqNf?)=Rd'f4e9N9V<0:7Vfa6Z.3o?dFkg%u.?*OCXEHmY4m
%E>>D'6-JVtQTO7L.Lb/05n(@F="hB07dY#.V?/M;$kqD#/0B+7R)E^E/%g6RQJ`g"2\FZMIc2^&rMn,`0e6p^'53KY?17,FpUV</
%39(1).Wse+>%D?Z-s=g[XL"ZZP3pRP3"bdnD51QT"C.Fr7LT_ilhO@ErW'ciXJ"7X4Q7jDhCB)!1-8H!=sBQ]#g"c7,IVnqbVX@'
%pa1o71rKj/d(KlV5'Co"*SR(]1+\OLEM`3pXp:DDfEt4+nh\$Ae3T!p_+ZZ8iI73_$TbV:A3R!#?&0qXMOPSF/Rlm`eH7Q[)NJVG
%YG:"AcG&.Q_p2k*[":4n5k+q%(L26AP2p61*S/-<BQTI=0[]"XLUHe:m)<O;BM5:;G9?\G[]S?FTmJ9$c$+N8\.FLF/jC8_@IXGW
%SI=3WnudaCdpL%>fc<,O[dWLA4P1<^\5Uag*DK`T-eidCX<-DS;4EZVBlQGn6UT`If`F'uD52LHg7Z&n&)0[l1tpoi57^h4\JX-<
%7SITJbZRrDfh&ck"i;et5RjX@ooMQ0HH!ULoG.(]s'5lZ;HEKQQb.?`Q'S5pE!>k92%rh\F@;kah"8L$F!$UJmhMGLo0+@M-h(G$
%S(Z'AW/J1Y)QE>LTT+upq8:cXa0K_5,UHG`AZ9i:`uU`*MD#f6ck7q2+4.9r61!FDC[9PN&s-1eNOoUFUe2Xo-=Zk\RPR!CMIjd3
%[qi0g_t*.dC7Fj47`kmeXA:\!?i?@L!@0_Jg$J%6?)E#%>Y_.+0bo?H]'?\&9MM(C-r^b:ZG-QcRpB2'Tq<k$7+rA'V?Ae_AH$JO
%[gd4jQD@G$#7R^H&aeZ/2q"c4FOob'2q::M'n*#)F$(t=B^1>5mpW@Eos.]0/o%P1ZbA[dOukPd;e`]IGqX5O[n3X6R8($AOgRVO
%9s)@T>!<PERP@=?In>;JC3c4FkInLVKQIajKWh&E%CZQV/4r8f>ElgE^MDk=(pillTPDb]\,NDEeZdQgAtTGe:HVLsVZ^j7#SL<7
%,,q_g\;^8VRQ=KVe%%cZ0M.Xbhj+$q6-)4.8'%m#Xa^4:X`kW<Ebs2Lc1,+-gS-$[Ok:nXpqQMe6lF#4@bY6BE6[u/"'oEt%q@>M
%j9W$+R;)aaA8T:V]!m[eI2kuG/F%$mn=akDh,ToudG;Adl*@3;)a]=WI$NEM<UmMEZ'uN@T8u,E:SfBH(q\#4je1"8/gGQHRS<\J
%M_\DmphMsmNGa.mpUtDkVH7CFrm.Sc_/a[0SNngcIP<Q=YBi!CLU\N\N]&tQPsGUs>A9G?O;KZ6])&oC!Sq`</EAuE)Q1i?H>r;%
%j+R\$PG")I]CS<tnVq!2:o\'=l4&UIE%Bp:ah>QJq@s<o0/Ih742D*)aCg(i)KSG.[uU"[BMs2!GP_NMW(AK)SFHSg*DPQ@$J->U
%'!=aaP=rWDpX4&Z5(6SER"n[g9*8/DSSO1FF_E/==qA590q+]4f3..eCY.p2@4dT)e;p5%lI,VHc@FsAVEAbG?kd9O>ll71o,Yp7
%$,8m7kC>Zj`%E18ZMep>XX'B(0Lqbip+6crD&GDFJuSF@](.)lqshbY7bN5SZF,>QHoSEcD,DA-,\YD1.DFSD:>8e[7lG@VCH@k_
%HUheI[TChD1_m0t9Nu=gNrXl-2@6qbcn?'LjImsMK_t'Fq3sM1'K1@>lWVA9dh!<7'9(&6%Hpun\Pr%NBU6M[]M4@A^$PU_^6G29
%llg!DR=1%If!#c?#D(3P4Om#25t*f[NLMRU;]CK*>D_6aC<]Yp*dBd?mDC&kG$(l&9;f8ejs^eX8mG.f'@FG?@9]*7nRT>f>7,@J
%f-<L10jQ?G%OHnXKO[%(CZs?9dAY<r2M9$4o"<3f$>Lo@X>H(aI,1b:[hjB[bakl:gfZO2)H3;Xm9!q'3qojPJoD':c'r&l9d@*s
%.DZ<FN-3o6=P(hB&4e]`Uk`e)b^2&i-;:/2=n#nIPcg`Q16krZoYk>(S3fm2l70OEC>/bgl(O!,@8qBBR6U?\@PaOXYmN!gee`TW
%4L6!aHe/j.1aa1?iNLt2I+k_SaoC+nmsas)oYXIQaI#2A`0fr\e"@Zk4*EUY,^XQW,!-n5aV1uAG^OrH^Qk_(BC,J*+#4q.B)nBo
%KN$Q[:[[+3Hpc!sg$`:%4:nN4Kk4TPh\CKQp(krO`aTJ,3_'<H<FZ&=o9hg5A<[:L9[/,($nX;@BR&4Q&sG7,bZCXFM_<\0%)^;G
%&Y`No\lk0>Iau)GM+b+[KV)KY/2ZVXIRa6cL5*T64-cB#]qaX:Q;Y5iPeq42YG=S7O&m\Tp[?K'6_Som['!"!:roUXlL2<5.!hT$
%+1eenh6r"DmgR\Bf;Tri)X(cSjOeAj[YUrTmQ$)8hH+8NVtjkMNl;^hI47Mt>f[<Kd-$bb<M_h"kKBU4bl!NeP<9paZIe_%k:^^@
%84)-bOU!]--i"MYn)4WZT>3P,Z1A]#,b:861q-q^P.;X/r6fR&MC.a63lbglB\*qiJ^uStn-qkO\.$mRjK-->@KW(,\rb!so.fq/
%'JXg(Pjql"ba?OOo_CTa3_;r3TZ_l6E_0-*,j6d$aVjdYS_#i+d(9=PB0h?l>g3X9'cAn@94+ld<1Xg\NP0EEa($e$_i9<%N?rG>
%%N+c$&*][e8+%O\BK+g('pU(Vir4m]Jk9<bTJ@_eLV&;+jl@8hj!1;Z%k`4H-1%K`JsoL/Rj\`jJ5g=f!?JZKLMa"BoA1e6.#OR[
%Vo3%?Q)P3r-JQ%NX'RXTZX"ptO*8(GRF!4l$QM\21F3T-'Js?cX5Sl19=>=fk;GrTcE!1>Sm]*Jko1,'91,HZV9\1*oZ2s-e;DJl
%q0(sQP\7soOC=(%^pn_N4M38dW0<%t4r4,D]WMd9D`AqdO4llsX&;imkG0*H0,tc\rPFPhV32O+gH<!5r6HF0;4(OLJ]>*uf7d%m
%Sd9DdRXX4/e!b15@O62`Mm`G8,EaFZKJ\s9:r[r0n+-Wu2U`TbD%4r3>cp:G\)_!3F%_9tDFrQQ'p>$W[`lXkS*6*!T&<#[3j!Jt
%]/W\V>'.i)STD[?ppSr=br$_iDq'^d2:kAjJ]'4b>Bk_bOl)ZaNRMnnk?[#?q`NOT@@KMPlYlr]Q!_0s"GBIKL'i":@taVf:"2j/
%H6h3qd<q(hYo>Z!\K]>".nDreHWh@r.B5h?3786U:5s9,joacXC.E@,7XZGn^r_Hlc*dFS*a]5Q@5KuqPD@/igj5A#4AP5h]U+Kh
%3!hQ[<^>mP:8[H-Z\M9G3_=3u7^mN)4)dOIj$t_7`m+lqC+m69Nm11n$/H_D%rdWg^<CE972la2!8$sPG6-=i?g5#0I;ra>,-:bM
%BKhq_%ZOuZDV_6@l2FBca,>\Vo&%9&fj7-n@Y@k\'@^B]V(Tm'^S/L2R0n4h"1;c3+XQD<KR*[6dZB9m6@":&>+rUG!?LI8&uE:3
%hhC^D0278.:5YuQE)J%NDMbbuL2O\j/,_6FNP[e3"gW+;OU7^<"XM7%0Gs$!3obH")m\'&+c*HED_t"B`QZJ+VsgX,*6koJj)u#W
%S!JDf_DS/(?=HSp1S3@^]dk*SLm1bAG`))75m)iR,E)@I>p-+`1@@Xn^oj4`EBdB$)FlR;NaZfG5A\aebLRu[.+HI/Xc.J#FpSnK
%WM:DO8!VE+H1E:>#C.]`Ft0M'mW*2<6CF1CI#1DH6qQ#O2<dLU.75a^-gS;p7_PaK)jP+L8O3Sl3<tLXGktRpUJ.6pEZ7#Cf95U6
%AR*f_Dr8oYAFU;;P`rD;R@7Y1P8%AgVA"#TD>)EX0K'-'*2Aa?;AM-aJo89'gNI'#?>`b,alZ0/J*VV_FtrhhT72$4s"!]9Fc1bB
%pSH]:B`%,mhgOOCdJ`P*@e:-'JliAl&5q)G\e%cr^ZYkY5/)^-l<<gsLV;E__$aG?>;'n@S6=,1#)1O3RY"]%`t@lTX_glg263=X
%JeuY]PZ;kHEO`emeRFTTr-?mu_:c?PMo3AYK"!o9CfVB,c"KP;lt)F`A3.S,9e@k0[`NM1=,T5n5,Z0%X9kXsR8DE2/>=N4^:iO`
%L+PMgaeKG=IY5uE:*"?+p=QsKhCfOeo($>BVkA=WMZVkMTt47%-kIF>W<_Btl<[*ne?0MCMC8P:ki`TDU;p%s[kC_YXdu'-'9Kh;
%&95'`A<)N<[h;/-*@E3S#CXRXE3/mERVk9P=B/l<ECdK$8aXV-c=\[ChBqS%r6E?#o\N3p_UO,ZolBT<,RW0lR"*]S0WqVl'c5u"
%RRcS;>TMeX))$*pb!0,pY-K$GEeGiJU0bW/c>.F"m$$K#%G+q0>^GXoD=X.h_U<3U8G/oF-G;eu]qg!C.e;(U.%)SY&%?b_36`QA
%@*$iLE395:FHKU'iE4PV7JBHMXL8]eLNZ^Tn`6DUK-$$kF<he.fee/p,$fhXC63?0SMHe"'&#Fs[iu`2dt;CtE^k(kisE\uBZSq)
%STf\GUl+`eJI"su!GV,gTN#`t<)Gt3Vh<Xc2#W0<\/%cne2<u,J>(@_nBR,K6dYaE5m9/?VH";S5#&(IAG+4sgo*pHF$(s28gSRj
%(S_\j79*Z:JEM'7H6,c'LI.O_G;IXi#\>qfkg%B?4gk(DPf;X.Rk0GlLDJ6GE9%PK4M,^W--EIY7'28hKbe>OWri#0F'%7o=Iu$"
%Echd>cgXjc><cW.%J,/`#n\O0#no.PAEkeU-iut!40ZV&SqTt)&s3lF_NZTFN/)\Tnh9QAT>Q$u`:/BCQM..cn;IN_RQ;*g9`K5m
%IC_NYIiGXtaBlt_N31^=8]Ao;`T$r8e&;IsL2lP.P<M3N*t7`-jH23kcklY*&R52EEXpG%ogqW4rr17t'k4DGTAfJ'3`N^"e$hWM
%#<.<3#C28/)2FkJ[/cG(Yc-'-a)2rV7\t8D0Br/?5^J,qa!M22@uuG/a4Ma"&!e9mFQD;cJ<kFn-14-OL.V>6Zq`Z\2n:kX2Mu*r
%)U\GYAp>'0<p<j26]uAW@.b_bC"6&9D\:Ya6'aH3<XTEfeFpfFIM1$92"NbPdig04pGP)"gVE>6)VXNiUVB'D6W$N;%G1T[M6NO"
%#'VuhDMp5CC@ASJa?ne$/$6;kM;IMVUR'iJYP*]XXg$aJbWRNQfqPmT5P1;/6+?9,,L9@;4^5>\#/>?)B1.CEJiZc/,8@WZLhIL;
%`I,R]k6.p?QdK^EA8fj-\a(2C+]*BGa\?s@9utdUo$\gd2*9e/o_NP^57,gZa*)fUa5.Rm*Od)\rk7',:s=5HF?7CDDq#SNmWjMK
%Ko_R/_GhRMEcNnpA\Nn:I2S%$AHLOTNNj%ekCAC_3Y\D6lG]X]]Q.Z<]\j9h:Fe=DfZZ9ko!m:cNYM5[QN[&TK,RPu1^AMpQCH_#
%EQ-9lQb%@a=M#Z`-*3&2C-agXLKV%e^KXoDJQ#9g!MCX573b:oYZ@VdbGHVVD7qc]/:mTO`jF"4qEn&][<^0!,4[T:hps]mfD^Qm
%i%^-5<@5aWo"F:sUUin8!nLE2X`i5Seb>=FXfOj^DM8m/lDu46-0LA']0tGo7(k6aEm\;dLHn#'QkS$FfmpQ4AZ_I@1Wl&'PRoe1
%bHQ"Mc5#Ku7E)"X2.=PY[DCT+lQ%i%p;S=F]rRp^*@Nr:1mBZdY)8^GU&-!L+=?W5(WgeJH<9EQFWM>O?q&/ecKt;"^+\4lAB!;@
%YOu;n=@l+qK6Nk%`mH`"6@m^^X*a1J"2S,Ie[ls$k1Y`VCM5,--Jc'C>uJ.3"(+(%pU"-_49:%uOfp'1*8`l%8GiQ2b&)S13B;Eg
%:YFm2G`o/W]6)KG?hO9IeCQho6KtS5C"p;M`D^jsD31/R9:ai5alVqp^KhiO^?n/aiR:SpI]sYKT>1E^Da.T__"mrtIeUOjBXBuf
%s6sm/l,rMiGtg5S%kIiX*Rna>3f."hg4A[KhH"mm<6N2SoFfTm0>40N[ak;O_!N.i.,\PH!QOk;&l*4^>;_)"D$L1f\1Le^!=?_?
%UWkKWreAVc&ajAq!LIshL6PD>Dmu9in$4LPs,!AUh1LH<oM#"ugm(:D:??uM"kkWE-Y_%d3ur%ShppX5+k2MX-&0Fq#)h,Y$2npr
%Z\OdXKWm73]<2H[alMb<7N\6pq;__:\VT]]b5%cbQW:SroJ<%FGD+!;4I8>s.)Xhae+<PIfAUsXibX?MIqtn#lR;O%$%P1l[$4;1
%f:ZRkqM*W%dl`,9eBtO6`+2@;*s_HZo*2\&ciSa=c#HAd>17JW!T5eTKt7_nR4-[ln?gT4iKt6IYA]e(6tc9i'YY^[5'APY*Pk&e
%O8.3qF'Vu$Dud!UPSeB'(dGmN%m9`7.e\)K-!qOkE+Qa@l$5%oE>r;E)4:ZEG?uQkRFe9a/8GpsLPsm"o$Hl!/t?T-g;QnH?("11
%1BsNB%%oAlPWirBH5sj,c_)(,?lGURc<9)$FHUTk(_(H_]sh70F>Il$FIEM7G8i[`id/u@\eA<h_7<3\^RNOE\m&KaGi4st[[jFf
%B]!uQ:kb'jk^t!B6rpF:V4[-O7P-,:[DR\H-?lhG;=>W0""Ypa:%%U,\^(d:3lnhV[)U1B%cK8aOYS<&i5M)a_O=lJ4<_#*S-P^t
%Jie1=l"7*9;Y$<2Kr)fR>4?^_WqRKBq>\+&8s<$dW7E-SF:IlS_FO'J-<MED;6D#EA^r,p1&+i#(gqiD[bK&nN-^R/@e5F5\jNtC
%LOX0*@?S61W8$DX,[,+i_S8)V-c>aS9PkBYHuCCP$DlV_]es?+j)g=+$IhJ%qJ\idC@H<>2b35qGo/c'CR-l%Tod7NgEadW<`!Kl
%W1qh6\<XS#2%R26OF)VS"(f@@Tg91nAseUt8tYd0r)thAC01-Vj'u$#E]V9U*:q^lgJeMe]X!MO#bh>FE8Q4KV";*#PR5taXW$I<
%E)JD5;F=Z$k$_?[88i_[2Tq*d2q:b"G70@.Gf<'i2(T>[p!C:qLhNE%PN.Nj;fE"C2p6,;B32?S5d:ar4&0Hc35dZ?^h2PB^_;\%
%d:*XU@eG;uVle8QhOea#)[1h%05e,C^2)!.ZXV!,BU-c4.P%Sa%9rM"(>8.VSGs@AC1N)MSj>"Yg]*hL0T>;s"qkjfAeLi#BFC!Q
%>:%'RV\*hsgks7&"g0i:XaE+;qX)WE^@8IYj]0t4-Z$g8N>N[KKQF7<1Xu/9[h*":HS'SKd4jc935Q(-)i=r_\d8%]L;le'(Z5#?
%s3;X<Ht@8O#o!"c\9Fl`VGW(^j;eTu+*JIdTPm;-@kaWmUX_(\_`L_0K`Vj]W5qe!<#DJ&/qQpED>%gSeYb9L,;A?rMmZf[-%u=Q
%M;[YQ7!+[QWs?-%6.uGhftQd4Vj=/)7'!8;@@M,QlX>sZ.m&IGn1Xi6M=!7a]ObAhZoNB0`%/^2kDrY$QAB&koXP-b;AHPiF;e$I
%;["7k#F5=Gf9*;5ZjnPdGatIcb/Fs%<5I<mJA[,fBk]qEgpFh1-m&_+Uq/XL3Y[QEP!>CWL!FdlFSRqV@_kf-_Q%t!O0s>"mZ1+b
%]7pZ=mnRs/n%,i'\+U<0Fi3P2.dQcAecRAE4R.C2Tb#"e#@itUl*m55M@C8j+cY9gj-7BlmP?HYFF:^1ha1+'M&#'E*sQOc/cD(`
%2/0"1b0c"Z@uP(9$L\B2bTX'b3t,c\`paW3kBQa$Q4oeNm]j-n4M/SRNZojlME-U[7li8sb`9WR_\-GHV7XW06fftje2DI#@AtWZ
%1>ML`L#*d:#H435PE108lB<m2Q-8d1mD7\l^1?`9qqec:X9h1I8Y25U'j(uWS9F4d!ND\=N/!/\UTY`NoSq&;%FNHpqGQ#d_RI)/
%&4*fL!a9Rq1#71GXUrib]r6;&O$^JKTg:TpZt4OGS[cRa#J"3^kEdkeJ&sg.I>@%5hseEch-\J1/q#G[NBsBI%gRo2ibTZTX"6?D
%731;!_&FYJ/t<K>?`'.Xi6Vu3+#8+e\2`EVk_4!(mAq>b&)6JdG6nE,$8kVK//9b_7>Q18cF(g:6T:$?^m%'9hc?//,,l]Nj%WT8
%Kj<)[E.*R1DkujN?5CG8SHPtG)>N80%'am3qX*.I?Ouhh`Z[5ll;^_gK4,kH`'#-i*lo98P:;*@7(XO&b`d)Zep%Y[e8&'EBC\g&
%U5+"9'<kNRL5:X7$6D<OVH(OH:eGJca*N:oJf8']>4<dui12##NG-(uBkIgYH%/N0#-m.Xi,1&O'.3"PGdLQ(Oh-I7)b\T;?2*/d
%>W2R>oPC*]JJb]o?&nXhR^b/!CQVOorfuB8/QXUZrmU$PJ,7E6EaRm&5TfXM5C`N8s75Or?_i[2T,22VLDX-Ld7)b7:9_<f1e2q+
%(8"pMDfCh>&b^!pDZi/o[^+J4d%,ot40^_L<L^&Eq"PKMf?]\i_ObZ%\cNdj>n1m\iA#GeAm>jZELa[SH<9HKC@N$?9Hb.^WO]%K
%3S,d,Sl0o9`^f950Athqoo,N,nr(Zb95ZSlV=EG7m9?<]SXI^FS>a;?b_1D]qJd:9>8$BI2gf5ACHc7gT[s412X\HC)Vpn7reABG
%@L"FlrFAejn!Sh0cU[Oa((+O`3_G/NH3Lp#@4\]d=+*%CKnqX`Ji:'fSU\"6QW#=N"'e`:h:PnT].=3oYF@\lLfQJmhieFc2Bo-:
%.t$(J)\R^GKgREp.kH+,.9o:pRtNDu#]>H(J.Fdl5D3U.FGe;Jd9-pLV.rs2s42O8,ThODi@Kj)ksTYhU3KkMmI7i`Q*HIOl666d
%ePP689stsZdNO9%(N`kt\\t^9#s85((TfDOrDP^[65<\c&!WW:>?<Fg,1bl9.)?l$6Nj;)lpF?*60=f`98OK>HWQDp'V6'*$MCdY
%+52G"]8h:KIH'b!Z\V*"EJRZIO?88S4%toqG^NVnpD/CNH<&1b`485sL1ZH@DHo)T19a8NdLl[[$f"9;#o+[mPW"\^)P*\o[!8X>
%&W7#=<?IEL%JJd=8E-0c%PiSb@?<S0:'L0Q8[dW]B-P_A\95bgG#tP:<W0gX_R#(VP>4q;$o=87]^\=sA/7<KH9G"YG^:jliPoUJ
%;^:gjoM5:KJ?k#_Vj<$E7;uRQ\gH$g@fe%sE/t3s-<nH&.ailp2MAr(g`5+V=LF0!Ye,);U$g#&(0J:=dKqa[lhGL['8:6omnfWg
%4\dbW<iEb$l@eFQA1(>`b-Ne,g3\)cYY^O/bq5KNNTJ/HojY1&pJLCrj22nHUBgtc8LI'&mVq%fmquIQ#3sdij!96n.#@+iA'-(b
%XfQ]'?5>4U,)FmX'<1I4W)[o[40[r4^30"r@riBsIKM-=B.WKGd%q[Q45aD4ZgQc6D34G\7`[W_j@.5MMRYD#S-30(L/$j[%9jKJ
%[6)#7oIJ<NI=9*0j-Q^!l\9b/\mUX0bNdIW;`bFJmN]Q*=D&PX?E[fTpf1!Ce'V)TVT5V$ncg5[PrA\;bSG-K^YBC%RBL(U:`1*b
%8L#Obb>A[DNi@1Yqe0mb8?P%_6O0m5/>gcg>2<VYf+jTCe1%(m4]6=b7!<[WP3&F-'j+t2SKN_O;"grT,]pFLT_!@DL]a/Xa`X"Y
%fUX;X1=;sO3P/,QP-^o$Mlu9TbljmE]hs:@h-@0a*>W57ii?nPW=M(Q^;%&Xkh>tD-<FY\*D$F.4_6nR1,Zg[W4,sgF`>c7GX.?b
%N'jIBCn$i[q0(A3TidAQF5?^jd,1MTg&^^'.\<O_;bV/R`8q>hc'4<Ne,*r?I0V`rR3770Um`rVkn/Ci8=&^HSP9BQM>^j.1LVo(
%jq!lL',t:Ygljh,7P`((,jAP08\>ac,GgG"QaGP3p@R6E7ph07U\k&j>Uf"=lhB<:lGor-?2sK5pV6S'j/6gsS1fAab5$$IbZYF1
%<6c;ID2r1<"a_rS`5fobn/J=hMhK3AAld+kESe3c]V,c-f%+o!WdUe+0B%ggZPc!^?9c)<B^`@qF8$rS^kM_pMQ\fm<=;o7&63nb
%Au#.LWQ4i],Y8Q+OLpj@$?WApPC!87_I;f"'n#IPhL?>]\.(gp91\s;;FXo9/mj-Y7$(IO^M]I?2S>-s[2>ZrQSA#[9")7m'b-Zd
%nF%8hEZ#Wroi!\Gg\hlo#8n/E1u.Ea94GSNJBOg)Pq1l2+b-)&b$_OVUQ?'a3[td4HYGig(;eBhorJ#WrTSMX)7DB23%414m&mVL
%j^khCr%1^(@SJ55Ae"sgbTRWTo**8gXW49AC#tFB>iXQEfG_jZah:bFE/h_(!*?AM;%?B>*N=$WXq@:jj;Qu^]c[ot29MA@"ImbR
%Sgh3l1-^q<(5sLHA"-n;ahf)eN@$dd,ZK_U?J8)q.Wgon$^<lR*r:=/ELC%[0W2\p?R"C7`Fl8s)A!$)at[4513#k6Cbi\:!8,H.
%`(^A/ic0ZLAjhNE2SR%!7b:'3bne#9!;CB66Z=6HM-e#X-QZbU)=;a2AKS)B$s"n3fb;JCXFr3`]>CP)'t$]9c"r<NiJM@-ck*!P
%.^6)l(HQZGP`VfiJ<Tj'q1.D=FYkTr3@/kI[[7<dDXR!--Gln:](*6AYs-SH_G-YRmF/eVLdSpkquYre31/MX'lgo:S\bM+`-:4L
%FSAIA3PA$b7VeYG$fASH1,Xm@TcMS>.#?D2ogG+a#7h8`RudQ68_Ilqb0c#%h9t"!)fg^XL>>l[+T0mB.Vm*V0!F'-OVW*bh#JVI
%`uH8mD=mct5D^-8_*b#+"l&RR8BP7:;iX>CVE4iIXPJNpK\c?TTZXptCD/'Qd4V=TI<MI0?!s+)A"_Qc[_X/*"fF*BO#msf8O.cn
%Bfl2\@\tgn?XPBMOLg<LC6MSs2N\S8-M?1a_Eg<.[>?]gMH<*3-U/<fap,85YWV")caStp%kdHmi^K!jSC).JbiIiaV_!lQIo>)g
%k67;h)]XT)Y_]XVKk@7`3fVhl5S0QsOps3`+u8D-'U2&EQ\0S1$Ym_sFY?FH39q6C]&u@I97jS_=N"i^)\8&HY!XApbgVDJ$]\o]
%qSV6^+^Xf.=#GRQ-!5`eSKO!aI^T:K5YQg7*@PIPN.-E@CU'(op+7UG"p6%nTIl&;ls4*HNgad<`TH6t/X8Ql(5RV`=Dg'8-6=#Q
%jADtPo_%7=2_.bCUE#j@/=Ztudm:3_*[]2F,@=R'oAi@`j_BanC++bo.Ashk!%_1@;96$I=k8_R)M#aEXP5lNe?VU0=hURESeZ&+
%(eC_a1sR?/S"$<()j(\J5a#rf&;[6U1@mhSU2:,[GnQB,6c^X[bk72?Y\9SMU@k'I(*=-bB'qZ,8N\NWd+%Q*4MkY0Y9:QjjXNVC
%=(@"2fO-<A:HSdB-"*u9-?0gm8(F3+75>?DWkl7MP+\)r'$oh`AFQBgjieS,7:-)PH/@Xo_5G:X;1.rY<@?p7>F]rpAbE2^^XW"r
%rRO2*5ir,F<&,7<'"W-Z"rYN=X[q+GR0s/`eYabMW/Ur:@k!q%`<X#BaP"O*DI.tdQBl=hiqk7WIJoU5OLUC9p,'+`rZ#\"cCl/f
%dNKW:p=;oAGF5Z$cUW2VZ<L4!b&1*+7jGLGChn]G`pTQ01I7+>/9IRY,]@+4>8!bI^T1Y":=AnfIh"8?h6?S(C3]Ak(&7%nqVfnI
%5Q:+imT$FhIGVHL'Q.i9@_-H@OJ-`Fh%krff)48Qp8sk-Go1":DW1pC;oCaoKITI8,Wt`nOJh@!r2Ku@`N4qmi=XCr5"fL%4,DZ4
%GR8<O69ff#+JBc<&i`H,(p-LEErCkmJMK&D=XdmknLOC/[l5o[\jO04a@3NRJj$")A-Y5RmlgOJ([fZ6In[qe.c%EP"f"0.UPk(J
%lk!]pjKr`PBd/M2K87GODEI2W^Ok40D:]TFD3M>)KPE9Ym,2%YW#^n>[R"g3a7d-:Lh5U65?'TWor%pV]V]5JlaA4@K82p+Putcj
%,Q)$_HR2H9#j3#.<OM4/k)?=!O<iRId5#)$FMku(H5oH'r$3QL@arsN<o5q$C\L2OUlR_&oAn760>>n7Z97Ro+27,#7sU+W+uU5-
%/R-bLh<Wc)BLMD+6Gg1ghI+VC@GiO.HBu"2`5#ISIVA*"3mRA]en)c;<2SWMbDP5j:M]tdEE:j,H+ACiKY>68n1'Q8V\-Y>>QuTg
%Xgj^nkO3rE<6"oM&j3*;]f;YO?,%ZY(#J0cD,@RDH`k2!lON))AP!$n-R6;GnA!)j4d"Hm>7thSm^\F=4%^_m^<+BC'ISB714U**
%,s5H7@H.j+PdJ?Khnus%4jQ!8;Z+(L84gf6_4llJlWFu2M]S_&^IafLXO<\2LrH]0H!6>4S2SIJ1Un188Nmb^OOEc?\P^-L>Oej'
%a4`a.c.KkZMpgCsd$)mt=OdXl^i=%/P2($PPK+s@W&.nk0/;TZoLRdKn[W__kF,d.QhZ[G65_3i"*Ds%`c"D]SZc/)l*DGkl$IW1
%'#]NYMV6VlpM'FJ>U%BR-"DI`l)`Vt7TfEsZ!=Z>e6qGdI'ug=/(+W7?ZkMo8#<gc9%fBp&gq8:GFAP'?'WW?Hq#lo$B)Pf@@)Zl
%Kc,3]<;GKeG$Rn78<tEmQSan`%GXM`ccQur8="PiFsJc`/::g!E\1`km0p.p#/5=R&?e)-W?k"\U,EdT;:o;RJ\hnl[=l)91^:2+
%1HeBu5\*X68dM.T6G4#pl9@FU`>1ET3p!V(h`9AI(s#e&GSHAb2qZDh2Mf?)L9[T@_`SE0WNV7*:9#gmAVeIE(P8"o*:W%I%"3-M
%#2=D-*8u?gb,l\+D"8u=G1Hj=>,H;&lfIo,+&!lL4K1kh\(i9nC3"5WT6b@NUMehVmDKR)eU\ja^9:/[&OSL6.2-NO2AjK)8BMkG
%gbW8E>*Xl;YcP^`8TgH@7e&.>k_mslIWUeCR>>:f_ZM*3S/X'F4\.#sNS(p=7H+u'QWUDhqm=PWZgDYhWtS,qPKGB8F[EHP4(`4q
%0lPIpF1Y)HW1S]tep3nMb.mM"/ecpcPAdj+NWm&3(%*lu-BR410ZEQ5_KXbj_'Ha/rNrNWDCI;D=%%s\_p)VGUdHFn%<W5FpLC)0
%c(Y(WWOM$kYjWW%[8!"rWpVPVJ"4a%D0"5okG$gq41JAhR;=eB%"fFL5b?/Y[56Ah8gdqR)On`M=TJUK0DH+:7mj$g.aBgr'VmgV
%4%'2n$oU?-,AJY[6-ud:r`'5/T)++@kCH$d?%bcsc,U3__kn"9ICk/4)R_Z"KMC=GSu0P"pr(<Oc_jItI+j^&\&f2!FgkM7j5M'f
%A_9N([A6uWUn5V*qNW'sK=Kos-Eg:L2p=.HR,poDHa/t0]+?06.!HMkBYP?*9d-U58?YKPH5di84sK`833819\P3W:F!/@[d^fCT
%>(qL(*ZuX1r`B*PADmu[@@PeHd8VC:@?fDp/ShA]L`b;aM@ssX#q2J&(L\&D!6qHM=gh)+&3f_WpY]NE7J2FSdHe=\Y]QNY,QDMp
%*3qr]eq#)9!OP@nGh4eXJHa(.e$6bUl,655li%Mm6ZbWSg_14oQ*;i)nriCs_<I`)V?Y__D9Jn"b>2mS+ue(Q3Ag]g^5jdolWlR"
%:L_;QER4)QGQ]D,YoT[!g)C@#]+"='='jSLFVCCZh7rP^.RbDrq79XL@k5-?S#HW%BZ[T8lu)5s(UY?.O=W^Sa\,0s5MJ'1ofL$*
%&[NPYp7'BXq#(-e3t$jequ"?-^\Qd%H$oJQo,kaHr:@QNSGi_23WIQ0??O!,RrmE1m@TEZcL%55;7b9L0<a$;GZBQ=aW>NV[W'@:
%q_s,0LdHf_ls*2c?\4U'r?@RUFoBWk6[;g:&UIHkbDIPj"^"#jURnc:ZH=%FQX[<u3*dr#oo4hWm,bcm#8)#f3rTc\^ZCgan#M@Q
%2:%'o0Zufc4Wj@M5'\D9MtR$A4UK^,;"8]?H]''dW%7(M;L58p=$!#S^u?R;,+srt5N@jI0\2EVY&`BBEJo8LrOod.KF:BXU42Kt
%8:1DdkUuC:`;)<h(@[B-bbpoj,\ZLIF-S'!TP1bL&K>3=9Il=^WtSb*[8/(0qo?pCG*EUOC>ASscmq\<_+6$^jd=C&(.i)rO*1@\
%$c):J[(V5$;)TS7-aXLRGT[-OM1R%H_bDhcA0g2ULqH8^ie".m*EMKbWX,k/ipY)?OHh0@M"2T;oq[[ud0!:=M\2CqTDRlhQjg>f
%8fpaVc/LYp&U-(IQP6A/6&W@?.=%9^)IXN'!ZIJ9Tas;R5qo`%N-O0FYZj&F+`:&_2gjo!'CeQs;_%#7i5DWlC>kdRV9GW'!h-P"
%nsU7(mb6iL:N?.=>=aCLgq8ahl%6B>>G;1#POfdYqVQZ(kDUe[!]R+-Pg,!i7s\:aL-BdBB:g]ng>?M)6!oXN#;Fg'3/?"M?uPCD
%/4rfse%r?7KtEkCY>C6KDHo#.,j&J`6VEr#(Eo1]1kb.:3Jl_ZFZuOnB6X]>eo$R9\g(8;ee))N"*U`?6['];l+<FQ/;B>na+DX0
%H//-fb"9'57sK:4#@qrOW'UWBO(o`4nY?1Hbi[NZ*lP[Jdo"CL6bId!P)snjZ?QJ+9HsFs>82_/gNHEZJ05ZuZPaO:Q(7du@IXP4
%nRg9cYJL?2RF4Q2c''uU'Q9IDL2GeF::tGf%ee&jo5.G(@.(eBE.gct8Qio%>qVP#b:\]>,"A)rKmj/#TN,8RBfZ8c]YR.M"jtgI
%l5slS(-ALoj&m'lb-l0*p3@]@dB7=/Y7rhuSd-N[MAId/$8iZW1meZf;g(`$mNbM[Vl;dKi(c\!gc^o&,gKdC:5R%pWB3WbVMTtM
%Wr8.0N85^MZSB.OG(r80b=Y,M6&IH8M)1M,,*I+H7K2((QaS1\pda`4[BJ(C"->WtOZZ-YR9M-U*.I+]1S3n3JsSX*%45H*R/5r+
%-_!<.B!c1iU:j?a476YH.tdt1EDfs6gdU@kgONNa[<Z_gm:V6pP=\%&LgY\&+;%DK)Q.nd<]//>Z0gBZ2m_k%@VjTcEIeYZ"RqA[
%bIJmdl$G4OXYjCTkqlm8DA1al@jBRI^+S0'aX"s?P$*@Uno:;QXMhAA0=XjuH==e+!b1nAH)hLo>V8IB66KJ`R9`f_,(@!Cq4rWG
%\>,Pu@SM$p>aJ,1!T0P1Zgs%fn2S<)*NSi!rZk;7+X6:D=2`7'-I";A=f;IN\p%c:UL[%"PZc.#DOZDuje'(9/!C=W$B0LAXA$bD
%I]V?5-CmhoAfV<TFd\PK;GmXnNF>S8V&%FT$p!u6o1I'Ye;<8AK?Ks2S%>5Oij+)t9#>$FkQP`nD4B3CCZ/'3U`"uAROA,m#Q=Og
%VgL>`Z;3LCM<)lGd,kj3WT4a\q;k!iY6P9A7F.U6fm'8"X9=bp0J?G'j6DIgm9Y(MIo;B@X8Z%^S"qj>X(an+R%(*K;e6Sp68'\P
%e>iW)k.B=M?P+"U6urh\JT3P!3"ne<llV/<XCkIW7,CnEiX%!6IW);iFU6DZ=F5XLocJp)*1H03b[13OQpM;B+r6SB$PCs`";Fc=
%e"aN!-c?jZ*1-<&JSs!+6XT<M>i$!+.eiJMC7_YPbt9(NWgFg()OcLTPcTna>%m%8jXAt>a<UW!k+Y>r@Fs>1KQFnN[gmj"@\Uo>
%,T3BQ>l>IDZg+L1gCZIkT1WZ2+gU4*U=*V(<@<Ui:ESC=_dpl$;R#)O$eO*gFQY".6,nYq42^JU_-rk)&S#hENo;fSnedC&rb^?`
%B.^<0h`3,5ZQs6rF4b4gO&cUWi'JChBt:?n#X=1C<LUI96*sdS,+c`[Q><;B9ccWSAidYF#\X61Ee6-;QCLA-;0;"Ddm&"hjd_%A
%c'(naYG=P9l,=(5SCcgIJgX"`Xl!0K)ro\N+0M[R/fmskme\)TniqX(q"J]CE\RM&R2l.^o^DZA[K$%Es82`or9*Nt-'`b&CZ$<7
%jjUCt2_"ag\"A0FL]?l0+$]__o7p-!I>;>ts/u=(&&8,&o8c+as24"15Q9F3ruVM1M@]^V+91s4pb2[:+9$aKaX-l~>
%AI9_PrivateDataEnd
